<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<window type="buttonMenu" id="111">
    <defaultcontrol always="true">3110</defaultcontrol>
    <zorder>10</zorder>
    <onload condition="$EXP[HasHomemenuAutoSlideOutAnimation]">CancelAlarm(slide_out,true)</onload>
    <onunload condition="$EXP[HasHomemenuAutoSlideOutAnimation]">AlarmClock(slide_out,SetFocus(2011),00:05,silent)</onunload>
    <controls>
        <include>GlobalOverlay</include>
        <control type="group">
            <include>Animation.ZoomIn</include>
            <include>Animation.FadeOut</include>
            <top>200</top>
            <centerleft>50%</centerleft>
            <width>466</width>
            <control type="group">
                <visible>Integer.IsGreater(Container(3110).NumItems,0)</visible>
                <control type="image">
                    <description>arrow image</description>
                    <centerleft>50%</centerleft>
                    <posy>-32</posy>
                    <include>arrowdimensions</include>
                    <texture colordiffuse="White70" flipy="true">common/arrow-small.png</texture>
                </control>
                <control type="image">
                    <description>arrow image</description>
                    <centerleft>50%</centerleft>
                    <posy>680</posy>
                    <include>arrowdimensions</include>
                    <texture colordiffuse="White70" flipy="false">common/arrow-small.png</texture>
                    <animation effect="slide" end="0,-135" time="0" condition="Integer.IsEqual(Container(3110).NumItems,6)">Conditional</animation>
                    <animation effect="slide" end="0,-205" time="0" condition="Integer.IsEqual(Container(3110).NumItems,5)">Conditional</animation>
                    <animation effect="slide" end="0,-275" time="0" condition="Integer.IsEqual(Container(3110).NumItems,4)">Conditional</animation>
                    <animation effect="slide" end="0,-345" time="0" condition="Integer.IsEqual(Container(3110).NumItems,3)">Conditional</animation>
                    <animation effect="slide" end="0,-415" time="0" condition="Integer.IsEqual(Container(3110).NumItems,2)">Conditional</animation>
                    <animation effect="slide" end="0,-485" time="0" condition="Integer.IsEqual(Container(3110).NumItems,1)">Conditional</animation>
                </control>
            </control>
            <control type="image">
                <description>background image</description>
                <posx>0</posx>
                <posy>-16</posy>
                <width>466</width>
                <height>210</height>
                <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
                <visible>Integer.IsEqual(Container(3110).NumItems,1)</visible>
            </control>
            <control type="image">
                <description>background image</description>
                <posx>0</posx>
                <posy>-16</posy>
                <width>466</width>
                <height>280</height>
                <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
                <visible>Integer.IsEqual(Container(3110).NumItems,2)</visible>
            </control>
            <control type="image">
                <description>background image</description>
                <posx>0</posx>
                <posy>-16</posy>
                <width>466</width>
                <height>350</height>
                <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
                <visible>Integer.IsEqual(Container(3110).NumItems,3)</visible>
            </control>
            <control type="image">
                <description>background image</description>
                <posx>0</posx>
                <posy>-16</posy>
                <width>466</width>
                <height>420</height>
                <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
                <visible>Integer.IsEqual(Container(3110).NumItems,4)</visible>
            </control>
            <control type="image">
                <description>background image</description>
                <posx>0</posx>
                <posy>-16</posy>
                <width>466</width>
                <height>490</height>
                <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
                <visible>Integer.IsEqual(Container(3110).NumItems,5)</visible>
            </control>
            <control type="image">
                <description>background image</description>
                <posx>0</posx>
                <posy>-16</posy>
                <width>466</width>
                <height>560</height>
                <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
                <visible>Integer.IsEqual(Container(3110).NumItems,6)</visible>
            </control>
            <control type="image">
                <description>background image</description>
                <posx>0</posx>
                <posy>-16</posy>
                <width>466</width>
                <height>630</height>
                <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
                <visible>Integer.IsEqual(Container(3110).NumItems,7)</visible>
            </control>
            <control type="image">
                <description>background image</description>
                <posx>0</posx>
                <posy>-16</posy>
                <width>466</width>
                <height>695</height>
                <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
                <visible>Integer.IsGreater(Container(3110).NumItems,7)</visible>
            </control>
            <control type="group">
                <left>25</left>
                <top>10</top>
                <control type="label">
                    <description>Header Label</description>
                    <left>70</left>
                    <width>1000</width>
                    <posy>0</posy>
                    <include>FontTop</include>
                    <textcolor>Dark2</textcolor>
                    <label>31151</label>
                </control>
                <include>Kodi_Logo</include>

                <!-- Lines -->
                <control type="image">
                    <top>70</top>
                    <left>17</left>
                    <width>388</width>
                    <height>1</height>
                    <bottom>10</bottom>
                    <colordiffuse>Black12</colordiffuse>
                    <texture>common/white.png</texture>
                </control>
            </control>
            <control type="list" id="3110">
                <top>100</top>
                <height min="100" max="570">auto</height>
                <bottom>16</bottom>
                <left>8</left>
                <right>8</right>
                <onup>3110</onup>
                <ondown>3110</ondown>
                <onleft>Close</onleft>
                <onright>Close</onright>
                <onback>300</onback>
                <orientation>vertical</orientation>
                <scrolltime>200</scrolltime>
                <itemlayout width="466" height="70">
                    <control type="label">
                        <align>left</align>
                        <left>30</left>
                        <aligny>center</aligny>
                        <width>100%</width>
                        <centertop>50%</centertop>
                        <height>100%</height>
                        <textcolor>Dark2</textcolor>
                        <include>DefContextButton</include>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </itemlayout>
                <focusedlayout width="466" height="70">
                    <control type="image">
                        <width>100%</width>
                        <height>100%</height>
                        <texture colordiffuse="$VAR[ColorSelectOtherBar]">common/white.png</texture>
                    </control>
                    <control type="image">
                        <width>100%</width>
                        <height>100%</height>
                        <texture border="8" colordiffuse="$VAR[ColorHighlightOtherBar]">common/gradient-box-wide.png</texture>
                    </control>
                    <control type="label">
                        <align>left</align>
                        <left>30</left>
                        <aligny>center</aligny>
                        <width>100%</width>
                        <centertop>50%</centertop>
                        <height>100%</height>
                        <textcolor>Selected</textcolor>
                        <include>DefContextButton</include>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </focusedlayout>
                <content>
                    <include>skinshortcuts-group-powermenu</include>
                </content>
            </control>
        </control>
    </controls>
</window>