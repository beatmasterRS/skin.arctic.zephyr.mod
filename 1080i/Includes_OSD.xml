<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="OSDFocusStop">
        <defaultcontrol always="true">15</defaultcontrol>
    </include>

    <include name="OSDFocusPause">
        <defaultcontrol always="true">14</defaultcontrol>
    </include>

    <include name="ChannelNumberInput">
        <control type="label" description="Total Time">
            <width>auto</width>
            <align>center</align>
            <centertop>50%</centertop>
            <centerleft>50%</centerleft>
            <height>100</height>
            <font>Clock</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$INFO[PVR.ChannelNumberInput]</label>
            <visible>!String.IsEmpty(PVR.ChannelNumberInput)</visible>
        </control>
    </include>

    <include name="OSDPVRInfoContent">
        <control type="group">
            <top>143</top>
            <height>64</height>
            <visible>VideoPlayer.Content(LiveTV) + Skin.HasSetting(pvr.showtechnicalinfo) + !Skin.HasSetting(osd.usethemeNewOSDSide)</visible>
            <include>Animation.ViHi.Settings</include>
            <control type="label">
                <left>0</left>
                <width>100%</width>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite30]</textcolor>
                <label>$LOCALIZE[19007]: $INFO[Pvr.ActStreamStatus]</label>
            </control>
            <control type="label">
                <right>0</right>
                <width>100%</width>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite30]</textcolor>
                <label>$LOCALIZE[19008]: $INFO[Pvr.ActStreamSignal]    $LOCALIZE[19009]: $INFO[Pvr.ActStreamSnr]    $LOCALIZE[19015]: $INFO[Pvr.ActStreamEncryptionName]</label>
                <align>right</align>
            </control>
        </control>
    </include>

    <!-- SIDE OSD -->
    <include name="OSDInfoContentSide">
        <control type="grouplist">
            <top>-620</top>
            <left>300</left>
            <width>340</width>
            <align>center</align>
            <orientation>vertical</orientation>
            <itemgap>12</itemgap>
            <animation effect="slide" start="0,0" end="0,-60" time="150" condition="VideoPlayer.Content(LiveTV)">Conditional</animation>

            <!-- TITLE CLEARLOGO -->
            <control type="image" description="clearlogo">
                <visible>!Skin.HasSetting(osd.showclearlogotitle) + !String.IsEmpty(Player.Art(clearlogo)) + !VideoPlayer.Content(episodes)</visible>
                <width>340</width>
                <height>124</height>
                <aspectratio align="center">keep</aspectratio>
                <texture background="true">$INFO[Player.Art(clearlogo)]</texture>
            </control>

            <!-- TITLE -->
            <control type="textbox" description="Show">
                <visible>!VideoPlayer.Content(episodes) + [Skin.HasSetting(osd.showclearlogotitle) | [!Skin.HasSetting(osd.showclearlogotitle) + String.IsEmpty(Player.Art(clearlogo))]]</visible>
                <height max="225">auto</height>
                <font>MediumBold3</font>
                <align>center</align>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[PlayerBigTitle]</label>
                <autoscroll>false</autoscroll>
            </control>
            <control type="textbox" description="Show">
                <visible>VideoPlayer.Content(episodes)</visible>
                <height max="225">auto</height>
                <font>MediumBold3</font>
                <align>center</align>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[VideoPlayer.TVShowTitle] - $INFO[VideoPlayer.Title]</label>
                <autoscroll>false</autoscroll>
            </control>

            <!-- RATING STARS -->
            <control type="grouplist">
                <width>340</width>
                <height>48</height>
                <orientation>horizontal</orientation>
                <align>center</align>
                <itemgap>12</itemgap>
                <usecontrolcoords>true</usecontrolcoords>
                <visible>!VideoPlayer.Content(livetv)</visible>
                <include content="Def_Flag">
                    <param name="Star" value="FlagstarVideo1" />
                    <param name="visible" value="!Skin.HasSetting(videoosd.numericrating)" />
                </include>
                <include content="Def_Flag">
                    <param name="Star" value="FlagstarVideo2" />
                    <param name="visible" value="!Skin.HasSetting(videoosd.numericrating)" />
                </include>
                <include content="Def_Flag">
                    <param name="Star" value="FlagstarVideo3" />
                    <param name="visible" value="!Skin.HasSetting(videoosd.numericrating)" />
                </include>
                <include content="Def_Flag">
                    <param name="Star" value="FlagstarVideo4" />
                    <param name="visible" value="!Skin.HasSetting(videoosd.numericrating)" />
                </include>
                <include content="Def_Flag">
                    <param name="Star" value="FlagstarVideo5" />
                    <param name="visible" value="!Skin.HasSetting(videoosd.numericrating)" />
                </include>
                <include content="Def_Flag">
                    <param name="Star" value="FlagstarVideo1" />
                    <param name="visible" value="Skin.HasSetting(videoosd.numericrating)" />
                </include>
                <control type="label">
                    <width>auto</width>
                    <height>48</height>
                    <label>$VAR[RatingLabelVideoPlayer]</label>
                    <aligny>center</aligny>
                    <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                    <font>Flag</font>
                    <textcolor>Dark1</textcolor>
                    <visible>Skin.HasSetting(videoosd.numericrating) + [Integer.IsGreater(VideoPlayer.Rating,0) | [Integer.IsGreater(VideoPlayer.UserRating,0) + Skin.HasSetting(userrating.override.rating)]]</visible>
                </control>
            </control>

            <!-- TAGLINE -->
            <control type="textbox" description="Show">
                <visible>!String.IsEmpty(Videoplayer.Tagline)</visible>
                <width>340</width>
                <left>285</left>
                <top>80</top>
                <height max="160">auto</height>
                <font>SmallNavi</font>
                <align>center</align>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[Videoplayer.Tagline]</label>
                <autoscroll>false</autoscroll>
            </control>
        </control>

        <!-- MEDIA-ICONS -->
        <control type="grouplist">
            <left>0</left>
            <width>640</width>
            <orientation>vertical</orientation>
            <top>425</top>
            <bottom>98</bottom>
            <itemgap>18</itemgap>
            <animation effect="slide" start="0,0" end="0,-130" time="150" condition="VideoPlayer.Content(LiveTV)">Conditional</animation>

            <!-- GENRE -->
            <control type="label" description="Show">
                <width>600</width>
                <left>0</left>
                <height>40</height>
                <font>Tiny</font>
                <align>left</align>
                <textcolor>$VAR[OSDPanelWhite30]</textcolor>
                <label fallback="19055">$INFO[VideoPlayer.Genre]</label>
            </control>
            <control type="grouplist">
                <visible>!Skin.HasSetting(osd.coloredicons) + Skin.HasSetting(furniture.flagiconsosd)</visible>
                <height>64</height>
                <orientation>horizontal</orientation>
                <itemgap>12</itemgap>
                <usecontrolcoords>true</usecontrolcoords>
                <control type="label" description="Video Info">
                    <width min="20" max="650">auto</width>
                    <height>40</height>
                    <top>10</top>
                    <font>Flag</font>
                    <textcolor>$VAR[OSDPanelWhite30]</textcolor>
                    <label>$INFO[VideoPlayer.VideoCodec,,  •  ]$INFO[VideoPlayer.VideoResolution,,  •  ]$INFO[VideoPlayer.VideoAspect,,  •  ]$VAR[ListItemAudioCodec,,]$VAR[LabelOSDAudioChannels,  •  ,]$VAR[ListItemHDR,  •  ,]</label>
                    <visible>!Skin.HasSetting(furniture.flagiconsosdnoicons) + Skin.HasSetting(furniture.flagiconsosd)</visible>
                </control>
                <control type="image">
                    <width min="20" max="60">auto</width>
                    <height>30</height>
                    <centertop>53%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$INFO[VideoPlayer.VideoResolution,flags/resolution/,.png]</texture>
                    <aspectratio align="left">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.VideoResolution) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image">
                    <width min="20" max="80">auto</width>
                    <height>48</height>
                    <centertop>53%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$INFO[VideoPlayer.VideoCodec,flags/white/source/,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.VideoCodec) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image">
                    <width min="20" max="80">auto</width>
                    <height>48</height>
                    <centertop>53%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$INFO[VideoPlayer.VideoAspect,flags/aspectratio/,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.VideoAspect) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image">
                    <width min="20" max="90">auto</width>
                    <height>56</height>
                    <centertop>53%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$VAR[ListItemAudioCodec,flags3/audio/,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.AudioCodec) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image">
                    <width min="20" max="70">auto</width>
                    <height>45</height>
                    <centertop>53%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$INFO[VideoPlayer.AudioChannels,flags/channels/,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.AudioChannels) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image" description="HDR10+">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/hdr10plus.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR10Plus]</visible>
                </control>
                <control type="image" description="HDR10">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/hdr10.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR10]</visible>
                </control>
                <control type="image" description="HDR">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/hdr.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR]</visible>
                </control>
                <control type="image"  description="HLG">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/hlg.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHLG]</visible>
                </control>
                <control type="image"  description="Dolby Vision">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/dolbyvision.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoDolbyVision]</visible>
                </control>
            </control>
            <control type="grouplist">
                <visible>Skin.HasSetting(osd.coloredicons) + Skin.HasSetting(furniture.flagiconsosd)</visible>
                <height>64</height>
                <orientation>horizontal</orientation>
                <itemgap>12</itemgap>
                <usecontrolcoords>true</usecontrolcoords>
                <control type="label" description="Video Info">
                    <width min="20" max="650">auto</width>
                    <height>40</height>
                    <top>10</top>
                    <font>Flag</font>
                    <textcolor>$VAR[OSDPanelWhite30]</textcolor>
                    <label>$INFO[VideoPlayer.VideoCodec,,  •  ]$INFO[VideoPlayer.VideoResolution,,  •  ]$INFO[VideoPlayer.VideoAspect,,  •  ]$VAR[ListItemAudioCodec,,]$VAR[LabelOSDAudioChannels,  •  ,]$VAR[ListItemHDR,  •  ,]</label>
                    <visible>!Skin.HasSetting(furniture.flagiconsosdnoicons) + Skin.HasSetting(furniture.flagiconsosd)</visible>
                </control>
                <control type="image">
                    <width min="20" max="70">auto</width>
                    <height>55</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">$INFO[VideoPlayer.VideoResolution,flags/color/resolution/,.png]</texture>
                    <aspectratio align="left">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.VideoResolution) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image">
                    <width min="20" max="80">auto</width>
                    <height>55</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">$INFO[VideoPlayer.VideoCodec,flags/color/source/,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.VideoCodec) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image">
                    <width min="20" max="80">auto</width>
                    <height>50</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">$INFO[VideoPlayer.VideoAspect,flags/color/aspectratio/,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.VideoAspect) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image">
                    <width min="20" max="98">auto</width>
                    <height>55</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">$VAR[ListItemAudioCodec,flags/color/audio/,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.AudioCodec) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image">
                    <width min="20" max="70">auto</width>
                    <height>55</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">$INFO[VideoPlayer.AudioChannels,flags/color/channels/,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(VideoPlayer.AudioChannels) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
                </control>
                <control type="image" description="HDR10+">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">flags/color/other/hdr10plus.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR10Plus]</visible>
                </control>
                <control type="image" description="HDR10">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">flags/color/other/hdr10.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR10]</visible>
                </control>
                <control type="image" description="HDR">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">flags/color/other/hdrnew.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR]</visible>
                </control>
                <control type="image" description="HLG">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">flags/color/other/hlg.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHLG]</visible>
                </control>
                <control type="image" description="Dolby Vision">
                    <width min="20" max="100">auto</width>
                    <height>60</height>
                    <centertop>53%</centertop>
                    <texture fallback="flags/fallback.png">flags/color/other/dolbyvision.png</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoDolbyVision]</visible>
                </control>
            </control>

            <!-- PLOT -->
            <control type="textbox" description="Plot">
                <width>100%</width>
                <height max="540">auto</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite30]</textcolor>
                <label fallback="19055">$VAR[PlayerPlotBox]$INFO[Window(home).Property(ResetScroll)]</label>
            </control>
        </control>
        <control type="group">
            <visible>!Window.IsVisible(videoosd)</visible>
            <animation effect="fade" start="0" end="100" delay="0" time="250">Visible</animation>
            <animation effect="fade" start="100" end="0" delay="0" time="250">Hidden</animation>
            <bottom>-10</bottom>

            <!-- PLAYER STATUS -->
            <control type="fadelabel">
                <visible>VideoPlayer.Content(episodes)</visible>
                <animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(videoosd)">Conditional</animation>
                <left>0</left>
                <width>100%</width>
                <bottom>30</bottom>
                <height>40</height>
                <font>Tiny</font>
                <pauseatend>6000</pauseatend>
                <scroll>false</scroll>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[PlayerStatus]</label>
                <label>$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E,]$INFO[VideoPlayer.Premiered,  •  ,]</label>
                <label>$INFO[Player.FinishTime,$LOCALIZE[31013] ]</label>
            </control>
            <control type="fadelabel">
                <visible>!VideoPlayer.Content(LiveTV) + !VideoPlayer.Content(episodes)</visible>
                <animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(videoosd)">Conditional</animation>
                <left>0</left>
                <width>100%</width>
                <bottom>30</bottom>
                <height>40</height>
                <font>Tiny</font>
                <pauseatend>6000</pauseatend>
                <scroll>false</scroll>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[PlayerStatus]</label>
                <label>$INFO[Player.FinishTime,$LOCALIZE[31013] ]</label>
            </control>
            <control type="fadelabel">
                <visible>VideoPlayer.Content(LiveTV) + !VideoPlayer.Content(episodes)</visible>
                <animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(videoosd)">Conditional</animation>
                <left>0</left>
                <width>100%</width>
                <bottom>30</bottom>
                <height>40</height>
                <font>Tiny</font>
                <pauseatend>6000</pauseatend>
                <scroll>false</scroll>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[PlayerStatus]</label>
                <label>$INFO[VideoPlayer.ChannelNumberLabel,,. ]$INFO[VideoPlayer.ChannelName]</label>
                <label>$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E,  •  ,]$INFO[VideoPlayer.Premiered]</label>
                <label>$INFO[PVR.EpgEventFinishTime,$LOCALIZE[31013] ]</label>
            </control>
            <control type="grouplist">
                <right>0</right>
                <bottom>6</bottom>
                <width>100%</width>
                <height>64</height>
                <orientation>horizontal</orientation>
                <align>right</align>
                <animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(videoosd)">Conditional</animation>
                <control type="label" description="Chapter-OSD">
                    <left>380</left>
                    <align>right</align>
                    <width>auto</width>
                    <height>40</height>
                    <font>Tiny</font>
                    <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                    <label>$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ,  •  ]</label>
                    <visible>!VideoPlayer.Content(LiveTV) + Player.HasVideo + !String.IsEqual(Player.ChapterCount,0) + !String.IsEqual(Player.ChapterCount,00)</visible>
                </control>
                <control type="label" description="Total Time">
                    <width>auto</width>
                    <align>right</align>
                    <height>40</height>
                    <font>Tiny</font>
                    <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                    <label>$INFO[Player.Time]  $INFO[Player.Duration,/  ]</label>
                    <visible>!VideoPlayer.Content(LiveTV) + String.IsEmpty(Player.SeekNumeric)</visible>
                </control>
                <control type="label" description="Total Time">
                    <width>auto</width>
                    <align>right</align>
                    <height>40</height>
                    <font>Tiny</font>
                    <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                    <label>$INFO[Player.SeekNumeric(hh:mm:ss)]  $INFO[Player.Duration,/  ]</label>
                    <visible>!VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.SeekNumeric)</visible>
                </control>
                <control type="label" description="Total Time">
                    <width>auto</width>
                    <align>right</align>
                    <height>40</height>
                    <font>Tiny</font>
                    <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                    <label>$INFO[PVR.EpgEventElapsedTime]  $INFO[PVR.EpgEventDuration,/  ]</label>
                    <visible>VideoPlayer.Content(LiveTV)</visible>
                </control>
            </control>

            <!-- PROGRESS BARS -->
            <control type="group">
                <left>0</left>
                <include>ProgressBarInfo</include>
            </control>
        </control>
    </include>

    <include name="OSDInfoContent">
        <animation effect="slide" start="0" end="0,-39" time="150" condition="VideoPlayer.Content(LiveTV) + Skin.HasSetting(pvr.showtechnicalinfo)">Conditional</animation>
        <right>0</right>
        <control type="grouplist">
            <animation effect="slide" start="0" end="0,-80" time="200" condition="Skin.HasSetting(osd.showplot)">Conditional</animation>
            <visible>!Skin.HasSetting(osd.coloredicons)</visible>
            <right>0</right>
            <centertop>60</centertop>
            <width>1400</width>
            <height>64</height>
            <orientation>horizontal</orientation>
            <align>right</align>
            <itemgap>12</itemgap>
            <usecontrolcoords>true</usecontrolcoords>
            <control type="label" description="Video Info">
                <width min="20" max="650">auto</width>
                <height>40</height>
                <top>10</top>
                <font>Flag</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[VideoPlayer.VideoCodec,,  •  ]$INFO[VideoPlayer.VideoResolution,,  •  ]$INFO[VideoPlayer.VideoAspect,,  •  ]$VAR[ListItemAudioCodec,,]$VAR[LabelOSDAudioChannels,  •  ,]$VAR[ListItemHDR,  •  ,]</label>
                <visible>!Skin.HasSetting(furniture.flagiconsosdnoicons) + Skin.HasSetting(furniture.flagiconsosd)</visible>
            </control>
            <control type="image">
                <width min="20" max="60">auto</width>
                <height>30</height>
                <centertop>53%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$INFO[VideoPlayer.VideoResolution,flags/resolution/,.png]</texture>
                <aspectratio align="left">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.VideoResolution) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image">
                <width min="20" max="80">auto</width>
                <height>48</height>
                <centertop>53%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$INFO[VideoPlayer.VideoCodec,flags/white/source/,.png]</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.VideoCodec) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image">
                <width min="20" max="80">auto</width>
                <height>48</height>
                <centertop>53%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$INFO[VideoPlayer.VideoAspect,flags/aspectratio/,.png]</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.VideoAspect) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image">
                <width min="20" max="90">auto</width>
                <height>56</height>
                <centertop>53%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$VAR[ListItemAudioCodec,flags3/audio/,.png]</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.AudioCodec) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image">
                <width min="20" max="70">auto</width>
                <height>45</height>
                <centertop>53%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">$INFO[VideoPlayer.AudioChannels,flags/channels/,.png]</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.AudioChannels) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>

            <control type="image" description="HDR10+">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>50%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/hdr10plus.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR10Plus]</visible>
            </control>
            <control type="image" description="HDR10">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>50%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/hdr10.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR10]</visible>
            </control>
            <control type="image" description="HDR">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>50%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/hdr.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR]</visible>
            </control>
            <control type="image" description="HLG">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>50%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/hlg.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHLG]</visible>
            </control>
            <control type="image" description="Dolby Vision">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>50%</centertop>
                <texture colordiffuse="$VAR[OSDPanelWhite70]" fallback="flags/fallback.png">flags/other/dolbyvision.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoDolbyVision]</visible>
            </control>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo1" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo2" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo3" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo4" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo5" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo1" />
                <param name="visible" value="[Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <control type="label">
                <width>auto</width>
                <height>64</height>
                <label>$VAR[RatingLabelVideoPlayer]</label>
                <aligny>center</aligny>
                <align>right</align>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <font>Flag</font>
                <textcolor>Dark1</textcolor>
                <visible>Skin.HasSetting(videoosd.numericrating) + [Integer.IsGreater(VideoPlayer.Rating,0) | [Integer.IsGreater(VideoPlayer.UserRating,0) + Skin.HasSetting(userrating.override.rating)]]</visible>
            </control>
        </control>
        <control type="grouplist">
            <visible>Skin.HasSetting(osd.coloredicons)</visible>
            <animation effect="slide" start="0" end="0,-80" time="200" condition="Skin.HasSetting(osd.showplot)">Conditional</animation>
            <right>0</right>
            <centertop>60</centertop>
            <width>1400</width>
            <height>64</height>
            <orientation>horizontal</orientation>
            <align>right</align>
            <itemgap>12</itemgap>
            <usecontrolcoords>true</usecontrolcoords>
            <control type="label" description="Video Info">
                <width min="20" max="650">auto</width>
                <height>40</height>
                <top>10</top>
                <font>Flag</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[VideoPlayer.VideoCodec,,  •  ]$INFO[VideoPlayer.VideoResolution,,  •  ]$INFO[VideoPlayer.VideoAspect,,  •  ]$VAR[ListItemAudioCodec,,]$VAR[LabelOSDAudioChannels,  •  ,]$VAR[ListItemHDR,  •  ,]</label>
                <visible>!Skin.HasSetting(furniture.flagiconsosdnoicons) + Skin.HasSetting(furniture.flagiconsosd)</visible>
            </control>
            <control type="image">
                <width min="20" max="70">auto</width>
                <height>55</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">$INFO[VideoPlayer.VideoResolution,flags/color/resolution/,.png]</texture>
                <aspectratio align="left">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.VideoResolution) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image">
                <width min="20" max="80">auto</width>
                <height>55</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">$INFO[VideoPlayer.VideoCodec,flags/color/source/,.png]</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.VideoCodec) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image">
                <width min="20" max="80">auto</width>
                <height>50</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">$INFO[VideoPlayer.VideoAspect,flags/color/aspectratio/,.png]</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.VideoAspect) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image">
                <width min="20" max="98">auto</width>
                <height>55</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">$VAR[ListItemAudioCodec,flags/color/audio/,.png]</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.AudioCodec) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image">
                <width min="20" max="70">auto</width>
                <height>55</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">$INFO[VideoPlayer.AudioChannels,flags/color/channels/,.png]</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + !String.IsEmpty(VideoPlayer.AudioChannels) + Skin.HasSetting(furniture.flagiconsosdnoicons)</visible>
            </control>
            <control type="image" description="HDR10+">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">flags/color/other/hdr10plus.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR10Plus]</visible>
            </control>
            <control type="image" description="HDR10">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">flags/color/other/hdr10.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR10]</visible>
            </control>
            <control type="image" description="HDR">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">flags/color/other/hdrnew.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHDR]</visible>
            </control>
            <control type="image" description="HLG">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">flags/color/other/hlg.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoHLG]</visible>
            </control>
            <control type="image" description="Dolby Vision">
                <width min="20" max="100">auto</width>
                <height>60</height>
                <centertop>53%</centertop>
                <texture fallback="flags/fallback.png">flags/color/other/dolbyvision.png</texture>
                <aspectratio align="center">keep</aspectratio>
                <visible>Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(furniture.flagiconsosdnoicons) + $EXP[IsVideoDolbyVision]</visible>
            </control>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo1" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo2" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo3" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo4" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo5" />
                <param name="visible" value="[!Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <include content="Def_Flag">
                <param name="Star" value="FlagstarVideo1" />
                <param name="visible" value="[Skin.HasSetting(videoosd.numericrating) + !VideoPlayer.Content(livetv)]" />
            </include>
            <control type="label">
                <width>auto</width>
                <height>64</height>
                <label>$VAR[RatingLabelVideoPlayer]</label>
                <aligny>center</aligny>
                <align>right</align>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <font>Flag</font>
                <textcolor>Dark1</textcolor>
                <visible>Skin.HasSetting(videoosd.numericrating) + [Integer.IsGreater(VideoPlayer.Rating,0) | [Integer.IsGreater(VideoPlayer.UserRating,0) + Skin.HasSetting(userrating.override.rating)]]</visible>
            </control>
        </control>
        <control type="group">

            <!-- Content gleich Episoden -->
            <left>0</left>
            <animation effect="slide" start="0" end="0,-80" time="200" condition="Skin.HasSetting(osd.showplot)">Conditional</animation>
            <visible>VideoPlayer.Content(episodes)</visible>
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="1100"/>
                <param name="visible" value="!Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="860"/>
                <param name="visible" value="Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>

            <!-- WITH POSTER -->
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="1220"/>
                <param name="visible" value="Skin.HasSetting(videoosd.numericrating) + !Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="1080"/>
                <param name="visible" value="!Skin.HasSetting(videoosd.numericrating) + !Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="770"/>
                <param name="visible" value="Skin.HasSetting(videoosd.numericrating) + Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="630"/>
                <param name="visible" value="!Skin.HasSetting(videoosd.numericrating) + Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>

            <!-- WITHOUT POSTER -->
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="1540"/>
                <param name="visible" value="Skin.HasSetting(videoosd.numericrating) + !Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="1400"/>
                <param name="visible" value="!Skin.HasSetting(videoosd.numericrating) + !Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="1090"/>
                <param name="visible" value="Skin.HasSetting(videoosd.numericrating) + Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTVShowTitle">
                <param name="width" value="950"/>
                <param name="visible" value="!Skin.HasSetting(videoosd.numericrating) + Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
        </control>
        <control type="group">

            <!-- Content alles ausser Episoden -->
            <animation effect="slide" start="0" end="0,-80" time="200" condition="Skin.HasSetting(osd.showplot)">Conditional</animation>
            <visible>!VideoPlayer.Content(episodes)</visible>
            <left>0</left>
            <align>left</align>
            <include content="DefOSDPlayerTitle">
                <param name="width" value="1100"/>
                <param name="visible" value="!Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTitle">
                <param name="width" value="840"/>
                <param name="visible" value="Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>

            <!-- WITH POSTER -->
            <include content="DefOSDPlayerTitle">
                <param name="width" value="1220"/>
                <param name="visible" value="Skin.HasSetting(videoosd.numericrating) + !Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTitle">
                <param name="width" value="1080"/>
                <param name="visible" value="!Skin.HasSetting(videoosd.numericrating) + !Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTitle">
                <param name="width" value="770"/>
                <param name="visible" value="Skin.HasSetting(videoosd.numericrating) + Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTitle">
                <param name="width" value="630"/>
                <param name="visible" value="!Skin.HasSetting(videoosd.numericrating) + Skin.HasSetting(furniture.flagiconsosd) + !Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>

            <!-- WITHOUT POSTER -->
            <include content="DefOSDPlayerTitle">
                <param name="width" value="1540"/>
                <param name="visible" value="Skin.HasSetting(videoosd.numericrating) + !Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTitle">
                <param name="width" value="1400"/>
                <param name="visible" value="!Skin.HasSetting(videoosd.numericrating) + !Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTitle">
                <param name="width" value="1090"/>
                <param name="visible" value="Skin.HasSetting(videoosd.numericrating) + Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
            <include content="DefOSDPlayerTitle">
                <param name="width" value="950"/>
                <param name="visible" value="!Skin.HasSetting(videoosd.numericrating) + Skin.HasSetting(furniture.flagiconsosd) + Skin.HasSetting(osd.disableposter) + Skin.HasSetting(osd.usethemeNewOSD)"/>
            </include>
        </control>
        <control type="group">

            <!-- WENN PVR NIIIICHT läuft-->
            <visible>!VideoPlayer.Content(LiveTV)</visible>
            <control type="fadelabel">
                <visible>!VideoPlayer.Content(episodes)</visible>
                <left>0</left>
                <include content="def_width" condition="Skin.HasSetting(ClockOSD) + !Skin.HasSetting(osd.usethemeNewOSD)">
                    <param name="width" value="1140" />
                </include>
                <include content="def_width" condition="Skin.HasSetting(ClockOSD) + Skin.HasSetting(osd.usethemeNewOSD)">
                    <param name="width" value="970" />
                </include>
                <include content="def_width" condition="!Skin.HasSetting(osd.usethemeNewOSD)">
                    <param name="width" value="940" />
                </include>
                <include content="def_width" condition="Skin.HasSetting(osd.usethemeNewOSD)">
                    <param name="width" value="770" />
                </include>
                <width>940</width>
                <bottom>30</bottom>
                <height>40</height>
                <font>Tiny</font>
                <pauseatend>6000</pauseatend>
                <scroll>false</scroll>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[PlayerStatus]</label>
                <label>$INFO[VideoPlayer.Tagline]</label>
                <label>$INFO[VideoPlayer.Genre]</label>
                <label>$INFO[VideoPlayer.Writer]</label>
                <label>$INFO[Player.FinishTime,$LOCALIZE[31013] ]</label>
            </control>
            <control type="fadelabel">
                <visible>VideoPlayer.Content(episodes)</visible>
                <left>0</left>
                <include content="def_width" condition="Skin.HasSetting(ClockOSD) + !Skin.HasSetting(osd.usethemeNewOSD)">
                    <param name="width" value="1140" />
                </include>
                <include content="def_width" condition="Skin.HasSetting(ClockOSD) + Skin.HasSetting(osd.usethemeNewOSD)">
                    <param name="width" value="970" />
                </include>
                <include content="def_width" condition="!Skin.HasSetting(osd.usethemeNewOSD)">
                    <param name="width" value="940" />
                </include>
                <include content="def_width" condition="Skin.HasSetting(osd.usethemeNewOSD)">
                    <param name="width" value="770" />
                </include>
                <width>940</width>
                <bottom>30</bottom>
                <height>40</height>
                <font>Tiny</font>
                <pauseatend>6000</pauseatend>
                <scroll>false</scroll>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[PlayerStatus]</label>
                <label>$INFO[VideoPlayer.Season,$LOCALIZE[20373] ,]$INFO[VideoPlayer.Episode,  •  $LOCALIZE[20359] ,]$INFO[VideoPlayer.Premiered,  •  ,]</label>
                <label>$INFO[Player.FinishTime,$LOCALIZE[31013] ]</label>
            </control>
        </control>
        <control type="group">

            <!-- WENN PVR läuft-->
            <visible>VideoPlayer.Content(LiveTV)</visible>
            <control type="fadelabel">
                <visible>!String.IsEmpty(VideoPlayer.NextTitle)</visible>
                <left>0</left>
                <width>1050</width>
                <bottom>30</bottom>
                <height>40</height>
                <font>Tiny</font>
                <pauseatend>6000</pauseatend>
                <scroll>false</scroll>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[PlayerStatus]</label>
                <label>$INFO[VideoPlayer.ChannelNumberLabel,,. ]$INFO[VideoPlayer.ChannelName]</label>
                <label>$INFO[VideoPlayer.Season,$LOCALIZE[20373] ,]$INFO[VideoPlayer.Episode,  •  $LOCALIZE[20359] ,  •  ]$INFO[VideoPlayer.Premiered]</label>
                <label>$INFO[VideoPlayer.NextTitle,$LOCALIZE[19031]: ]$INFO[VideoPlayer.NextStartTime, (,]$INFO[VideoPlayer.NextEndTime, - ,)]</label>
            </control>
            <control type="label">
                <visible>String.IsEmpty(VideoPlayer.NextTitle)</visible>
                <left>0</left>
                <width>1050</width>
                <bottom>30</bottom>
                <height>40</height>
                <font>Tiny</font>
                <scroll>false</scroll>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[PlayerStatus]</label>
            </control>
        </control>
        <control type="textbox" description="Plot">
            <width>100%</width>
            <top>15</top>
            <height>73</height>
            <font>Tiny</font>
            <align>justify</align>
            <textcolor>$VAR[OSDPanelWhite30]</textcolor>
            <label fallback="19055">$VAR[PlayerPlotBox]$INFO[Window(home).Property(ResetScroll)]</label>
            <visible>Skin.HasSetting(osd.showplot)</visible>
            <include>Animation.ViHi.Settings</include>
        </control>
        <control type="grouplist">
            <right>0</right>
            <centertop>122</centertop>
            <width>100%</width>
            <height>64</height>
            <orientation>horizontal</orientation>
            <align>right</align>
            <control type="label" description="Video Info">
                <width>auto</width>
                <align>right</align>
                <height>40</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$VAR[LabelOSDAudioChannels,,  •  ]$INFO[VideoPlayer.VideoResolution,,]  •  </label>
                <visible>false</visible>
            </control>
            <control type="label">
                <visible>!Skin.HasSetting(ClockOSD)</visible>
                <width>auto</width>
                <align>right</align>
                <height>40</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[System.Time] </label>
                <visible>Player.HasVideo</visible>
            </control>
            <control type="image">
                <visible>!Skin.HasSetting(ClockOSD)</visible>
                <centertop>10%</centertop>
                <width>30</width>
                <height>45</height>
                <align>right</align>
                <colordiffuse>$VAR[OSDPanelWhite30]</colordiffuse>
                <texture>kaitoast/finishtime2.png</texture>
                <visible>Player.HasVideo</visible>
            </control>
            <control type="label">
                <visible>!Skin.HasSetting(ClockOSD)</visible>
                <width>auto</width>
                <align>right</align>
                <height>40</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[Player.FinishTime]  •  </label>
                <visible>Player.HasVideo</visible>
                <visible>!VideoPlayer.Content(LiveTV)</visible>
            </control>
            <control type="label" description="Chapter-OSD">
                <left>380</left>
                <align>right</align>
                <width>auto</width>
                <height>40</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ,  •  ]</label>
                <visible>!VideoPlayer.Content(LiveTV) + Player.HasVideo + !String.IsEqual(Player.ChapterCount,0) + !String.IsEqual(Player.ChapterCount,00)</visible>
            </control>
            <control type="label">
                <visible>!Skin.HasSetting(ClockOSD)</visible>
                <width>auto</width>
                <align>right</align>
                <height>40</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[PVR.EpgEventFinishTime]  •  </label>
                <visible>Player.HasVideo</visible>
                <visible>VideoPlayer.Content(LiveTV)</visible>
            </control>
            <control type="label" description="Total Time">
                <width>auto</width>
                <align>right</align>
                <height>40</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[Player.Time]$INFO[Player.Duration,  /  ]</label>
                <visible>!VideoPlayer.Content(LiveTV) + String.IsEmpty(Player.SeekNumeric)</visible>
            </control>
            <control type="label" description="Total Time">
                <width>auto</width>
                <align>right</align>
                <height>40</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[Player.SeekNumeric(hh:mm:ss)]$INFO[Player.Duration,  /  ]</label>
                <visible>!VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.SeekNumeric)</visible>
            </control>
            <control type="label" description="Total Time">
                <width>auto</width>
                <align>right</align>
                <height>40</height>
                <font>Tiny</font>
                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                <label>$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration,  /  ]</label>
                <visible>VideoPlayer.Content(LiveTV)</visible>
            </control>
        </control>
        <control type="group">
            <left>0</left>
            <include>ProgressBarInfo</include>
        </control>
    </include>

    <include name="DefOSDButtons">
        <aligny>center</aligny>
        <align>center</align>
        <height>48</height>
        <font>Tiny</font>
        <disabledcolor>$VAR[OSDPanelWhite12]</disabledcolor>
        <textcolor>$VAR[OSDPanelWhite30]</textcolor>
        <focusedcolor>$VAR[ColorHighlight]</focusedcolor>
        <texturefocus />
        <width>216</width>
    </include>

    <include name="DefOSDButtonsNewOSD">
        <aligny>center</aligny>
        <align>center</align>
        <height>48</height>
        <font>Tiny</font>
        <disabledcolor>$VAR[OSDPanelWhite12]</disabledcolor>
        <textcolor>$VAR[OSDPanelWhite30]</textcolor>
        <focusedcolor>$VAR[ColorHighlight]</focusedcolor>
        <texturefocus />
        <width>140</width>
    </include>

    <include name="DefOSDUpDown">
        <onup condition="String.IsEmpty(Window(home).Property(osdshowinfo)) + !Window.IsVisible(MusicOSD.xml)">SetProperty(osdshowinfo,1,home)</onup>
        <onup condition="!String.IsEmpty(Window(home).Property(osdshowinfo)) + !Window.IsVisible(MusicOSD.xml)">ClearProperty(osdshowinfo,home)</onup>
        <ondown condition="String.IsEmpty(Window(home).Property(osdshowinfo)) + !Window.IsVisible(MusicOSD.xml)">SetProperty(osdshowinfo,1,home)</ondown>
        <ondown condition="!String.IsEmpty(Window(home).Property(osdshowinfo)) + !Window.IsVisible(MusicOSD.xml)">ClearProperty(osdshowinfo,home)</ondown>
        <onup condition="Window.IsVisible(MusicOSD.xml)">9100</onup>
        <ondown condition="Window.IsVisible(MusicOSD.xml)">9100</ondown>
    </include>
    
    <include name="DefControlsHomeUpDown">
        <onup>301</onup>
        <ondown>300</ondown>
        <onback>300</onback>
        <onfocus>SetProperty(controlsvisible,1,home)</onfocus>
        <onunfocus>ClearProperty(controlsvisible,home)</onunfocus>
        <onfocus condition="$EXP[HasHomemenuAutoSlideOutAnimation]">CancelAlarm(slide_out,true)</onfocus>
        <onunfocus condition="$EXP[HasHomemenuAutoSlideOutAnimation]">AlarmClock(slide_out,SetFocus(2011),00:05,silent)</onunfocus>
    </include>

    <include name="OSDVideosRight">
        <control type="button" id="5">
            <description>3D Mode</description>
            <align>right</align>
            <label>31117</label>
            <onclick>StereoMode</onclick>
            <include>DefOSDButtons</include>
            <enable>VideoPlayer.IsStereoscopic</enable>
            <disabledcolor>PanelWhite12</disabledcolor>
        </control>
        <control type="button" id="6">
            <description>BookMarks</description>
            <align>right</align>
            <include>DefOSDButtons</include>
            <label>298</label>
            <onclick>ActivateWindow(125)</onclick>
        </control>
    </include>

    <include name="OSDPVRRight">
        <control type="button" id="4">
            <description>CHANNELS</description>
            <align>right</align>
            <label>19019</label>
            <include>DefOSDButtons</include>
            <onclick>ActivateWindow(pvrosdchannels)</onclick>
        </control>
        <control type="button" id="5">
            <description>EPG</description>
            <align>right</align>
            <label>$LOCALIZE[19030] / $LOCALIZE[19031]</label>
            <onclick>ActivateWindow(pvrchannelguide)</onclick>
            <include>DefOSDButtons</include>
        </control>
        <control type="button" id="6">
            <description>TIMELINE</description>
            <align>right</align>
            <include>DefOSDButtons</include>
            <label>19032</label>
            <onclick>Close</onclick>
            <onclick>ActivateWindow(tvguide,,return)</onclick>
        </control>
    </include>

    <include name="OSDDVDMenu">
        <control type="button" id="4">
            <description>DVD Menu</description>
            <label>$LOCALIZE[31116]</label>
            <align>right</align>
            <include>DefOSDButtons</include>
            <onclick>PlayerControl(ShowVideoMenu)</onclick>
            <enable>VideoPlayer.HasMenu</enable>
            <disabledcolor>White12</disabledcolor>
        </control>
    </include>

    <include name="OSDExtraInfoTV">
        <control type="button" id="4">
            <description>Info</description>
            <label>31147</label>
            <align>right</align>
            <include>DefOSDButtons</include>
            <onclick>Close</onclick>
            <onclick>RunScript(script.embuary.info,call=tv,query=$INFO[VideoPlayer.TvShowTitle])</onclick>
            <disabledcolor>White12</disabledcolor>
        </control>
    </include>

    <include name="OSDExtraInfoMOVIES">
        <control type="button" id="4">
            <description>Info</description>
            <label>31147</label>
            <align>right</align>
            <include>DefOSDButtons</include>
            <onclick>Close</onclick>
            <onclick>RunScript(script.embuary.info,call=movie,query=$INFO[VideoPlayer.Title])</onclick>
            <disabledcolor>White12</disabledcolor>
        </control>
    </include>

    <include name="OSDVideosRightNewOSD">
        <control type="button" id="5">
            <description>3D Mode</description>
            <align>right</align>
            <label>31117</label>
            <onclick>StereoMode</onclick>
            <include>DefOSDButtonsNewOSD</include>
            <enable>VideoPlayer.IsStereoscopic</enable>
            <disabledcolor>PanelWhite12</disabledcolor>
        </control>
        <control type="button" id="6">
            <description>BookMarks</description>
            <align>right</align>
            <include>DefOSDButtonsNewOSD</include>
            <label>298</label>
            <onclick>ActivateWindow(125)</onclick>
        </control>
    </include>

    <include name="OSDPVRRightNewOSD">
        <control type="button" id="4">
            <description>CHANNELS</description>
            <align>right</align>
            <label>19019</label>
            <include>DefOSDButtonsNewOSD</include>
            <onclick>ActivateWindow(pvrosdchannels)</onclick>
        </control>
        <control type="button" id="5">
            <description>EPG</description>
            <align>right</align>
            <label>$LOCALIZE[19030] / $LOCALIZE[19031]</label>
            <onclick>ActivateWindow(pvrchannelguide)</onclick>
            <include>DefOSDButtonsNewOSD</include>
        </control>
        <control type="button" id="6">
            <description>TIMELINE</description>
            <align>right</align>
            <include>DefOSDButtonsNewOSD</include>
            <label>19032</label>
            <onclick>Close</onclick>
            <onclick>ActivateWindow(tvguide,,return)</onclick>
        </control>
    </include>

    <include name="OSDDVDMenuNewOSD">
        <control type="button" id="4">
            <description>DVD Menu</description>
            <label>$LOCALIZE[31116]</label>
            <align>right</align>
            <include>DefOSDButtonsNewOSD</include>
            <onclick>PlayerControl(ShowVideoMenu)</onclick>
            <enable>VideoPlayer.HasMenu</enable>
            <disabledcolor>White12</disabledcolor>
        </control>
    </include>

    <include name="OSDExtraInfoTVNewOSD">
        <control type="button" id="4">
            <description>Info</description>
            <label>31147</label>
            <align>right</align>
            <include>DefOSDButtonsNewOSD</include>
            <onclick>Close</onclick>
            <onclick>RunScript(script.embuary.info,call=tv,query=$INFO[VideoPlayer.TvShowTitle])</onclick>
            <disabledcolor>White12</disabledcolor>
        </control>
    </include>

    <include name="OSDExtraInfoMOVIESNewOSD">
        <control type="button" id="4">
            <description>Info</description>
            <label>31147</label>
            <align>right</align>
            <include>DefOSDButtonsNewOSD</include>
            <onclick>Close</onclick>
            <onclick>RunScript(script.embuary.info,call=movie,query=$INFO[VideoPlayer.Title])</onclick>
            <disabledcolor>White12</disabledcolor>
        </control>
    </include>

    <include name="OSDVideosRightNewOSDSide">
        <control type="button" id="50">
            <description>3D Mode</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/visualisation.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/visualisation.png</texturenofocus>
            <onclick>StereoMode</onclick>
            <visible>VideoPlayer.IsStereoscopic</visible>
        </control>
        <control type="button" id="51">
            <description>BookMarks</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/bookmarks.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/bookmarks.png</texturenofocus>
            <onclick>ActivateWindow(125)</onclick>
        </control>
    </include>

    <include name="OSDPVRRightNewOSDSide">
        <control type="button" id="4">
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/channels.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/channels.png</texturenofocus>
            <onclick>ActivateWindow(pvrosdchannels)</onclick>
        </control>
        <control type="button" id="5">
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/timeline.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/timeline.png</texturenofocus>
            <onclick>ActivateWindow(pvrchannelguide)</onclick>
        </control>
        <control type="button" id="33">
            <description>Settings</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/teletext.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/teletext.png</texturenofocus>
            <onclick>Dialog.Close(VideoOSD)</onclick>
            <onclick>ActivateWindow(Teletext)</onclick>
            <visible>VideoPlayer.HasTeletext</visible>
        </control>
        <control type="button" id="6">
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/guide.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/guide.png</texturenofocus>
            <onclick>Close</onclick>
            <onclick>ActivateWindow(tvguide,,return)</onclick>
        </control>
    </include>

    <include name="OSDDVDMenuNewOSDSide">
        <control type="button" id="52">
            <description>DVD Menu</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/dvdmenu.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/dvdmenu.png</texturenofocus>
            <onclick>PlayerControl(ShowVideoMenu)</onclick>
            <visible>VideoPlayer.HasMenu</visible>
        </control>
    </include>

    <include name="OSDExtraInfoTVNewOSDSide">
        <control type="button" id="4">
            <description>Info</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <onclick>Close</onclick>
            <onclick>RunScript(script.embuary.info,call=tv,query=$INFO[VideoPlayer.TvShowTitle])</onclick>
            <disabledcolor>White12</disabledcolor>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/info.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/info.png</texturenofocus>
        </control>
    </include>

    <include name="OSDExtraInfoMOVIESNewOSDSide">
        <control type="button" id="4">
            <description>Info</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <onclick>Close</onclick>
            <onclick>RunScript(script.embuary.info,call=movie,query=$INFO[VideoPlayer.Title])</onclick>
            <disabledcolor>White12</disabledcolor>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/info.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/info.png</texturenofocus>
        </control>
    </include>

    <include name="DefOSDButtonsNewOSDSide">
        <aligny>center</aligny>
        <align>center</align>
        <height>48</height>
        <font>Tiny</font>
        <disabledcolor>$VAR[OSDPanelWhite12]</disabledcolor>
        <textcolor>$VAR[OSDPanelWhite30]</textcolor>
        <focusedcolor>$VAR[ColorHighlight]</focusedcolor>
        <texturefocus />
        <width>210</width>
    </include>

    <variable name="MusicOSDBox">
        <value condition="Skin.HasSetting(osd.usethemeNewOSD)">PanelWhite70</value>
        <value>Box2</value>
    </variable>

    <variable name="OSDPanel">
        <value condition="Skin.HasSetting(osd.usethemeNewOSD) + !Window.IsVisible(script-embuary-video.xml) + !Window.IsVisible(script-embuary-person.xml) + !Window.IsVisible(script-embuary-image.xml)">ff1A1A1A</value>
        <value>Background</value>
    </variable>

    <variable name="OSDPanelPVR">
        <value condition="Skin.HasSetting(osd.usethemeNewOSD) + !Window.IsVisible(script-embuary-video.xml) + !Window.IsVisible(script-embuary-person.xml) + !Window.IsVisible(script-embuary-image.xml)">FF101010</value>
        <value>Background</value>
    </variable>

    <variable name="OSDPanelWhite12">
        <value condition="Skin.HasSetting(osd.usethemeNewOSD)">PanelWhite12</value>
        <value>Dark3</value>
    </variable>

    <variable name="OSDPanelWhite30">
        <value condition="Skin.HasSetting(osd.usethemeNewOSD)">PanelWhite90</value>
        <value>Dark2</value>
    </variable>

    <variable name="OSDPanelWhite70">
        <value condition="Skin.HasSetting(osd.usethemeNewOSD)">PanelWhite100</value>
        <value>Dark1</value>
    </variable>

    <variable name="OSDPanelWhite70Music">
        <value condition="Skin.HasSetting(osd.usethemeNewOSDMusic)">PanelWhite100</value>
        <value>Dark1</value>
    </variable>

    <variable name="OSDPanelWhite70-Kaitoast">
        <value condition="String.IsEqual(Control.GetLabel(400),kaitoast/info.png)">$VAR[OSDPanelWhite70]</value>
        <value>ffbbbbbb</value>
    </variable>

    <variable name="OSDPanelWhite100">
        <value condition="Skin.HasSetting(osd.usethemeNewOSD)">PanelWhite100</value>
        <value>Dark1</value>
    </variable>

    <include name="OSDControlsHome">
        <control type="button" id="12">
            <description>Skip Back</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/next.png</texturefocus>
            <texturenofocus colordiffuse="Dark2" flipx="true">osd/next.png</texturenofocus>
            <onclick>PlayerControl(Previous)</onclick>
        </control>
        <control type="button" id="13">
            <description>Rewind</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/ff.png</texturefocus>
            <texturenofocus colordiffuse="Dark2" flipx="true">osd/ff.png</texturenofocus>
            <onclick>PlayerControl(Rewind)</onclick>
            <enable>Player.SeekEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.SeekEnabled">Conditional</animation>
        </control>
        <control type="togglebutton" id="14">
            <description>Play/Pause</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <altlabel/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/pause.png</texturefocus>
            <texturenofocus colordiffuse="Dark2">osd/pause.png</texturenofocus>
            <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]">osd/play.png</alttexturefocus>
            <alttexturenofocus colordiffuse="Dark2">osd/play.png</alttexturenofocus>
            <onclick>PlayerControl(Play)</onclick>
            <enable>Player.PauseEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.PauseEnabled">Conditional</animation>
        </control>
        <control type="button" id="15">
            <description>Stop</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/stop.png</texturefocus>
            <texturenofocus colordiffuse="Dark2">osd/stop.png</texturenofocus>
            <onclick>PlayerControl(Stop)</onclick>
        </control>
        <control type="button" id="16">
            <description>Fast Forward</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/ff.png</texturefocus>
            <texturenofocus colordiffuse="Dark2">osd/ff.png</texturenofocus>
            <onclick>PlayerControl(Forward)</onclick>
            <enable>Player.SeekEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.SeekEnabled">Conditional</animation>
        </control>
        <control type="button" id="17">
            <description>Next</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/next.png</texturefocus>
            <texturenofocus colordiffuse="Dark2">osd/next.png</texturenofocus>
            <onclick>PlayerControl(Next)</onclick>
        </control>
        <control type="button" id="23">
            <description>Fullscreen</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/fullscreen.png</texturefocus>
            <texturenofocus colordiffuse="Dark2">osd/fullscreen.png</texturenofocus>
            <onclick condition="Player.HasVideo">ActivateWindow(fullscreenvideo)</onclick>
            <onclick condition="Player.HasAudio">ActivateWindow(visualisation)</onclick>
        </control>
        <control type="button" id="18">
            <description>Playlists</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/playlist2.png</texturefocus>
            <texturenofocus colordiffuse="Dark2">osd/playlist2.png</texturenofocus>
            <onclick condition="Player.HasAudio">ActivateWindow(musicplaylist)</onclick>
            <onclick condition="Player.HasVideo">ActivateWindow(videoplaylist)</onclick>
            <enable>!VideoPlayer.Content(livetv)</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="VideoPlayer.Content(livetv)">Conditional</animation>
        </control>
        <control type="togglebutton" id="22">
            <description>Rating</description>
            <include>OnFocusOnClick</include>
            <include>ClearOnFocusOnClick</include>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefControlsHomeUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/rating.png</texturefocus>
            <texturenofocus colordiffuse="Dark2">osd/rating.png</texturenofocus>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]">osd/rating_new.png</alttexturefocus>
            <alttexturenofocus colordiffuse="Dark2">osd/rating_new.png</alttexturenofocus>
            <usealttexture>!String.IsEmpty(MusicPlayer.UserRating)</usealttexture>
            <onclick>SetRating</onclick>
            <enable>MusicPlayer.Content(files) + !Player.HasVideo</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!MusicPlayer.Content(files) | Player.HasVideo">Conditional</animation>
        </control>
    </include>
    
    <include name="OSDAudioControlsFlip">
        <control type="button" id="1">
            <description>Repeat</description>
            <onclick>PlayerControl(Repeat)</onclick>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus />
            <texturenofocus />
        </control>
        <control type="group" id="501">
            <left>-64</left>
            <width>48</width>
            <height>48</height>
            <control type="image" description="repeat-one-nf">
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="Dark1">osd/repeat-one.png</texture>
                <visible>Playlist.IsRepeatOne</visible>
                <visible>!Control.HasFocus(1)</visible>
            </control>
            <control type="image" description="repeat-one-fo">
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="$VAR[ColorHighlight]">osd/repeat-one.png</texture>
                <visible>Playlist.IsRepeatOne</visible>
                <visible>Control.HasFocus(1)</visible>
            </control>
            <control type="image" description="repeat-all-nf">
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="Dark1">osd/repeat-all.png</texture>
                <visible>Playlist.IsRepeat</visible>
                <visible>!Control.HasFocus(1)</visible>
            </control>
            <control type="image" description="repeat-all-fo">
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="$VAR[ColorHighlight]">osd/repeat-all.png</texture>
                <visible>Playlist.IsRepeat</visible>
                <visible>Control.HasFocus(1)</visible>
            </control>
            <control type="image" description="repeat-off-nf">
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="Dark1">osd/repeat-off.png</texture>
                <visible>!Playlist.IsRepeatOne + !Playlist.IsRepeat</visible>
                <visible>!Control.HasFocus(1)</visible>
            </control>
            <control type="image" description="repeat-off-fo">
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="$VAR[ColorHighlight]">osd/repeat-off.png</texture>
                <visible>!Playlist.IsRepeatOne + !Playlist.IsRepeat</visible>
                <visible>Control.HasFocus(1)</visible>
            </control>
        </control>
        <control type="togglebutton" id="6">
            <onleft>1</onleft>
            <onright>2</onright>
            <description>Random</description>
            <onclick>PlayerControl(Random)</onclick>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/noshuffle.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/noshuffle.png</texturenofocus>
            <alttexturenofocus colordiffuse="Dark1">osd/shuffle.png</alttexturenofocus>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]">osd/shuffle.png</alttexturefocus>
        </control>
        <control type="togglebutton" id="2">
            <description>Lyrics</description>
            <onclick condition="!System.HasAddon(script.cu.lrclyrics)">InstallAddon(script.cu.lrclyrics)</onclick>
            <onclick condition="System.HasAddon(script.cu.lrclyrics)">RunScript(script.cu.lrclyrics)</onclick>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/lyrics.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/lyrics.png</texturenofocus>
            <alttexturenofocus colordiffuse="$VAR[OSDPanelWhite12]">osd/lyrics.png</alttexturenofocus>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]">osd/lyrics.png</alttexturefocus>
            <usealttexture>!System.HasAddon(script.cu.lrclyrics)</usealttexture>
        </control>
        <control type="button" id="12">
            <description>Skip Back</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/next.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/next.png</texturenofocus>
            <onclick>PlayerControl(Previous)</onclick>
        </control>
        <control type="button" id="13">
            <description>Rewind</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/ff.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/ff.png</texturenofocus>
            <onclick>PlayerControl(Rewind)</onclick>
            <enable>Player.SeekEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.SeekEnabled">Conditional</animation>
        </control>
        <control type="togglebutton" id="14">
            <description>Play/Pause</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <altlabel/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/pause.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/pause.png</texturenofocus>
            <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]">osd/play.png</alttexturefocus>
            <alttexturenofocus colordiffuse="Dark1">osd/play.png</alttexturenofocus>
            <onclick>PlayerControl(Play)</onclick>
            <enable>Player.PauseEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.PauseEnabled">Conditional</animation>
        </control>
        <control type="button" id="15">
            <description>Stop</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/stop.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/stop.png</texturenofocus>
            <onclick>PlayerControl(Stop)</onclick>
        </control>
        <control type="button" id="16">
            <description>Fast Forward</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/ff.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/ff.png</texturenofocus>
            <onclick>PlayerControl(Forward)</onclick>
            <enable>Player.SeekEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.SeekEnabled">Conditional</animation>
        </control>
        <control type="button" id="17">
            <description>Next</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/next.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/next.png</texturenofocus>
            <onclick>PlayerControl(Next)</onclick>
        </control>
        <control type="button" id="21">
            <description>Playlist</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/playlist2.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/playlist2.png</texturenofocus>
            <onclick>Close</onclick>
            <onclick>ActivateWindow(musicplaylist)</onclick>
        </control>
        <control type="togglebutton" id="22">
            <description>Rating</description>
            <include>OnFocusOnClick</include>
            <include>ClearOnFocusOnClick</include>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/rating.png</texturefocus>
            <texturenofocus colordiffuse="Dark2">osd/rating.png</texturenofocus>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]">osd/rating_new.png</alttexturefocus>
            <alttexturenofocus colordiffuse="Dark2">osd/rating_new.png</alttexturenofocus>
            <usealttexture>!String.IsEmpty(MusicPlayer.UserRating)</usealttexture>
            <onclick>SetRating</onclick>
        </control>
        <control type="button" id="24">
            <description>Settings</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/preset.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/preset.png</texturenofocus>
            <onclick>ActivateWindow(1120)</onclick>
        </control>
    </include>

    <include name="OSDVideoControlsFlip">
        <control type="togglebutton" id="9003">
            <description>Record</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/record.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/record.png</texturenofocus>
            <usealttexture>Pvr.IsRecordingPlayingChannel</usealttexture>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/record-on.png</alttexturefocus>
            <alttexturenofocus colordiffuse="Dark1" flipx="true">osd/record-on.png</alttexturenofocus>
            <onclick>PVR.ToggleRecordPlayingChannel</onclick>
            <enable>PVR.CanRecordPlayingChannel</enable>
            <visible>VideoPlayer.Content(LiveTV)</visible>
            <animation effect="fade" start="100" end="33" time="100" condition="!PVR.CanRecordPlayingChannel">Conditional</animation>
        </control>
        <control type="button" id="12">
            <description>Skip Back</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/next.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/next.png</texturenofocus>
            <onclick>PlayerControl(Previous)</onclick>
        </control>
        <control type="button" id="13">
            <description>Rewind</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/ff.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/ff.png</texturenofocus>
            <onclick>PlayerControl(Rewind)</onclick>
            <enable>Player.SeekEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.SeekEnabled">Conditional</animation>
        </control>
        <control type="togglebutton" id="14">
            <description>Play/Pause</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <altlabel/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/pause.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/pause.png</texturenofocus>
            <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]">osd/play.png</alttexturefocus>
            <alttexturenofocus colordiffuse="Dark1">osd/play.png</alttexturenofocus>
            <onclick>PlayerControl(Play)</onclick>
            <enable>Player.PauseEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.PauseEnabled">Conditional</animation>
        </control>
        <control type="button" id="15">
            <description>Stop</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/stop.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/stop.png</texturenofocus>
            <onclick>PlayerControl(Stop)</onclick>
        </control>
        <control type="button" id="16">
            <description>Fast Forward</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/ff.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/ff.png</texturenofocus>
            <onclick>PlayerControl(Forward)</onclick>
            <enable>Player.SeekEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.SeekEnabled">Conditional</animation>
        </control>
        <control type="button" id="17">
            <description>Next</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/next.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/next.png</texturenofocus>
            <onclick>PlayerControl(Next)</onclick>
        </control>
        <control type="button" id="9002">
            <width>48</width>
            <height>48</height>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/eject.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/eject.png</texturenofocus>
            <onclick>EjectTray()</onclick>
            <visible>System.HasMediadvd</visible>
        </control>
        <control type="button" id="20">
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <onclick condition="!Skin.HasSetting(osd.usethemeNewOSDSide)">SetFocus(9950)</onclick>
            <onup condition="!Skin.HasSetting(osd.usethemeNewOSDSide)">SetFocus(9950)</onup>
            <onclick condition="Skin.HasSetting(osd.usethemeNewOSDSide)">SetFocus(9960)</onclick>
            <onup condition="Skin.HasSetting(osd.usethemeNewOSDSide)">SetFocus(9960)</onup>
            <visible>Player.TempoEnabled</visible>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/tempo.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/tempo.png</texturenofocus>
        </control>
        <control type="button" id="18">
            <description>Settings</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/plot.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/plot.png</texturenofocus>
            <onclick>SetFocus(9601)</onclick>
            <onclick>SetProperty(dontautoclose,1,home)</onclick>
        </control>
        <control type="button" id="32">
            <description>Settings</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/teletext.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/teletext.png</texturenofocus>
            <onclick>Dialog.Close(VideoOSD)</onclick>
            <onclick>ActivateWindow(Teletext)</onclick>
            <visible>VideoPlayer.HasTeletext</visible>
        </control>
        <control type="button" id="33">
            <description>Playlist</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/playlist2.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/playlist2.png</texturenofocus>
            <onclick>Dialog.Close(all,true)</onclick>
            <onclick>ActivateWindow(videoplaylist)</onclick>
            <visible>Integer.IsGreater(Playlist.Length(video),1) + !Pvr.IsPlayingTv</visible>
        </control>
        <control type="button" id="19">
            <description>Settings</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/preset.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/preset.png</texturenofocus>
            <onclick>ActivateWindow(1197)</onclick>
            <onclick>SetFocus(9000)</onclick>
        </control>
    </include>

    <include name="OSDVideoControlsFlipNewOSD">
        <control type="togglebutton" id="9003">
            <description>Record</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/record.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]" flipx="true">osd/record.png</texturenofocus>
            <usealttexture>Pvr.IsRecordingPlayingChannel</usealttexture>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/record-on.png</alttexturefocus>
            <alttexturenofocus colordiffuse="$VAR[OSDPanelWhite30]" flipx="true">osd/record-on.png</alttexturenofocus>
            <onclick>PVR.ToggleRecordPlayingChannel</onclick>
            <enable>PVR.CanRecordPlayingChannel</enable>
            <visible>VideoPlayer.Content(LiveTV)</visible>
            <animation effect="fade" start="100" end="33" time="100" condition="!PVR.CanRecordPlayingChannel">Conditional</animation>
        </control>
        <control type="button" id="12">
            <description>Skip Back</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/next.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]" flipx="true">osd/next.png</texturenofocus>
            <onclick>PlayerControl(Previous)</onclick>
        </control>
        <control type="button" id="13">
            <description>Rewind</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/ff.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]" flipx="true">osd/ff.png</texturenofocus>
            <onclick>PlayerControl(Rewind)</onclick>
            <enable>Player.SeekEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.SeekEnabled">Conditional</animation>
        </control>
        <control type="togglebutton" id="14">
            <description>Play/Pause</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <altlabel/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/pause.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]">osd/pause.png</texturenofocus>
            <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
            <alttexturefocus colordiffuse="$VAR[ColorHighlight]">osd/play.png</alttexturefocus>
            <alttexturenofocus colordiffuse="$VAR[OSDPanelWhite30]">osd/play.png</alttexturenofocus>
            <onclick>PlayerControl(Play)</onclick>
            <enable>Player.PauseEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.PauseEnabled">Conditional</animation>
        </control>
        <control type="button" id="15">
            <description>Stop</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/stop.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]">osd/stop.png</texturenofocus>
            <onclick>PlayerControl(Stop)</onclick>
        </control>
        <control type="button" id="16">
            <description>Fast Forward</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/ff.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]">osd/ff.png</texturenofocus>
            <onclick>PlayerControl(Forward)</onclick>
            <enable>Player.SeekEnabled</enable>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.SeekEnabled">Conditional</animation>
        </control>
        <control type="button" id="17">
            <description>Next</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/next.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]">osd/next.png</texturenofocus>
            <onclick>PlayerControl(Next)</onclick>
        </control>
        <control type="button" id="9002">
            <width>48</width>
            <height>48</height>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/eject.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]">osd/eject.png</texturenofocus>
            <onclick>EjectTray()</onclick>
            <visible>System.HasMediadvd</visible>
        </control>
        <control type="button" id="20">
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <onclick>SetFocus(9800)</onclick>
            <onup>SetFocus(9800)</onup>
            <visible>Player.TempoEnabled</visible>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/tempo.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/tempo.png</texturenofocus>
        </control>
        <control type="button" id="18">
            <description>Settings</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/plot.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]">osd/plot.png</texturenofocus>
            <onclick>SetFocus(9601)</onclick>
            <onclick>SetProperty(dontautoclose,1,home)</onclick>
        </control>
        <control type="button" id="31">
            <description>Settings</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/teletext.png</texturefocus>
            <texturenofocus colordiffuse="Dark1" flipx="true">osd/teletext.png</texturenofocus>
            <onclick>Dialog.Close(VideoOSD)</onclick>
            <onclick>ActivateWindow(Teletext)</onclick>
            <visible>VideoPlayer.HasTeletext</visible>
        </control>
        <control type="button" id="33">
            <description>Playlist</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/playlist2.png</texturefocus>
            <texturenofocus colordiffuse="Dark1">osd/playlist2.png</texturenofocus>
            <onclick>Dialog.Close(all,true)</onclick>
            <onclick>ActivateWindow(videoplaylist)</onclick>
            <visible>Integer.IsGreater(Playlist.Length(video),1) + !Pvr.IsPlayingTv</visible>
        </control>
        <control type="button" id="19">
            <description>Settings</description>
            <width>48</width>
            <height>48</height>
            <label/>
            <font />
            <include>DefOSDUpDown</include>
            <texturefocus colordiffuse="$VAR[ColorHighlight]" flipx="true">osd/preset.png</texturefocus>
            <texturenofocus colordiffuse="$VAR[OSDPanelWhite30]" flipx="true">osd/preset.png</texturenofocus>
            <onclick>ActivateWindow(1197)</onclick>
            <onclick>SetFocus(9000)</onclick>
        </control>
    </include>

    <include name="Furniture_OSDClock">
        <control type="group">
            <visible>Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | Player.ShowInfo | Window.IsVisible(fullscreeninfo) | Window.IsVisible(videoosd) | !String.IsEmpty(Player.SeekNumeric)</visible>
            <visible>!Window.IsVisible(DialogNotification.xml)</visible>
            <visible>!Window.IsVisible(DialogVolumeBar.xml)</visible>
            <right>70</right>
            <posy>70</posy>
            <width>550</width>
            <height>100</height>
            <include>Animation.FadeIn</include>
            <control type="group">
                <visible>Player.Paused</visible>
                <posx>-400</posx>
                <posy>440</posy>
                <height>100</height>
                <width>100</width>
                <visible>!Skin.HasSetting(HidePlayPauseInfo)</visible>
                <control type="image" description="Back">
                    <left>0</left>
                    <centertop>50%</centertop>
                    <width>100</width>
                    <height>100</height>
                    <aspectratio align="center" aligny="center">keep</aspectratio>
                    <texture>progress/back.png</texture>
                    <animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
                </control>
                <control type="image" description="Pause">
                    <left>0</left>
                    <centertop>50%</centertop>
                    <width>100</width>
                    <height>100</height>
                    <aspectratio align="center" aligny="center">keep</aspectratio>
                    <texture colordiffuse="FFFFFFFF">progress/pause.png</texture>
                    <animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
                    <visible>Player.Paused</visible>
                </control>
                <control type="progress" id="933">
                    <texturebg />
                    <lefttexture />
                    <midtexture />
                    <righttexture />
                    <info>Player.Progress</info>
                    <visible>false</visible>
                </control>
                <control type="image">
                    <left>0</left>
                    <centertop>50%</centertop>
                    <width>100</width>
                    <height>100</height>
                    <texture colordiffuse="$VAR[ColorHighlight]">$INFO[Control.GetLabel(933),progress/circle/p,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <visible>!String.IsEmpty(Player.Duration)</visible>
                </control>
            </control>
            <control type="group">
                <visible>Skin.HasSetting(ClockOSD)</visible>
                <include>Animation.ViHi</include>
                <control type="image">
                    <description>background image</description>
                    <posx>0</posx>
                    <posy>0</posy>
                    <width>100%</width>
                    <height>100%</height>
                    <colordiffuse>$VAR[OSDPanel]</colordiffuse>
                    <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
                    <texture border="16">common/rounded-shadow8.png</texture>
                    <visible>Player.HasVideo</visible>
                </control>
                <control type="image">
                    <description>background image</description>
                    <right>0</right>
                    <posy>0</posy>
                    <width>50%</width>
                    <height>100%</height>
                    <colordiffuse>$VAR[OSDPanel]</colordiffuse>
                    <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
                    <texture border="16">common/rounded-shadow8.png</texture>
                    <visible>!Player.HasVideo</visible>
                </control>
                <control type="image">
                    <left>7</left>
                    <top>7</top>
                    <right>7</right>
                    <bottom>7</bottom>
                    <texture colordiffuse="$VAR[ColorBorder]" border="4" background="true">common/box21.png</texture>
                    <animation effect="fade" start="100" end="80" condition="Skin.HasSetting(osd.usethemeNewOSD)">Conditional</animation>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                </control>
                <control type="group">
                    <animation effect="slide" start="0" end="240" condition="!Player.HasVideo">Conditional</animation>
                    <control type="image">
                        <left>30</left>
                        <centertop>50%</centertop>
                        <width>48</width>
                        <height>48</height>
                        <aspectratio aligny="center">keep</aspectratio>
                        <colordiffuse>$VAR[OSDPanelWhite70]</colordiffuse>
                        <texture>kaitoast/clock.png</texture>
                    </control>
                    <control type="label">
                        <visible>!VideoPlayer.Content(LiveTV)</visible>
                        <right>55%</right>
                        <left>SidePad</left>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Small</font>
                        <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                        <label>$INFO[System.Time]</label>
                    </control>
                    <control type="label">
                        <visible>VideoPlayer.Content(LiveTV)</visible>
                        <right>55%</right>
                        <left>SidePad</left>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Small</font>
                        <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                        <label>$INFO[System.Time]</label>
                    </control>
                    <control type="image">
                        <centerleft>50%</centerleft>
                        <centertop>50%</centertop>
                        <width>48</width>
                        <height>48</height>
                        <aspectratio aligny="center">keep</aspectratio>
                        <colordiffuse>$VAR[OSDPanelWhite70]</colordiffuse>
                        <texture>kaitoast/arrow.png</texture>
                        <visible>Player.HasVideo</visible>
                    </control>
                    <control type="image">
                        <right>30</right>
                        <centertop>50%</centertop>
                        <width>48</width>
                        <height>48</height>
                        <aspectratio aligny="center">keep</aspectratio>
                        <colordiffuse>$VAR[OSDPanelWhite70]</colordiffuse>
                        <texture>kaitoast/finishtime.png</texture>
                        <visible>Player.HasVideo</visible>
                    </control>
                    <control type="label">
                        <visible>!VideoPlayer.Content(LiveTV)</visible>
                        <right>SidePad</right>
                        <left>55%</left>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Small</font>
                        <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                        <label>$INFO[Player.FinishTime]</label>
                        <visible>Player.HasVideo</visible>
                    </control>
                    <control type="label">
                        <visible>VideoPlayer.Content(LiveTV)</visible>
                        <right>SidePad</right>
                        <left>55%</left>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <font>Small</font>
                        <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                        <label>$INFO[PVR.EpgEventFinishTime]</label>
                        <visible>Player.HasVideo</visible>
                    </control>
                </control>
            </control>
        </control>
        <control type="group">
            <visible>!Window.IsVisible(DialogNotification.xml)</visible>
            <visible>!Window.IsVisible(DialogVolumeBar.xml)</visible>
            <right>70</right>
            <posy>70</posy>
            <width>550</width>
            <height>100</height>
            <control type="group">
                <visible>!Skin.HasSetting(HidePlayPauseInfo)</visible>
                <posx>-400</posx>
                <posy>440</posy>
                <height>100</height>
                <width>100</width>
                <control type="image" description="Back">
                    <left>0</left>
                    <centertop>50%</centertop>
                    <width>100</width>
                    <height>100</height>
                    <aspectratio align="center" aligny="center">keep</aspectratio>
                    <texture>progress/back.png</texture>
                    <animation effect="fade" start="100" end="0" time="500" condition="Player.Playing">Conditional</animation>
                    <visible>Player.Playing</visible>
                </control>
                <control type="image" description="Play">
                    <left>0</left>
                    <centertop>50%</centertop>
                    <width>100</width>
                    <height>100</height>
                    <aspectratio align="center" aligny="center">keep</aspectratio>
                    <texture colordiffuse="FFFFFFFF">progress/play.png</texture>
                    <animation effect="fade" start="100" end="0" time="500" condition="Player.Playing">Conditional</animation>
                    <visible>Player.Playing</visible>
                    <include>Animation.RotatePlay</include>
                </control>
                <control type="image">
                    <left>0</left>
                    <centertop>50%</centertop>
                    <width>100</width>
                    <height>100</height>
                    <texture colordiffuse="$VAR[ColorHighlight]">$INFO[Control.GetLabel(933),progress/circle/p,.png]</texture>
                    <aspectratio align="center">keep</aspectratio>
                    <animation effect="fade" start="100" end="0" time="500" condition="Player.Playing">Conditional</animation>
                    <visible>Player.Playing</visible>
                </control>
            </control>
        </control>
    </include>
    
    <include name="OSD1">
    
        <!-- Normal -->
        <control type="group">
            <height>74</height>
            <bottom>15</bottom>
            <animation type="WindowOpen">
                <effect type="fade" start="0" end="100" time="150" delay="200"/>
            </animation>
            <animation type="WindowClose">
                <effect type="fade" end="0" start="100" time="150"/>
            </animation>
            <animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(DialogPlayerProcessInfo.xml)">Conditional</animation>

            <!-- Sub Menu -->
            <control type="group">
                <visible allowhiddenfocus="true">ControlGroup(9950).HasFocus() | Control.HasFocus(20)</visible>
                <include>Animation.SlideUp</include>
                <include>Animation.FadeOut</include>
                <bottom>72</bottom>
                <centerleft>1088</centerleft>
                <width>316</width>
                <height>512</height>
                <control type="image">
                    <description>background image</description>
                    <width>100%</width>
                    <height>100%</height>
                    <colordiffuse>White100</colordiffuse>
                    <texture border="16">common/rounded-shadow8.png</texture>
                </control>
                <include content="Def_Context_Tempo_Gradient">
                    <param name="controlid" value="9950"/>
                </include>
            </control>
            <control type="group">
                <visible allowhiddenfocus="true">ControlGroup(9300).HasFocus() | Control.HasFocus(3)</visible>
                <include>Animation.SlideUp</include>
                <include>Animation.FadeOut</include>
                <bottom>72</bottom>
                <centerleft>572</centerleft>
                <width>316</width>
                <height>272</height>
                <control type="image">
                    <description>background image</description>
                    <width>100%</width>
                    <height>100%</height>
                    <colordiffuse>White100</colordiffuse>
                    <texture border="16">common/rounded-shadow8.png</texture>
                </control>
                <include content="Def_Context_Subtitles_Gradient">
                    <param name="controlid" value="9300"/>
                </include>
            </control>
            <control type="grouplist" id="100">
                <top>13</top>
                <left>50</left>
                <height>48</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>
                <align>left</align>
                <onleft>6</onleft>
                <onright condition="!PVR.CanRecordPlayingChannel | !VideoPlayer.Content(LiveTV)">12</onright>
                <onright condition="PVR.CanRecordPlayingChannel + VideoPlayer.Content(LiveTV)">9003</onright>
                <include>DefOSDUpDown</include>
                <usecontrolcoords>true</usecontrolcoords>
                <control type="button" id="1">
                    <description>Audio</description>
                    <label>292</label>
                    <align>left</align>
                    <onclick>ActivateWindow(124)</onclick>
                    <include>DefOSDButtons</include>
                </control>
                <control type="button" id="2">
                    <description>Video Settings</description>
                    <label>291</label>
                    <align>left</align>
                    <onclick>ActivateWindow(123)</onclick>
                    <include>DefOSDButtons</include>
                </control>
                <control type="button" id="3">
                    <onup>9303</onup>
                    <ondown>9301</ondown>
                    <description>Subs</description>
                    <align>left</align>
                    <label>$LOCALIZE[287]</label>
                    <onclick>Action(ShowSubtitles)</onclick>
                    <include>DefOSDButtons</include>
                </control>
            </control>
            <control type="grouplist" id="101">
                <top>13</top>
                <width>100%</width>
                <height>48</height>
                <itemgap>16</itemgap>
                <orientation>horizontal</orientation>
                <align>center</align>
                <onleft>3</onleft>
                <onright>4</onright>
                <ondown>noop</ondown>
                <include>OSDVideoControlsFlip</include>
                <animation effect="fade" start="0" end="100" time="500" delay="500">Visible</animation>
            </control>
            <control type="grouplist" id="102">
                <top>13</top>
                <right>50</right>
                <height>48</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>
                <align>right</align>
                <onleft>101</onleft>
                <onright>1</onright>
                <include>DefOSDUpDown</include>
                <usecontrolcoords>true</usecontrolcoords>
                <include condition="!VideoPlayer.Content(livetv) + [VideoPlayer.HasMenu | [!VideoPlayer.Content(movies) + !VideoPlayer.Content(episodes)]]">OSDDVDMenu</include>
                <include condition="!VideoPlayer.HasMenu + VideoPlayer.Content(episodes)">OSDExtraInfoTV</include>
                <include condition="!VideoPlayer.HasMenu + VideoPlayer.Content(movies) + !VideoPlayer.Content(livetv)">OSDExtraInfoMOVIES</include>
                <include condition="!VideoPlayer.Content(livetv)">OSDVideosRight</include>
                <include condition="VideoPlayer.Content(livetv)">OSDPVRRight</include>
            </control>
        </control>
    </include>
    
    <include name="OSD2">
        
        <!-- New OSD -->
        <control type="group">
            <height>74</height>
            <bottom>110</bottom>
            <animation type="WindowOpen">
                <effect type="fade" start="0" end="100" time="150" delay="150"/>
            </animation>
            <animation type="WindowClose">
                <effect type="fade" end="0" start="100" time="150"/>
            </animation>
            <animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(DialogPlayerProcessInfo.xml)">Conditional</animation>

            <!-- Sub Menu -->
            <control type="group">
                <visible allowhiddenfocus="true">ControlGroup(9800).HasFocus() | Control.HasFocus(20)</visible>
                <animation effect="slide" end="150,0" time="0" condition="Player.ShowInfo">Conditional</animation>
                <include>Animation.SlideUp</include>
                <include>Animation.FadeOut</include>
                <bottom>88</bottom>
                <centerleft>1086</centerleft>
                <width>316</width>
                <height>512</height>
                <control type="image">
                    <description>background image</description>
                    <width>100%</width>
                    <height>100%</height>
                    <colordiffuse>White100</colordiffuse>
                    <texture border="16">common/rounded-shadow8.png</texture>
                </control>
                <include content="Def_Context_Tempo_Gradient">
                    <param name="controlid" value="9800"/>
                </include>
            </control>
            <control type="group">
                <visible allowhiddenfocus="true">ControlGroup(9500).HasFocus() | Control.HasFocus(3)</visible>
                <animation effect="slide" end="290,0" time="0" condition="Player.ShowInfo">Conditional</animation>
                <include>Animation.SlideUp</include>
                <include>Animation.FadeOut</include>
                <bottom>88</bottom>
                <centerleft>465</centerleft>
                <width>316</width>
                <height>272</height>
                <control type="image">
                    <description>background image</description>
                    <width>100%</width>
                    <height>100%</height>
                    <colordiffuse>White100</colordiffuse>
                    <texture border="16">common/rounded-shadow8.png</texture>
                </control>
                <include content="Def_Context_Subtitles_Gradient">
                    <param name="controlid" value="9500"/>
                </include>
            </control>
            <control type="grouplist" id="100">
                <top>13</top>
                <left>100</left>
                <height>48</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>
                <align>left</align>
                <onleft>6</onleft>
                <onright condition="!PVR.CanRecordPlayingChannel | !VideoPlayer.Content(LiveTV)">12</onright>
                <onright condition="PVR.CanRecordPlayingChannel + VideoPlayer.Content(LiveTV)">9003</onright>
                <include>DefOSDUpDown</include>

                <animation effect="slide" start="0,0" end="320,0" time="150" condition="!Skin.HasSetting(osd.disableposter) + [Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | !String.IsEmpty(Window(home).Property(osdinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))] + !VideoPlayer.Content(LiveTV)">Conditional</animation>
                <animation effect="slide" start="0,0" end="320,0" time="150" condition="!Skin.HasSetting(osd.disableposter) + [Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | !String.IsEmpty(Window(home).Property(osdinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + !String.IsEmpty(Player.Art(thumb)) + VideoPlayer.Content(LiveTV)">Conditional</animation>

                <animation effect="slide" start="0,0" end="0,0" time="150" condition="Skin.HasSetting(osd.disableposter) + [Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | !String.IsEmpty(Window(home).Property(osdinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))] + !VideoPlayer.Content(LiveTV)">Conditional</animation>
                <animation effect="slide" start="0,0" end="0,0" time="150" condition="Skin.HasSetting(osd.disableposter) + [Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | !String.IsEmpty(Window(home).Property(osdinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + !String.IsEmpty(Player.Art(thumb)) + VideoPlayer.Content(LiveTV)">Conditional</animation>

                <usecontrolcoords>true</usecontrolcoords>
                <control type="button" id="1">
                    <description>Audio</description>
                    <label>292</label>
                    <align>left</align>
                    <onclick>ActivateWindow(124)</onclick>
                    <include>DefOSDButtonsNewOSD</include>
                </control>
                <control type="button" id="2">
                    <description>Video Settings</description>
                    <label>291</label>
                    <align>left</align>
                    <onclick>ActivateWindow(123)</onclick>
                    <include>DefOSDButtonsNewOSD</include>
                </control>
                <control type="button" id="3">
                    <onup>9303</onup>
                    <ondown>9301</ondown>
                    <description>Subs</description>
                    <align>left</align>
                    <label>$LOCALIZE[287]</label>
                    <onclick>Action(ShowSubtitles)</onclick>
                    <include>DefOSDButtonsNewOSD</include>
                </control>
            </control>
            <control type="grouplist" id="101">
                <animation effect="slide" start="0,0" end="155,0" time="150" condition="!Skin.HasSetting(osd.disableposter) + [Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | !String.IsEmpty(Window(home).Property(osdinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))] + !VideoPlayer.Content(LiveTV)">Conditional</animation>
                <animation effect="slide" start="0,0" end="155,0" time="150" condition="!Skin.HasSetting(osd.disableposter) + [Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | !String.IsEmpty(Window(home).Property(osdinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + !String.IsEmpty(Player.Art(thumb)) + VideoPlayer.Content(LiveTV)">Conditional</animation>

                <animation effect="slide" start="0,0" end="0,0" time="150" condition="Skin.HasSetting(osd.disableposter) + [Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | !String.IsEmpty(Window(home).Property(osdinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))] + !VideoPlayer.Content(LiveTV)">Conditional</animation>
                <animation effect="slide" start="0,0" end="0,0" time="150" condition="Skin.HasSetting(osd.disableposter) + [Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | !String.IsEmpty(Window(home).Property(osdinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + !String.IsEmpty(Player.Art(thumb)) + VideoPlayer.Content(LiveTV)">Conditional</animation>

                <left>0</left>
                <top>13</top>
                <width>100%</width>
                <height>48</height>
                <itemgap>16</itemgap>
                <orientation>horizontal</orientation>
                <align>center</align>
                <onleft>3</onleft>
                <onright>4</onright>
                <ondown>noop</ondown>
                <include>OSDVideoControlsFlipNewOSD</include>
            </control>
            <control type="grouplist" id="102">
                <top>13</top>
                <right>100</right>
                <height>48</height>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>
                <align>right</align>
                <onleft>101</onleft>
                <onright>1</onright>
                <include>DefOSDUpDown</include>
                <usecontrolcoords>true</usecontrolcoords>
                <include condition="!VideoPlayer.Content(livetv) + [VideoPlayer.HasMenu | [!VideoPlayer.Content(movies) + !VideoPlayer.Content(episodes)]]">OSDDVDMenuNewOSD</include>
                <include condition="!VideoPlayer.HasMenu + VideoPlayer.Content(episodes)">OSDExtraInfoTVNewOSD</include>
                <include condition="!VideoPlayer.HasMenu + VideoPlayer.Content(movies) + !VideoPlayer.Content(livetv)">OSDExtraInfoMOVIESNewOSD</include>
                <include condition="!VideoPlayer.Content(livetv)">OSDVideosRightNewOSD</include>
                <include condition="VideoPlayer.Content(livetv)">OSDPVRRightNewOSD</include>
            </control>
        </control>
    </include>
    
    <include name="OSD3">
    
        <!-- Side OSD -->
        <control type="group">
            <height>74</height>
            <bottom>-10</bottom>
            <animation type="WindowOpen">
                <effect type="fade" start="0" end="100" time="250" delay="200"/>
            </animation>
            <animation type="WindowClose">
                <effect type="fade" end="0" start="100" time="250"/>
            </animation>
            <animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(DialogPlayerProcessInfo.xml)">Conditional</animation>

            <!-- Sub Menu -->
            <control type="group">
                <visible allowhiddenfocus="true">ControlGroup(9960).HasFocus() | Control.HasFocus(20)</visible>
                <include>Animation.SlideUp</include>
                <include>Animation.FadeOut</include>
                <bottom>102</bottom>
                <centerleft>518</centerleft>
                <width>316</width>
                <height>512</height>
                <control type="image">
                    <description>background image</description>
                    <width>100%</width>
                    <height>100%</height>
                    <colordiffuse>White100</colordiffuse>
                    <texture border="16">common/rounded-shadow8.png</texture>
                </control>
                <include content="Def_Context_Tempo_Gradient">
                    <param name="controlid" value="9960"/>
                </include>
            </control>
            <control type="group">
                <visible allowhiddenfocus="true">ControlGroup(9400).HasFocus() | Control.HasFocus(3)</visible>
                <include>Animation.SlideUp</include>
                <include>Animation.FadeOut</include>
                <bottom>102</bottom>
                <centerleft>180</centerleft>
                <width>316</width>
                <height>272</height>
                <control type="image">
                    <description>background image</description>
                    <width>100%</width>
                    <height>100%</height>
                    <colordiffuse>White100</colordiffuse>
                    <texture border="16">common/rounded-shadow8.png</texture>
                </control>
                <include content="Def_Context_Subtitles_Gradient">
                    <param name="controlid" value="9400"/>
                </include>
            </control>
            <control type="grouplist" id="101">
                <top>-15</top>
                <left>32</left>
                <width>640</width>
                <height>48</height>
                <itemgap>11</itemgap>
                <orientation>horizontal</orientation>
                <align>center</align>
                <onleft>101</onleft>
                <onright>101</onright>
                <ondown>noop</ondown>
                <control type="button" id="1">
                    <description>Audio</description>
                    <width>48</width>
                    <height>48</height>
                    <label/>
                    <font />
                    <onclick>ActivateWindow(124)</onclick>
                    <include>DefOSDUpDown</include>
                    <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/audio.png</texturefocus>
                    <texturenofocus colordiffuse="Dark1">osd/audio.png</texturenofocus>
                </control>
                <control type="button" id="2">
                    <description>Video Settings</description>
                    <width>48</width>
                    <height>48</height>
                    <label/>
                    <font />
                    <onclick>ActivateWindow(123)</onclick>
                    <include>DefOSDUpDown</include>
                    <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/videosett.png</texturefocus>
                    <texturenofocus colordiffuse="Dark1">osd/videosett.png</texturenofocus>
                </control>
                <control type="button" id="3">
                    <onup>9303</onup>
                    <ondown>9301</ondown>
                    <width>48</width>
                    <height>48</height>
                    <label/>
                    <font />
                    <onclick>Action(ShowSubtitles)</onclick>
                    <include>DefOSDUpDown</include>
                    <texturefocus colordiffuse="$VAR[ColorHighlight]">osd/lyrics.png</texturefocus>
                    <texturenofocus colordiffuse="Dark1">osd/lyrics.png</texturenofocus>
                </control>
                <include>OSDVideoControlsFlip</include>
                <include condition="!VideoPlayer.Content(livetv) + [VideoPlayer.HasMenu | [!VideoPlayer.Content(movies) + !VideoPlayer.Content(episodes)]]">OSDDVDMenuNewOSDSide</include>
                <include condition="!VideoPlayer.HasMenu + VideoPlayer.Content(episodes)">OSDExtraInfoTVNewOSDSide</include>
                <include condition="!VideoPlayer.HasMenu + VideoPlayer.Content(movies) + !VideoPlayer.Content(livetv)">OSDExtraInfoMOVIESNewOSDSide</include>
                <include condition="!VideoPlayer.Content(livetv)">OSDVideosRightNewOSDSide</include>
                <include condition="VideoPlayer.Content(livetv)">OSDPVRRightNewOSDSide</include>
            </control>
        </control>
    </include>
    
    <include name="Seekbar1">
    
        <!-- Normal -->
        <control type="group">
            <animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(DialogPlayerProcessInfo.xml)">Conditional</animation>
            <animation effect="slide" start="0" end="0,-74" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
            
            <!-- Background bottom -->
            <control type="group">
                <animation effect="slide" start="0" end="0,-40" time="150" condition="VideoPlayer.Content(LiveTV) + Skin.HasSetting(pvr.showtechnicalinfo) + [Window.IsVisible(fullscreeninfo) | !String.IsEmpty(Window(home).Property(osdinfo)) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]]">Conditional</animation>
                <animation effect="slide" start="0" end="0,-80" time="200" condition="[Window.IsVisible(fullscreeninfo) | !String.IsEmpty(Window(home).Property(osdinfo)) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]] + Skin.HasSetting(osd.showplot)">Conditional</animation>
                <animation effect="slide" start="0" end="0,-60" time="200" condition="[Window.IsVisible(fullscreeninfo) | !String.IsEmpty(Window(home).Property(osdinfo)) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]]">Conditional</animation>                
                <animation effect="slide" start="0,110" end="0" time="200">Visible</animation>
                <animation type="WindowOpen" reversible="false">
                    <effect type="fade" end="100" start="0" time="200"/>
                    <effect type="slide" end="0,0" start="0,110" time="200"/>
                </animation>
                <animation type="WindowClose" reversible="false">
                    <effect type="fade" start="100" end="70" time="200"/>
                    <effect type="slide" start="0,0" end="0,110" time="200"/>
                </animation>
                <control type="image">
                    <right>SidePad</right>
                    <bottom>110</bottom>
                    <width>400</width>
                    <texture>$VAR[PlayerClearart]</texture>
                    <aspectratio align="right" aligny="bottom">keep</aspectratio>
                    <visible>Skin.HasSetting(ShowClearArtOSD)</visible>
                    <include>Animation.FadeOut</include>
                </control>
                <control type="image">
                    <top>111r</top>
                    <width>100%</width>
                    <height>1</height>
                    <texture colordiffuse="BoxHomerow">common/sch2.png</texture>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                </control>
                <control type="image">
                    <top>110r</top>
                    <width>100%</width>
                    <height>374</height>
                    <texture>common/white.png</texture>
                    <colordiffuse>$VAR[OSDPanel]</colordiffuse>
                    <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
                </control>                
            </control>
            
            <!-- Info -->
            <control type="group">
                <top>180r</top>
                <height>200</height>
                <visible>Window.IsVisible(fullscreeninfo) | !String.IsEmpty(Window(home).Property(osdinfo)) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]</visible>
                <animation type="WindowClose">
                    <effect type="fade" start="100" end="0" time="200"/>
                    <effect type="slide" start="0,0" end="0,110" time="200"/>
                </animation>                
                <animation type="WindowOpen">
                    <effect type="fade" start="0" end="100" time="200"/>
                    <effect type="slide" start="0,110" end="0" time="200"/>
                </animation>
                <animation effect="fade" end="0" start="100" time="100">Hidden</animation>
                <animation effect="fade" start="0" end="100" time="200" delay="200">Visible</animation>
                <control type="group">
                    <left>SidePad</left>
                    <right>SidePad</right>
                    <top>0</top>
                    <bottom>40</bottom>
                    <control type="group">
                        <left>300</left>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb))</visible>
                        <include>OSDInfoContent</include>
                        <include>OSDPVRInfoContent</include>
                    </control>
                    <control type="group">
                        <left>253</left>
                        <visible>!VideoPlayer.Content(LiveTV) + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]</visible>
                        <include>OSDInfoContent</include>
                    </control>
                    <control type="group">
                        <left>0</left>
                        <visible>String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster)) + [!VideoPlayer.Content(LiveTV) | String.IsEmpty(Player.Art(thumb))]</visible>
                        <include>OSDInfoContent</include>
                    </control>  
                </control>
            </control>
            
            <!-- Poster / Disc -->
            <control type="group">
                <top>180r</top>
                <height>200</height>
                <visible>Window.IsVisible(fullscreeninfo) | !String.IsEmpty(Window(home).Property(osdinfo)) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]</visible>
                <animation type="WindowClose">
                    <effect type="fade" start="100" end="0" time="200"/>
                    <effect type="slide" start="0,0" end="0,110" time="200"/>
                </animation>
                <animation type="WindowOpen">
                    <effect type="fade" start="0" end="100" time="200"/>
                    <effect type="slide" end="0,0" start="0,110" time="200"/>
                </animation>
                <animation effect="fade" start="0" end="100" time="250" delay="200">Visible</animation>
                <animation effect="fade" start="100" end="0" time="200">Hidden</animation>
                <control type="group">
                    <left>SidePad</left>
                    <control type="group">
                        <left>-45</left>
                        <top>-240</top>
                        <width>260</width>
                        <height>260</height>
                        <control type="image">
                            <visible>Skin.HasSetting(discartOSD) + !String.IsEmpty(Player.Art(discart)) + !String.IsEmpty(Player.Art(poster)) + !Player.ShowInfo + String.IsEmpty(Window(home).Property(osdshowinfo))</visible>
                            <texture>$INFO[Player.Art(discart)]</texture>
                            <aspectratio align="center" aligny="center">keep</aspectratio>
                            <animation type="WindowClose" reversible="false">
                                <effect type="slide" start="0,-130" end="0,0" tween="sine" easing="out" time="400" delay="0"/>
                                <effect type="fade" start="100" end="0" time="100"/>
                            </animation>
                            <animation type="WindowOpen" reversible="false">
                                <effect type="slide" start="0,100" end="0,-130" tween="sine" easing="out" time="600" delay="200"/>
                            </animation>
                            <animation type="Visible" reversible="false">
                                <effect type="fade" start="100" end="0" time="0"/>
                            </animation>
                            <animation effect="rotate" center="auto" time="6000" end="-360" condition="true" loop="true">Conditional</animation>
                        </control>                    
                        <control type="image">
                            <visible>Skin.HasSetting(discartOSD) + !String.IsEmpty(Player.Art(discart)) + !String.IsEmpty(Player.Art(poster)) + [Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo))]</visible>
                            <texture>$INFO[Player.Art(discart)]</texture>
                            <aspectratio align="center" aligny="center">keep</aspectratio>
                            <animation type="Hidden" reversible="false">
                                <effect type="slide" start="0,-130" end="0,0" tween="sine" easing="out" time="400" delay="0"/>
                                <effect type="fade" start="100" end="0" time="100"/>
                            </animation>
                            <animation type="Visible" reversible="false">
                                <effect type="slide" start="0,100" end="0,-130" tween="sine" easing="out" time="600" delay="200"/>
                                <effect type="fade" start="0" end="100" delay="300"/>
                            </animation>
                            <animation effect="rotate" center="auto" time="6000" end="-360" condition="true" loop="true">Conditional</animation>
                        </control>
                    </control>
                    <control type="image">
                        <visible>!VideoPlayer.Content(LiveTV) + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]</visible>
                        <left>-50</left>
                        <top>-240</top>
                        <width>270</width>
                        <height>390</height>
                        <texture diffuse="diffuse/listposter.png">$VAR[PlayerPoster]</texture>
                        <aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
                    </control>
                    <control type="image">
                        <visible>[!VideoPlayer.Content(LiveTV) + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]] | [VideoPlayer.Content(LiveTV) + !String.IsEmpty(Window(Home).Property(PVR.Artwork.poster)) + Skin.HasSetting(Skin_enablePvrArtwork)]</visible>
                        <left>-51</left>
                        <top>-241</top>
                        <width>272</width>
                        <height>392</height>
                        <texture colordiffuse="Box2" border="4" background="true">common/box21.png</texture>
                        <visible>!Skin.HasSetting(thumbnails.white)</visible>
                    </control>
                    <control type="image">
                        <width>270</width>
                        <height>270</height>
                        <bottom>50</bottom>
                        <aspectratio>keep</aspectratio>
                        <texture border="5" colordiffuse="$VAR[OSDPanelPVR]">common/box.png</texture>
                        <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb)) + !Skin.HasSetting(osd.disable.icon.background.pvr)</visible>
                    </control>
                    <control type="image">
                        <width>270</width>
                        <height>270</height>
                        <bottom>50</bottom>
                        <texture colordiffuse="Box2" border="4" background="true">common/box21.png</texture>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb)) + !Skin.HasSetting(osd.disable.icon.background.pvr)</visible>
                    </control>
                    <control type="image">
                        <left>-50</left>
                        <top>-240</top>
                        <width>270</width>
                        <height>390</height>
                        <aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
                        <texture>$INFO[Window(Home).Property(PVR.Artwork.poster)]</texture>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Window(Home).Property(PVR.Artwork.poster)) + Skin.HasSetting(Skin_enablePvrArtwork)</visible>
                    </control>
                    <control type="image">
                        <width>230</width>
                        <height>230</height>
                        <bottom>70</bottom>
                        <left>20</left>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[Player.Art(thumb)]</texture>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb)) + !Skin.HasSetting(Skin_enablePvrArtwork)</visible>
                    </control>
                </control>
            </control>
            
            <!-- Seekbar -->
            <control type="group">
                <visible>!Player.Paused | !Skin.HasSetting(osd.showinfoonpause)</visible>
                <visible>!Window.IsVisible(fullscreeninfo) + !Player.ShowInfo + String.IsEmpty(Window(home).Property(osdinfo)) + String.IsEmpty(Window(home).Property(osdshowinfo))</visible>
                <visible>Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | !String.IsEmpty(Player.SeekNumeric) | !String.IsEmpty(PVR.ChannelNumberInput) | Window.IsVisible(videoosd)</visible>
                <animation type="WindowOpen">
                    <effect type="fade" end="100" start="70" time="200"/>
                    <effect type="slide" end="0,0" start="0,110" time="200"/>
                </animation>
                <animation type="WindowClose">
                    <effect type="fade" start="100" end="70" time="200"/>
                    <effect type="slide" start="0,0" end="0,110" time="200"/>
                </animation>
                <animation effect="fade" start="0" end="100" delay="200" time="200">Visible</animation>
                <animation effect="fade" start="100" end="0" delay="0" time="200">Hidden</animation>
                <top>110r</top>
                <bottom>0</bottom>
                <width>100%</width>
                <control type="group">
                    <left>SidePad</left>
                    <right>SidePad</right>
                    <top>20</top>
                    <bottom>20</bottom>
                    <control type="label" description="Finishes Time">
                        <width>400</width>
                        <bottom>30</bottom>
                        <height>40</height>
                        <font>Tiny</font>
                        <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                        <label>$VAR[PlayerStatus]</label>
                    </control>
                    <control type="grouplist">
                        <orientation>horizontal</orientation>
                        <align>right</align>
                        <control type="label">
                            <visible>!Skin.HasSetting(ClockOSD)</visible>
                            <width>auto</width>
                            <align>right</align>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[System.Time] </label>
                            <visible>Player.HasVideo</visible>
                        </control>
                        <control type="image">
                            <visible>!Skin.HasSetting(ClockOSD)</visible>
                            <centertop>10%</centertop>
                            <width>30</width>
                            <height>45</height>
                            <align>right</align>
                            <colordiffuse>$VAR[OSDPanelWhite30]</colordiffuse>
                            <texture>kaitoast/finishtime2.png</texture>
                            <visible>Player.HasVideo</visible>
                        </control>
                        <control type="label">
                            <visible>!Skin.HasSetting(ClockOSD)</visible>
                            <width>auto</width>
                            <align>right</align>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[Player.FinishTime]  •  </label>
                            <visible>Player.HasVideo</visible>
                            <visible>!VideoPlayer.Content(LiveTV)</visible>
                        </control>
                        <control type="label" description="Chapter-OSD">
                            <width>auto</width>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ,  •  ]</label>
                            <visible>!VideoPlayer.Content(LiveTV) + Player.HasVideo + !String.IsEqual(Player.ChapterCount,0) + !String.IsEqual(Player.ChapterCount,00)</visible>
                        </control>
                        <control type="label" description="Duration Total Time">
                            <width>auto</width>
                            <bottom>30</bottom>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[Player.Time]$INFO[Player.Duration,  /  ,]</label>
                            <visible>String.IsEmpty(Player.SeekNumeric) + !VideoPlayer.Content(LiveTV)</visible>
                        </control>
                        <control type="label" description="Duration Total Time">
                            <width>auto</width>
                            <bottom>30</bottom>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[Player.SeekNumeric(hh:mm:ss)]$INFO[Player.Duration,  /  ,]</label>
                            <visible>!String.IsEmpty(Player.SeekNumeric) + !VideoPlayer.Content(LiveTV)</visible>
                        </control>
                        <control type="label" description="Duration Total Time">
                            <width>auto</width>
                            <bottom>30</bottom>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[PVR.EpgEventFinishTime]</label>
                            <visible>VideoPlayer.Content(LiveTV)</visible>
                        </control>
                        <control type="label" description="Total Time">
                            <width>auto</width>
                            <align>right</align>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[PVR.EpgEventElapsedTime, •   ,]  /  $INFO[PVR.EpgEventDuration]</label>
                            <visible>VideoPlayer.Content(LiveTV)</visible>
                        </control>
                    </control>
                    <include>ProgressBar</include>
                </control>
            </control>
        </control>
    </include>
     
    <include name="Seekbar2">
        
        <!-- New OSD -->
        <control type="group"> 
            <animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(DialogPlayerProcessInfo.xml)">Conditional</animation>
            <animation effect="fade" start="0" end="100" time="250">WindowOpen</animation>
            <animation effect="fade" end="0" start="100" time="250">WindowClose</animation>                                 
            <control type="image">
                <top>830r</top>
                <width>100%</width>
                <height>870</height>
                <texture>common/fsinfoscreen.png</texture>
            </control>
            <control type="image">
                <top>830r</top>
                <width>100%</width>
                <height>870</height>
                <texture>common/fsinfoscreen.png</texture>
                <animation effect="fade" start="80" end="80" time="0" condition="true">Conditional</animation>
            </control>
        </control>
        
        <!-- New -->
        <control type="group">
            <animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(DialogPlayerProcessInfo.xml)">Conditional</animation>
            <animation effect="slide" start="0" end="0,-74" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
            <bottom>80</bottom>
            
            <!-- Info -->
            <control type="group">
                <top>180r</top>
                <bottom>0</bottom>
                <width>100%</width>
                <height>200</height>
                <visible>Window.IsVisible(fullscreeninfo) | !String.IsEmpty(Window(home).Property(osdinfo)) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]</visible>
                <animation effect="fade" start="0" end="100" time="250">Visible</animation>
                <animation effect="fade" start="0" end="100" time="250">WindowOpen</animation>
                <animation effect="fade" end="0" start="100" time="200">Hidden</animation>
                <animation effect="fade" end="0" start="100" time="200">WindowClose</animation>
                <control type="image">
                    <right>SidePadNewOSD</right>
                    <bottom>200</bottom>
                    <width>400</width>
                    <height>225</height>
                    <texture>$VAR[PlayerClearart]</texture>
                    <aspectratio align="right" aligny="bottom">keep</aspectratio>
                    <visible>Skin.HasSetting(ShowClearArtOSD)</visible>
                    <animation effect="slide" start="0" end="0,-80" time="200" condition="Skin.HasSetting(osd.showplot)">Conditional</animation>
                </control>
                <control type="group">
                    <left>SidePadNewOSD</left>
                    <right>SidePadNewOSD</right>
                    <top>-10</top>
                    <bottom>50</bottom>
                    <control type="group">
                        <visible>Skin.HasSetting(discartOSD) + !Skin.HasSetting(osd.disableposter)</visible> 
                        <left>5</left>
                        <top>-200</top>
                        <width>260</width>
                        <height>260</height>
                        <animation effect="slide" start="0,0" end="0,30" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
                        <control type="image">
                            <visible>Skin.HasSetting(discartOSD) + !String.IsEmpty(Player.Art(discart)) + !String.IsEmpty(Player.Art(poster)) + !Player.ShowInfo + String.IsEmpty(Window(home).Property(osdshowinfo))</visible>
                            <texture>$INFO[Player.Art(discart)]</texture>
                            <aspectratio align="center" aligny="center">keep</aspectratio>
                            <animation type="WindowClose" reversible="false">
                                <effect type="slide" start="0,-130" end="0,0" tween="sine" easing="out" time="400" delay="0"/>
                                <effect type="fade" start="100" end="0" time="100"/>
                            </animation>
                            <animation type="WindowOpen" reversible="false">
                                <effect type="slide" start="0,100" end="0,-130" tween="sine" easing="out" time="600" delay="300"/>
                            </animation>
                            <animation type="Visible" reversible="false">
                                <effect type="fade" start="100" end="0" time="0"/>
                            </animation>
                            <animation effect="rotate" center="auto" time="6000" end="-360" condition="true" loop="true">Conditional</animation>
                        </control>                    
                        <control type="image">
                            <visible>Skin.HasSetting(discartOSD) + !String.IsEmpty(Player.Art(discart)) + !String.IsEmpty(Player.Art(poster)) + [Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo))]</visible>
                            <texture>$INFO[Player.Art(discart)]</texture>
                            <aspectratio align="center" aligny="center">keep</aspectratio>
                            <animation type="Hidden" reversible="false">
                                <effect type="slide" start="0,-130" end="0,0" tween="sine" easing="out" time="400" delay="0"/>
                                <effect type="fade" start="100" end="0" time="100"/>
                            </animation>
                            <animation type="Visible" reversible="false">
                                <effect type="slide" start="0,100" end="0,-130" tween="sine" easing="out" time="600" delay="200"/>
                                <effect type="fade" start="0" end="100" delay="300"/>
                            </animation>
                            <animation effect="rotate" center="auto" time="6000" end="-360" condition="true" loop="true">Conditional</animation>
                        </control>
                    </control>
                    <control type="image">
                        <visible>!VideoPlayer.Content(LiveTV) + !Skin.hasSetting(osd.disableposter) + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]</visible>
                        <left>0</left>
                        <top>-200</top>
                        <width>270</width>
                        <height>390</height>
                        <texture diffuse="diffuse/listposter.png">$VAR[PlayerPoster]</texture>
                        <aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
                        <animation effect="slide" start="0,0" end="0,30" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
                    </control>
                    <control type="image">
                        <visible>!VideoPlayer.Content(LiveTV) + !Skin.hasSetting(osd.disableposter) + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]</visible>
                        <left>-1</left>
                        <top>-201</top>
                        <width>272</width>
                        <height>392</height>
                        <texture diffuse="diffuse/listposter.png" colordiffuse="PanelWhite70" border="4">common/box21.png</texture>
                        <visible>!Skin.HasSetting(thumbnails.white)</visible>
                        <animation effect="slide" start="0,0" end="0,30" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
                    </control>
                    <control type="image">
                        <width>260</width>
                        <height>260</height>
                        <bottom>-31</bottom>
                        <left>13</left>
                        <aspectratio>keep</aspectratio>
                        <texture border="5" colordiffuse="$VAR[OSDPanelPVR]">common/box.png</texture>
                        <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
                        <animation effect="slide" start="0,0" end="0,30" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
                        <visible>!Skin.hasSetting(osd.disableposter) + [VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb))] + !Skin.HasSetting(osd.disable.icon.background.pvr)</visible>
                    </control>
                    <control type="image">
                        <visible>!Skin.hasSetting(osd.disableposter) + [VideoPlayer.Content(LiveTV) + !String.IsEmpty(Window(Home).Property(PVR.Artwork.poster)) + Skin.HasSetting(Skin_enablePvrArtwork)]</visible>
                        <width>220</width>
                        <left>33</left>
                        <height>220</height>
                        <bottom>-11</bottom>
                        <aspectratio>keep</aspectratio>
                        <texture diffuse="diffuse/wall.png">$INFO[Window(Home).Property(PVR.Artwork.poster)]</texture>
                        <animation effect="slide" start="0,0" end="0,30" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
                    </control>
                    <control type="image">
                        <visible>!Skin.hasSetting(osd.disableposter) + [VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb)) + !Skin.HasSetting(Skin_enablePvrArtwork)]</visible>
                        <width>220</width>
                        <left>33</left>
                        <height>220</height>
                        <bottom>-11</bottom>
                        <aspectratio>keep</aspectratio>
                        <texture diffuse="diffuse/wall.png">$INFO[Player.Art(thumb)]</texture>
                        <animation effect="slide" start="0,0" end="0,30" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
                    </control>
                    <control type="image">
                        <visible>!Skin.hasSetting(osd.disableposter) + [VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb))] + !Skin.HasSetting(osd.disable.icon.background.pvr)</visible>
                        <width>260</width>
                        <left>13</left>
                        <height>260</height>
                        <bottom>-31</bottom>
                        <texture diffuse="diffuse/listposter.png" colordiffuse="PanelWhite70" border="4">common/box21.png</texture>
                        <animation effect="slide" start="0,0" end="0,30" time="150" condition="Window.IsVisible(videoosd)">Conditional</animation>
                    </control>
                    <control type="group">
                        <visible>!Skin.hasSetting(osd.disableposter)</visible>
                        <left>318</left>
                        <control type="group">
                            <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb))</visible>
                            <include>OSDInfoContent</include>
                            <include>OSDPVRInfoContent</include>
                        </control>
                        <control type="group">
                            <visible>!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))</visible>
                            <include>OSDInfoContent</include>
                        </control>
                    </control>
                    <control type="group">
                        <visible>Skin.hasSetting(osd.disableposter)</visible>
                        <left>0</left>
                        <control type="group">
                            <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb))</visible>
                            <include>OSDInfoContent</include>
                            <include>OSDPVRInfoContent</include>
                        </control>
                        <control type="group">
                            <visible>!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))</visible>
                            <include>OSDInfoContent</include>
                        </control>
                    </control>
                    <control type="group">
                        <left>0</left>
                        <visible>String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster)) + [!VideoPlayer.Content(LiveTV) | String.IsEmpty(Player.Art(thumb))]</visible>
                        <include>OSDInfoContent</include>
                    </control>
                </control>
            </control>
            
            <!-- Seekbar -->
            <control type="group">
                <visible>!Player.Paused | !Skin.HasSetting(osd.showinfoonpause)</visible>
                <visible>!Window.IsVisible(fullscreeninfo)  + String.IsEmpty(Window(home).Property(osdinfo)) + !Player.ShowInfo + String.IsEmpty(Window(home).Property(osdshowinfo))</visible>
                <visible>Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | !String.IsEmpty(Player.SeekNumeric) | !String.IsEmpty(PVR.ChannelNumberInput) | Window.IsVisible(videoosd)</visible>
                <animation effect="fade" start="0" end="100" delay="150" time="250">Visible</animation>
                <animation effect="fade" start="0" end="100" delay="150" time="250">WindowOpen</animation>
                <animation effect="fade" end="0" start="100" time="200">Hidden</animation>
                <animation effect="fade" end="0" start="100" time="200">WindowClose</animation>
                <top>110r</top>
                <bottom>0</bottom>
                <width>100%</width>
                <animation effect="slide" start="0,0" end="0,-10" time="0" condition="true">Conditional</animation>
                <control type="group">
                    <left>130</left>
                    <right>SidePadNewOSD</right>
                    <top>20</top>
                    <bottom>20</bottom>
                    <control type="label" description="Finishes Time">
                        <width>400</width>
                        <bottom>30</bottom>
                        <height>40</height>
                        <font>Tiny</font>
                        <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                        <label>$VAR[PlayerStatus]</label>
                    </control>
                    <control type="grouplist">
                        <orientation>horizontal</orientation>
                        <align>right</align>
                        <control type="label">
                            <visible>!Skin.HasSetting(ClockOSD)</visible>
                            <width>auto</width>
                            <align>right</align>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[System.Time] </label>
                            <visible>Player.HasVideo</visible>
                        </control>
                        <control type="image">
                            <visible>!Skin.HasSetting(ClockOSD)</visible>
                            <centertop>10%</centertop>
                            <width>30</width>
                            <height>45</height>
                            <align>right</align>
                            <colordiffuse>$VAR[OSDPanelWhite30]</colordiffuse>
                            <texture>kaitoast/finishtime2.png</texture>
                            <visible>Player.HasVideo</visible>
                        </control>
                        <control type="label">
                            <visible>!Skin.HasSetting(ClockOSD)</visible>
                            <width>auto</width>
                            <align>right</align>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[Player.FinishTime]  •  </label>
                            <visible>Player.HasVideo</visible>
                            <visible>!VideoPlayer.Content(LiveTV)</visible>
                        </control>
                        <control type="label" description="Chapter-OSD">
                            <width>auto</width>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ,  •  ]</label>
                            <visible>!VideoPlayer.Content(LiveTV) + Player.HasVideo + !String.IsEqual(Player.ChapterCount,0) + !String.IsEqual(Player.ChapterCount,00)</visible>
                        </control>
                        <control type="label" description="Duration Total Time">
                            <width>auto</width>
                            <bottom>30</bottom>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[Player.Time]$INFO[Player.Duration,  /  ,]</label>
                            <visible>String.IsEmpty(Player.SeekNumeric) + !VideoPlayer.Content(LiveTV)</visible>
                        </control>
                        <control type="label" description="Duration Total Time">
                            <width>auto</width>
                            <bottom>30</bottom>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[Player.SeekNumeric(hh:mm:ss)]$INFO[Player.Duration,  /  ,]</label>
                            <visible>!String.IsEmpty(Player.SeekNumeric) + !VideoPlayer.Content(LiveTV)</visible>
                        </control>
                        <control type="label" description="Duration Total Time">
                            <width>auto</width>
                            <bottom>30</bottom>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[PVR.EpgEventFinishTime]</label>
                            <visible>VideoPlayer.Content(LiveTV)</visible>
                        </control>
                        <control type="label" description="Total Time">
                            <width>auto</width>
                            <align>right</align>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$INFO[PVR.EpgEventElapsedTime, •   ,]  /  $INFO[PVR.EpgEventDuration]</label>
                            <visible>VideoPlayer.Content(LiveTV)</visible>
                        </control>
                    </control>
                    <control type="image">
                        <right>0</right>
                        <bottom>100</bottom>
                        <width>400</width>
                        <height>225</height>
                        <texture>$VAR[PlayerClearart]</texture>
                        <aspectratio align="right" aligny="bottom">keep</aspectratio>
                        <visible>Skin.HasSetting(ShowClearArtOSD)</visible>
                    </control>
                    <include>ProgressBar</include>
                </control>
            </control>
        </control>
    </include>
    
    <include name="Seekbar3">
        
        <!-- Side OSD -->
        <control type="group">
            <animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(DialogPlayerProcessInfo.xml)">Conditional</animation>

            <!-- Background left -->
            <control type="group">
                <visible>Window.IsVisible(videoosd) | !String.IsEmpty(Window(home).Property(osdinfo)) | Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]</visible>
                <animation type="Visible">
                    <effect type="slide" start="-700" end="0" time="250"/>
                    <effect type="fade" start="0" end="100" time="100"/>
                </animation>
                <animation type="WindowOpen">
                    <effect type="slide" start="-700" end="0" time="250"/>
                    <effect type="fade" start="0" end="100" time="100"/>
                </animation>            
                <animation type="Hidden">
                    <effect type="slide" end="-700" start="0" time="400"/>
                    <effect type="fade" start="100" end="0" time="700"/>
                </animation>
                <animation type="WindowClose">
                    <effect type="slide" end="-700" start="0" time="400"/>
                    <effect type="fade" start="100" end="0" time="700"/>
                </animation>
                <control type="image">
                    <left>700</left>
                    <width>1</width>
                    <height>100%</height>
                    <texture colordiffuse="BoxNotification">common/sch2.png</texture>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                    <animation effect="fade" start="100" end="55" time="0" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <top>0</top>
                    <left>0</left>
                    <width>700</width>
                    <height>100%</height>
                    <texture>common/white.png</texture>
                    <colordiffuse>$VAR[OSDPanel]</colordiffuse>
                    <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
                </control>
            </control>
            
            <!-- Info -->
            <control type="group">
                <top>30</top>
                <left>30</left>
                <bottom>0</bottom>
                <width>640</width>
                <height>1020</height>
                <visible>Window.IsVisible(videoosd) | !String.IsEmpty(Window(home).Property(osdinfo)) | Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(home).Property(osdshowinfo)) | [Player.Paused + Skin.HasSetting(osd.showinfoonpause)]</visible>
                <animation type="Visible">
                    <effect type="slide" start="-700" end="0" time="250"/>
                    <effect type="fade" start="0" end="100" time="100"/>
                </animation>
                <animation type="WindowOpen">
                    <effect type="slide" start="-700" end="0" time="250"/>
                    <effect type="fade" start="0" end="100" time="100"/>
                </animation>            
                <animation type="Hidden">
                    <effect type="slide" end="-700" start="0" time="400"/>
                    <effect type="fade" start="100" end="0" time="700"/>
                </animation>
                <animation type="WindowClose">
                    <effect type="slide" end="-700" start="0" time="400"/>
                    <effect type="fade" start="100" end="0" time="700"/>
                </animation>
                <control type="group">
                    <control type="image">
                        <visible>!VideoPlayer.Content(LiveTV) + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]</visible>
                        <left>0</left>
                        <top>0</top>
                        <width>270</width>
                        <height>390</height>
                        <texture diffuse="diffuse/listposter.png">$VAR[PlayerPoster]</texture>
                        <aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
                    </control>
                    <control type="image">
                        <width>270</width>
                        <left>0</left>
                        <top>0</top>
                        <height>270</height>
                        <aspectratio>keep</aspectratio>
                        <texture border="5" colordiffuse="$VAR[OSDPanelPVR]">common/box.png</texture>
                        <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb)) + !Skin.HasSetting(osd.disable.icon.background.pvr)</visible>
                    </control>
                    <control type="image">
                        <width>230</width>
                        <left>20</left>
                        <top>20</top>
                        <height>230</height>
                        <aspectratio>keep</aspectratio>
                        <texture diffuse="diffuse/wall.png">$INFO[Window(Home).Property(PVR.Artwork.poster)]</texture>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Window(Home).Property(PVR.Artwork.poster)) + Skin.HasSetting(enable_PvrArtwork)</visible>
                    </control>
                    <control type="image">
                        <width>230</width>
                        <left>20</left>
                        <top>20</top>
                        <height>230</height>
                        <aspectratio>keep</aspectratio>
                        <texture diffuse="diffuse/wall.png">$INFO[Player.Art(thumb)]</texture>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb)) + !Skin.HasSetting(enable_PvrArtwork)</visible>
                    </control>
                    <control type="image">
                        <width>270</width>
                        <left>0</left>
                        <top>0</top>
                        <height>270</height>
                        <aspectratio>scale</aspectratio>
                        <texture fallback="DefaultAddonMusicvVideoInfo.png">$INFO[Player.Art(thumb)]</texture>
                        <visible>!VideoPlayer.Content(LiveTV) + [String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster))]</visible>
                    </control>
                    <control type="group">
                        <left>0</left>
                        <width>640</width>
                        <visible>VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb))</visible>
                        <include>OSDInfoContentSide</include>
                        <include>OSDPVRInfoContent</include>
                    </control>
                    <control type="group">
                        <left>0</left>
                        <width>640</width>
                        <visible>!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))</visible>
                        <include>OSDInfoContentSide</include>
                    </control>
                    <control type="group">
                        <left>0</left>
                        <top>-120</top>
                        <width>640</width>
                        <visible>String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster)) + [!VideoPlayer.Content(LiveTV) | String.IsEmpty(Player.Art(thumb))]</visible>
                        <include>OSDInfoContentSide</include>
                    </control>
                    <control type="image">
                        <visible>!VideoPlayer.Content(LiveTV) + [!String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster))]</visible>
                        <left>-1</left>
                        <top>-1</top>
                        <width>272</width>
                        <height>392</height>
                        <texture colordiffuse="$VAR[MusicOSDBox]" border="4" background="true">common/box21.png</texture>
                        <visible>!Skin.HasSetting(thumbnails.white)</visible>
                    </control>
                    <control type="image">
                        <visible>[VideoPlayer.Content(LiveTV) + !String.IsEmpty(Player.Art(thumb))] | [!VideoPlayer.Content(LiveTV) + [String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster))]]</visible>
                        <left>-1</left>
                        <top>-1</top>
                        <width>272</width>
                        <height>272</height>
                        <texture colordiffuse="$VAR[MusicOSDBox]" border="4" background="true">common/box21.png</texture>
                        <visible>!Skin.HasSetting(thumbnails.white) + !Skin.HasSetting(osd.disable.icon.background.pvr)</visible>
                    </control>
                </control>
            </control>
            
            <!-- Seekbar -->
            <control type="group">
                <visible>!Window.IsVisible(videoosd)</visible>
                <visible>!Player.Paused | !Skin.HasSetting(osd.showinfoonpause)</visible>
                <visible>!Window.IsVisible(fullscreeninfo) + String.IsEmpty(Window(home).Property(osdinfo)) + !Player.ShowInfo + String.IsEmpty(Window(home).Property(osdshowinfo))</visible>
                <visible>Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | !String.IsEmpty(Player.SeekNumeric) | !String.IsEmpty(PVR.ChannelNumberInput)</visible>
                <animation type="WindowOpen" reversible="false">
                    <effect type="fade" start="0" end="100" time="200"/>
                    <effect type="slide" end="0,0" start="0,110" time="200"/>
                </animation>
                <animation type="Visible" reversible="false">
                    <effect type="fade" start="70" end="100" time="200"/>
                    <effect type="slide" end="0,0" start="0,110" time="200"/>
                </animation>                
                <animation type="WindowClose" reversible="false">
                    <effect type="fade" start="100" end="50" time="250"/>
                    <effect type="slide" start="0,0" end="0,110" time="250"/>
                </animation>
                <animation type="Hidden" reversible="false">
                    <effect type="fade" start="100" end="0" time="250"/>
                    <effect type="slide" start="0,0" end="0,110" time="250"/>
                </animation>
                <control type="image">
                    <right>SidePad</right>
                    <bottom>110</bottom>
                    <width>400</width>
                    <texture>$VAR[PlayerClearart]</texture>
                    <aspectratio align="right" aligny="bottom">keep</aspectratio>
                    <visible>Skin.HasSetting(ShowClearArtOSD)</visible>
                    <include>Animation.FadeOut</include>                    
                </control>
                <control type="group">                    
                    <control type="image">
                        <top>111r</top>
                        <width>100%</width>
                        <height>1</height>
                        <texture colordiffuse="BoxHomerow">common/sch2.png</texture>
                        <visible>!Skin.HasSetting(thumbnails.white)</visible>
                    </control>
                    <control type="image">
                        <top>110r</top>
                        <width>100%</width>
                        <height>374</height>
                        <texture>common/white.png</texture>
                        <colordiffuse>$VAR[OSDPanel]</colordiffuse>
                        <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
                    </control>
                </control>                
                <control type="group">
                    <top>110r</top>
                    <bottom>0</bottom>
                    <width>2000</width>
                    <control type="group">
                        <left>30</left>
                        <right>110</right>
                        <top>20</top>
                        <bottom>20</bottom>
                        <control type="label" description="Finishes Time">
                            <width>400</width>
                            <bottom>30</bottom>
                            <height>40</height>
                            <font>Tiny</font>
                            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                            <label>$VAR[PlayerStatus]</label>
                        </control>
                        <control type="grouplist">
                            <orientation>horizontal</orientation>
                            <align>right</align>
                            <top>0</top>
                            <control type="label" description="Chapter-OSD">
                                <width>auto</width>
                                <height>40</height>
                                <font>Tiny</font>
                                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                                <label>$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ,  •  ]</label>
                                <visible>!VideoPlayer.Content(LiveTV) + Player.HasVideo + !String.IsEqual(Player.ChapterCount,0) + !String.IsEqual(Player.ChapterCount,00)</visible>
                            </control>
                            <control type="label" description="Duration Total Time">
                                <width>auto</width>
                                <bottom>30</bottom>
                                <height>40</height>
                                <font>Tiny</font>
                                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                                <label>$INFO[Player.Time]$INFO[Player.Duration,  /  ,]</label>
                                <visible>String.IsEmpty(Player.SeekNumeric) + !VideoPlayer.Content(LiveTV)</visible>
                            </control>
                            <control type="label" description="Duration Total Time">
                                <width>auto</width>
                                <bottom>30</bottom>
                                <height>40</height>
                                <font>Tiny</font>
                                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                                <label>$INFO[Player.SeekNumeric(hh:mm:ss)]$INFO[Player.Duration,  /  ,]</label>
                                <visible>!String.IsEmpty(Player.SeekNumeric) + !VideoPlayer.Content(LiveTV)</visible>
                            </control>
                            <control type="label" description="Duration Total Time">
                                <width>auto</width>
                                <bottom>30</bottom>
                                <height>40</height>
                                <font>Tiny</font>
                                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                                <label>$INFO[PVR.EpgEventFinishTime]</label>
                                <visible>VideoPlayer.Content(LiveTV)</visible>
                            </control>
                            <control type="label" description="Total Time">
                                <width>auto</width>
                                <align>right</align>
                                <height>40</height>
                                <font>Tiny</font>
                                <textcolor>$VAR[OSDPanelWhite70]</textcolor>
                                <label>$INFO[PVR.EpgEventElapsedTime, •   ,]$INFO[PVR.EpgEventDuration,  /  ,]</label>
                                <visible>VideoPlayer.Content(LiveTV)</visible>
                            </control>
                        </control>
                        <include>ProgressBar</include>
                    </control>
                </control>
            </control>
        </control>
    </include>
</includes>
