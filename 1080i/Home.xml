<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<window id="0">
    <include condition="![Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] + ![Skin.HasSetting(home.modernwidgets) + Skin.HasSetting(home.vertical.widgets)]">defaultcontroltrue</include>
    <include condition="[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [Skin.HasSetting(home.modernwidgets) + Skin.HasSetting(home.vertical.widgets)]">defaultcontrolfalse</include>
    <onload>RunScript(script.skinshortcuts,type=buildxml&amp;mainmenuID=300&amp;group=mainmenu|x1111|x1112|x1113|x1114|x1115|x1116|x1117|x1118|x1119|powermenu&amp;levels=6)</onload>
    <onload condition="!String.IsEqual(Window(home).Property(ClearArtAnimation),Container(300).ListItem.Label)">SetProperty(ClearArtAnimation,$INFO[Container(300).ListItem.Label],home)</onload>
    <onunload>ClearProperty(ClearArtAnimation,home)</onunload>
    <onload condition="false">ReplaceWindow(1296)</onload>
    <onload condition="$EXP[HasHomemenuAutoSlideOutAnimation]">CancelAlarm(slide_out,true)</onload>
    <onunload condition="$EXP[HasHomemenuAutoSlideOutAnimation]">CancelAlarm(slide_out,true)</onunload>
    <onunload>ClearProperty(TMDbHelper.WidgetContainer,home)</onunload>
    <onload condition="!$EXP[HomeIsModernMultiWidgets] + !$EXP[HomeIsVerticalMultiWidgets]">SetProperty(TMDbHelper.WidgetContainer,301,home)</onload>
    
    <onload condition="!Skin.HasSetting(disable.startup.window)">SetProperty(startupwindow,1,home)</onload>
    <onload condition="String.IsEmpty(Skin.String(StartupPlaylist)) + !Skin.HasSetting(disable.startup.window)">AlarmClock(GoHome,ClearProperty(startupwindow,home),00:03,silent,false)</onload>
    
    
    <controls>
        <include>GlobalBackground</include>

        <!-- Hidden Lists -->
        <include condition="!$EXP[HomeIsVerticalMultiWidgets] + !$EXP[HomeIsModernMultiWidgets]">MovieSetsList</include>
        <include condition="$EXP[HasHomemenuAutoSlideOutAnimation]">SlideOutHomemenuButton</include>
        <include>HomeBackgroundPlaylist</include>
        <include>AlbumAndSetsCount</include>
        <include>HomeActorsEmbuary</include>

        <!-- Other Menus And Widgets -->
        <include condition="$EXP[HomeIsVerticalMultiWidgets]">HomeVerticalMenuWidgets</include>
        <include condition="$EXP[HomeIsVertical]">HomeVerticalMenu</include>
        <include condition="!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.showclearlogotopright) + !Skin.HasSetting(home.modernwidgets)">HomeWeatherWidget</include>
        <include condition="!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + ![Skin.HasSetting(home.modernwidgets) + Skin.HasSetting(home.vertical.widgets)]">HomeWidgetInfo</include>
        <include condition="!Skin.HasSetting(home.vertical) + Skin.HasSetting(home.classicwidgets)">HomeClassicWidgets</include>

        <!-- Fade Out On HomeIsModernMultiWidgets -->
        <control type="group">
            <include condition="$EXP[HomeIsModernMultiWidgets]">Animation.HomeIsModernMultiWidgets</include>
            <include condition="$EXP[HomeIsModernMultiWidgets]">HomeWidgetInfoWidgets</include>
            <include condition="!Skin.HasSetting(home.vertical)">HomeHeader</include>
            <include condition="!Skin.HasSetting(home.vertical)">HomeNextRecording</include>
            <include condition="!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.hide.nowplaying)">HomeNowPlaying</include>
            <include condition="!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets)">HomeRow</include>
        </control>

        <!-- Submenus -->
        <include condition="!Skin.HasSetting(home.vertical) + Skin.HasSetting(home.submenu2) + !Skin.HasSetting(home.showicons)">HomeSubMenu2</include>
        <include condition="!Skin.HasSetting(home.vertical) + [!Skin.HasSetting(home.submenu2) | Skin.HasSetting(home.showicons)]">HomeSubMenu</include>

        <!-- Background And Furniture For Dialogs -->
        <control type="group">
            <include>Animation.FadeIn</include>
            <include>Animation.FadeOut</include>
            <visible>Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogPVRInfo.xml) | Window.IsVisible(skin.arctic.zephyr.mod.script-gto-info.xml) | Window.IsVisible(DialogAddonInfo.xml)</visible>
            <include condition="[[!Skin.HasSetting(home.vertical) + !$EXP[HomeIsModernMultiWidgets]] | Skin.HasSetting(homemenu.clean.flix)]">GlobalBackgroundExtended</include>
        </control>

        <!-- Flags For Vertical Multi widgets -->
        <include condition="$EXP[HomeIsVerticalMultiWidgets] + [![$EXP[HomeIsVerticalMultiWidgets] + Skin.HasSetting(homemenu.vertical.noslide)] | [$EXP[HomeIsVerticalMultiWidgets] + Skin.HasSetting(homemenu.vertical.noslide) + Skin.HasSetting(home.showicons) + Skin.HasSetting(homemenu.only.icons)]]">HomeWidgetVerticalFlags</include>

        <!-- ClearLogo For Multi widgets -->
        <control type="group">
            <visible>[!Window.IsVisible(DialogVideoInfo.xml) + ![String.IsEqual(Container(300).ListItem.Property(widget),weatherdaily) | String.IsEqual(Container(300).ListItem.Property(widget),weatherhourly)]] | [!Window.IsVisible(DialogVideoInfo.xml) + [String.IsEqual(Container(300).ListItem.Property(widget),weatherdaily) | String.IsEqual(Container(300).ListItem.Property(widget),weatherhourly)] + String.IsEmpty(Skin.String(weather.fanart.path))]</visible>
            <visible>!Window.IsVisible(DialogMusicInfo.xml)</visible>
            <include condition="![Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)]">HomeClearLogo</include>
        </control>

        <control type="group">
            <visible>!String.IsEmpty(Window(home).Property(startupwindow))</visible>
            <animation effect="fade" start="100" end="0" time="500" tween="quadratic">Hidden</animation>
            <control type="image" description="Background">
                <include>Dimensions_Fullscreen</include>
                <texture colordiffuse="$VAR[StartupDiffuse]">$VAR[StartupFanart]</texture>
                <visible>String.IsEmpty(Skin.String(StartupPlaylist))</visible>
            </control>
            <control type="label">
                <description>Loading</description>
                <width>100%</width>
                <height>100%</height>
                <align>center</align>
                <aligny>center</aligny>
                <label>Arctic [COLOR=$VAR[ColorHighlight]]Zephyr[/COLOR]</label>
                <font>EpisodeNumber</font>
                <textcolor>Dark1</textcolor>
                <visible>String.IsEmpty(Skin.String(StartupPlaylist)) + String.IsEmpty(Skin.String(startupfanart.fallback))</visible>
            </control>
            <control type="image">
                <left>1020</left>
                <top>605</top>
                <width>331</width>
                <height>60</height>
                <centertop>50%</centertop>
                <texture>misc/matrix.png</texture>
                <animation effect="fade" start="0" end="100" time="800" delay="1800" tween="quadratic">WindowOpen</animation>
                <visible>String.IsEmpty(Skin.String(StartupPlaylist)) + String.IsEmpty(Skin.String(startupfanart.fallback))</visible>
            </control>
        </control>

        <!--<control type="label">
            <left>60</left>
            <right>60</right>
            <posy>60</posy>
            <font>EpisodeNumberNew</font>
            <textcolor>Dark1</textcolor>
            <height>45</height>
            <label fallback="19055">$INFO[Container(301).NumItems]</label>
        </control>-->
    </controls>
</window>