<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>

    <include name="510Content">
        <visible>Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(sets) | Container.Content(videos)</visible>
        <include content="forced_view" condition="Skin.HasSetting(enable.forcedviews)">
            <param name="string" value="$LOCALIZE[31072]" />
        </include>
        <include content="def_top" condition="!Skin.HasSetting(510IconSizeSmall)">
            <param name="top" value="550" />
        </include>
        <include content="def_top" condition="Skin.HasSetting(510IconSizeSmall)">
            <param name="top" value="615" />
        </include>
        <include content="def_left" condition="!Skin.HasSetting(510IconSizeSmall)">
            <param name="left" value="0" />
        </include>
        <include content="def_left" condition="Skin.HasSetting(510IconSizeSmall)">
            <param name="left" value="-145" />
        </include>
        <include content="def_width" condition="!Skin.HasSetting(510IconSizeSmall)">
            <param name="width" value="1998" />
        </include>
        <include content="def_width" condition="Skin.HasSetting(510IconSizeSmall)">
            <param name="width" value="2100" />
        </include>
        <height>395</height>
        <onup condition="!Skin.HasSetting(global.kioskmode)">9000</onup>
        <ondown>1651</ondown>
        <onunfocus condition="Skin.HasSetting(home.netflix.autoplay.trailer)">ClearProperty(listitem.trailer,home)</onunfocus>
        <onfocus condition="Skin.HasSetting(home.netflix.autoplay.trailer)">ClearProperty(TrailerIsPlayingFullscreen,home)</onfocus>
        <orientation>horizontal</orientation>
        <preloaditems>2</preloaditems>
        <pagecontrol>1651</pagecontrol>
        <include content="def_focusposition" condition="!Skin.HasSetting(510IconSizeSmall)">
            <param name="focusposition" value="1" />
        </include>
        <include content="def_focusposition" condition="Skin.HasSetting(510IconSizeSmall)">
            <param name="focusposition" value="2" />
        </include>
        <viewtype label="31072">list</viewtype>
        <include>ScrolltimeViewsList</include>
        <itemlayout height="325" width="222" condition="!Skin.HasSetting(510IconSizeSmall)">
            <include content="include.widget.poster">
                <param name="id" value="510"/>
                <param name="reflections" value="Skin.HasSetting(show.reflections)"/>
            </include>
        </itemlayout>
        <focusedlayout height="325" width="222" condition="!Skin.HasSetting(510IconSizeSmall)">
            <control type="group">
                <animation center="127,168" easing="inout" effect="zoom" end="120" start="100" time="300" tween="sine">Focus</animation>
                <animation center="127,168" easing="inout" effect="zoom" end="100" start="120" time="300" tween="sine">UnFocus</animation>
                <control type="group">
                    <height>325</height>
                    <top>305</top>
                    <control type="image">
                        <left>10</left>
                        <top>10</top>
                        <right>10</right>
                        <bottom>10</bottom>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <texture flipy="true" diffuse="diffuse/listposter-ref-widgets.png" background="true">$VAR[PosterImage]</texture>
                        <visible>Skin.HasSetting(show.reflections)</visible>
                    </control>
                </control>
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <right>0</right>
                    <bottom>0</bottom>
                    <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>10</right>
                    <bottom>10</bottom>
                    <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
                </control>
                <control type="image">
                    <left>9</left>
                    <top>9</top>
                    <right>9</right>
                    <bottom>9</bottom>
                    <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                </control>
                <control type="group">
                    <visible>!Skin.HasSetting(use.default.selectbox)</visible>
                    <include content="def_widget_glow">
                        <param name="glow_top" value="5" />
                        <param name="glow_left" value="1" />
                        <param name="glow_right" value="2" />
                        <param name="glow_height" value="313" />
                        <param name="id" value="510" />
                    </include>
                    <control type="image">
                        <left>7</left>
                        <top>6</top>
                        <right>7</right>
                        <bottom>7</bottom>
                        <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
                        <visible>Control.HasFocus(510)</visible>
                        <include>Animation.SelectBoxHome</include>
                    </control>
                    <control type="image">
                        <left>7</left>
                        <top>6</top>
                        <right>7</right>
                        <bottom>7</bottom>
                        <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox.png</texture>
                        <visible>Control.HasFocus(510)</visible>
                        <include>Animation.SelectBoxHome</include>
                    </control>
                </control>
                <control type="group">
                    <visible>Skin.HasSetting(use.default.selectbox)</visible>
                    <include content="def_widget_glow">
                        <param name="glow_top" value="3" />
                        <param name="glow_left" value="0" />
                        <param name="glow_right" value="0" />
                        <param name="glow_height" value="317" />
                        <param name="id" value="510" />
                    </include>
                    <control type="image">
                        <left>3.5</left>
                        <top>3.3</top>
                        <right>3.5</right>
                        <bottom>3.3</bottom>
                        <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
                        <visible>Control.HasFocus(510)</visible>
                        <include>Animation.SelectBoxHome</include>
                    </control>
                    <control type="image">
                        <left>3.5</left>
                        <top>3.3</top>
                        <right>3.5</right>
                        <bottom>3.3</bottom>
                        <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox.png</texture>
                        <visible>Control.HasFocus(510)</visible>
                        <include>Animation.SelectBoxHome</include>
                    </control>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>10</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/widgetposter_new.png" background="true" fallback="DefaultMovies.png">$VAR[PosterImage]</texture>
                </control>
                <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
                    <param name="right" value="1" />
                    <param name="top" value="1" />
                </include>
             </control>
             <include condition="Skin.HasSetting(home.netflix.autoplay.trailer)">SetAutoTrailerControl</include>
        </focusedlayout>
        <itemlayout height="264" width="180" condition="Skin.HasSetting(510IconSizeSmall)">
            <include content="include.widget.poster">
                <param name="id" value="510"/>
                <param name="height" value="264"/>
                <param name="top" value="242"/>
                <param name="height_reflection" value="264"/>
                <param name="reflections" value="Skin.HasSetting(show.reflections)"/>
            </include>
        </itemlayout>
        <focusedlayout height="264" width="180" condition="Skin.HasSetting(510IconSizeSmall)">
            <control type="group">
                <animation center="90,138" easing="inout" effect="zoom" end="120" start="100" time="300" tween="sine">Focus</animation>
                <animation center="90,138" easing="inout" effect="zoom" end="100" start="120" time="300" tween="sine">UnFocus</animation>
                <control type="image">
                    <visible>!String.IsEqual(ListItem.Label,..) + !String.IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(ShowDiscart510)</visible>
                    <left>12</left>
                    <top>10</top>
                    <width>156</width>
                    <height>156</height>
                    <texture>$INFO[ListItem.Art(discart)]</texture>
                    <animation type="Focus" reversible="false">
                        <effect type="slide" start="0,0" end="0,-80" time="500" tween="cubic" delay="1000" />
                    </animation>
                </control>
                <control type="group">
                    <height>264</height>
                    <top>242</top>
                    <control type="image">
                        <left>10</left>
                        <top>10</top>
                        <right>10</right>
                        <bottom>10</bottom>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <texture flipy="true" diffuse="diffuse/listposter-ref-widgets.png" background="true">$VAR[PosterImage]</texture>
                        <visible>Skin.HasSetting(show.reflections)</visible>
                    </control>
                </control>
                <include>510_Focus_Code</include>
             </control>
             <include condition="Skin.HasSetting(home.netflix.autoplay.trailer)">SetAutoTrailerControl</include>
        </focusedlayout>
    </include>

    <include name="510Wrap">
        <control type="wraplist" id="510">
            <include>510Content</include>
        </control>
    </include>

    <include name="510Fixed">
        <control type="fixedlist" id="510">
            <include>510Content</include>
        </control>
    </include>

    <include name="510_Focus_Code">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <right>0</right>
            <bottom>0</bottom>
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
        </control>
        <control type="image">
            <left>9</left>
            <top>9</top>
            <right>9</right>
            <bottom>9</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
        <control type="group">
            <visible>!Skin.HasSetting(use.default.selectbox)</visible>
            <include content="def_widget_glow">
                <param name="glow_top" value="5" />
                <param name="glow_left" value="1" />
                <param name="glow_right" value="2" />
                <param name="glow_height" value="253" />
                <param name="id" value="510" />
            </include>
            <control type="image">
                <left>7</left>
                <top>7</top>
                <right>7</right>
                <bottom>7</bottom>
                <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
                <visible>Control.HasFocus(510)</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
            <control type="image">
                <left>7</left>
                <top>7</top>
                <right>7</right>
                <bottom>7</bottom>
                <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox.png</texture>
                <visible>Control.HasFocus(510)</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
        </control>
        <control type="group">
            <visible>Skin.HasSetting(use.default.selectbox)</visible>
            <include content="def_widget_glow">
                <param name="glow_top" value="2" />
                <param name="glow_left" value="-3" />
                <param name="glow_right" value="-3" />
                <param name="glow_height" value="260" />
                <param name="id" value="510" />
            </include>
            <control type="image">
                <left>2.3</left>
                <top>2</top>
                <right>2</right>
                <bottom>2</bottom>
                <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
                <visible>Control.HasFocus(510)</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
            <control type="image">
                <left>2.3</left>
                <top>2</top>
                <right>2</right>
                <bottom>2</bottom>
                <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox.png</texture>
                <visible>Control.HasFocus(510)</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetposter_new.png" background="true" fallback="DefaultMovies.png">$VAR[PosterImage]</texture>
        </control>
        <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
            <param name="right" value="1" />
            <param name="top" value="1" />
        </include>
    </include>

    <include name="View_510_Minimal">
        <description>List View (id=510)</description>
        <control type="group">
            <include>Animation.Common</include>
            <visible>Control.IsVisible(510)</visible>
            <include>ViewSlideForJumpBar</include>
            <control type="group">
                <left>210</left>
                <top>40</top>
                <width>580</width>
                <control type="image" description="clearlogo">
                    <visible>Skin.HasSetting(ShowClearart510) + $EXP[TitleClearlogoAvailable]</visible>
                    <top>140</top>
                    <height>102</height>
                    <aspectratio scalediffuse="true" align="left">keep</aspectratio>
                    <texture background="true">$VAR[ClearLogoTopVar]</texture>
                </control>
                <control type="label">
                    <visible>!Skin.HasSetting(ShowClearart510) | [Skin.HasSetting(ShowClearart510) + !$EXP[TitleClearlogoAvailable]]</visible>
                    <top>180</top>
                    <description>Header Label</description>
                    <textcolor>Dark1</textcolor>
                    <font>SmallBold</font>
                    <label fallback="19055">$INFO[ListItem.Title]</label>
                    <include condition="Skin.HasSetting(labels.autoscroll)">LabelScroll</include>
                </control>
                <control type="label">
                    <visible>!String.IsEqual(ListItem.Label,..)</visible>
                    <top>236</top>
                    <height>36</height>
                    <font>Tiny</font>
                    <textcolor>Dark1</textcolor>
                    <label>$VAR[509_Row_3]</label>
                </control>
                <control type="textbox">
                    <top>300</top>
                    <font>Tiny</font>
                    <height>144</height>
                    <textcolor>Dark2</textcolor>
                    <selectedcolor>Dark2</selectedcolor>
                    <label>$INFO[ListItem.Plot]</label>
                    <visible>!Skin.HasSetting(510IconSizeSmall)</visible>
                </control>
                <control type="textbox">
                    <top>300</top>
                    <font>Tiny</font>
                    <height>144</height>
                    <textcolor>Dark2</textcolor>
                    <selectedcolor>Dark2</selectedcolor>
                    <label>$INFO[ListItem.Plot]</label>
                    <visible>Skin.HasSetting(510IconSizeSmall) + !String.IsEqual(ListItem.Label,..) + !String.IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(ShowDiscart510)</visible>
                </control>
                <control type="textbox">
                    <top>300</top>
                    <font>Tiny</font>
                    <height>216</height>
                    <textcolor>Dark2</textcolor>
                    <selectedcolor>Dark2</selectedcolor>
                    <label>$INFO[ListItem.Plot]</label>
                    <visible>Skin.HasSetting(510IconSizeSmall) + !String.IsEqual(ListItem.Label,..) + [[String.IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(ShowDiscart510)] | !Skin.HasSetting(ShowDiscart510)]</visible>
                </control>
                <control type="label">
                    <top>195</top>
                    <left>-130</left>
                    <description>Header Label</description>
                    <textcolor>Dark2</textcolor>
                    <font>HomeFO</font>
                    <label>$INFO[ListItem.Year]</label>
                </control>
                <control type="label">
                    <top>265</top>
                    <left>-130</left>
                    <width>100</width>
                    <align>center</align>
                    <description>Header Label</description>
                    <textcolor>Dark3</textcolor>
                    <font>Small</font>
                    <label>$VAR[LabelDurationTimeCheck]</label>
                </control>
            </control>
            <control type="scrollbar" id="1651">
                <include content="scrollbar_hor">
                    <param name="scrollid" value="1651"/>
                    <param name="jumpbar" value="true"/>
                    <param name="bottom" value="191"/>
                </include>
            </control>
            <include condition="!Skin.HasSetting(53poster.nowrap)">510Wrap</include>
            <include condition="Skin.HasSetting(53poster.nowrap)">510Fixed</include>
        </control>
    </include>
</includes>
