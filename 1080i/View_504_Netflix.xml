<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>

    <include name="View_504_Fanart">
        <description>List View (id=504)</description>
        <control type="group">
            <include>Animation.Common</include>
            <visible>Control.IsVisible(504)</visible>
            <include>ViewSlideForJumpBar</include>
            <control type="label">
                <visible>!Skin.HasSetting(504clearlogo) | [!$EXP[TitleClearlogoAvailable] + Skin.HasSetting(504clearlogo)]</visible>
                <animation effect="slide" start="0,0" end="0,15" time="200" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">Conditional</animation>
                <top>245</top>
                <left>SidePad</left>
                <description>Header Label</description>
                <textcolor>Dark1</textcolor>
                <font>SmallBold</font>
                <label fallback="19055">$INFO[ListItem.Title]</label>
            </control>
            <control type="image" description="clearlogo">
                <visible>$EXP[TitleClearlogoAvailable] + Skin.HasSetting(504clearlogo)</visible>
                <top>205</top>
                <height>102</height>
                <left>SidePad</left>
                <aspectratio scalediffuse="true" align="left">keep</aspectratio>
                <texture background="true">$VAR[ClearLogoTopVar]</texture>
                <fadetime>ClearArtFadetime</fadetime>
            </control>
            <control type="grouplist">
                <animation effect="slide" start="0,0" end="0,18" time="200" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">Conditional</animation>
                <left>SidePad</left>
                <top>320</top>
                <itemgap>0</itemgap>
                <visible>!String.IsEqual(ListItem.Label,..)</visible>
                <control type="label">
                    <height>36</height>
                    <font>Tiny</font>
                    <textcolor>Dark1</textcolor>
                    <label fallback="19055">$VAR[504_Row_1]</label>
                </control>
                <control type="label">
                    <visible>String.IsEmpty(Skin.String(NetflixIconSize))</visible>
                    <width>1100</width>
                    <height>36</height>
                    <font>Tiny</font>
                    <textcolor>Dark1</textcolor>
                    <label fallback="19055">$VAR[504_Row_2]</label>
                </control>
                <control type="label">
                    <visible>String.IsEmpty(Skin.String(NetflixIconSize))</visible>
                    <width>100%</width>
                    <height>36</height>
                    <font>Tiny</font>
                    <textcolor>Dark1</textcolor>
                    <label fallback="19055">$VAR[504_Row_3]</label>
                </control>
            </control>
            <control type="textbox">
                <visible>!Skin.HasSetting(discartfanart) | [Skin.HasSetting(discartfanart) + String.IsEmpty(ListItem.Art(discart))]</visible>
                <animation effect="slide" start="0,0" end="0,-56" time="200" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">Conditional</animation>
                <top>450</top>
                <bottom>17</bottom>
                <left>SidePad</left>
                <font>Tiny</font>
                <height>145</height>
                <textcolor>Dark2</textcolor>
                <selectedcolor>Dark2</selectedcolor>
                <label>$INFO[ListItem.Plot]</label>
                <width>1470</width>
            </control>
            <control type="textbox">
                <visible>Skin.HasSetting(discartfanart) + !String.IsEmpty(ListItem.Art(discart)) </visible>
                <animation effect="slide" start="0,0" end="0,-56" time="200" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">Conditional</animation>
                <top>450</top>
                <bottom>17</bottom>
                <left>SidePad</left>
                <font>Tiny</font>
                <height>145</height>
                <textcolor>Dark2</textcolor>
                <selectedcolor>Dark2</selectedcolor>
                <label>$INFO[ListItem.Plot]</label>
                <width>1420</width>
            </control>
            <control type="group">
                <visible>String.IsEmpty(Skin.String(NetflixIconSize))</visible>
                <left>1595</left>
                <top>225</top>
                <control type="image">
                    <visible>!String.IsEqual(ListItem.Label,..)  + !String.IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(discartfanart)</visible>
                    <top>8</top>
                    <right>SidePad</right>
                    <width>245</width>
                    <height>245</height>
                    <fadetime>1000</fadetime>
                    <texture>$INFO[ListItem.Art(discart)]</texture>
                    <animation type="Conditional" condition="!Container(504).OnNext + !Container(504).OnPrevious" reversible="false">
                        <effect type="fade" start="0" end="100" time="50" delay="500"/>
                    </animation>
                    <animation type="Conditional" condition="!Container(504).OnNext + !Container(504).OnPrevious" reversible="false">
                        <effect type="slide" start="0,0" end="-124,0" time="500" delay="1000" tween="cubic"/>
                    </animation>
                    <animation type="Visible" reversible="false">
                        <effect type="fade" start="0" end="100" time="1500" tween="cubic"/>
                    </animation>
                    <animation type="Hidden" reversible="false">
                        <effect type="fade" start="100" end="0" time="500" tween="cubic"/>
                    </animation>
                </control>
                <control type="image">
                    <left>-9</left>
                    <top>-9</top>
                    <right>SidePad</right>
                    <bottom>485</bottom>
                    <texture border="10">common/$VAR[nofocus-shadow10]</texture>
                </control>
                <control type="image">
                    <width>243</width>
                    <height>360</height>
                    <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
                </control>
                <control type="image">
                    <width>243</width>
                    <height>360</height>
                    <fadetime>PosterFanartFadetime</fadetime>
                    <aspectratio aligny="center" align="center" scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/listposter.png" background="true">$VAR[PosterImage]</texture>
                </control>
                <control type="image">
                    <width>243</width>
                    <height>360</height>
                    <texture border="4" colordiffuse="Box2" background="true">common/box21.png</texture>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                </control>
            </control>
            <control type="group">
                <visible>!String.IsEmpty(Skin.String(NetflixIconSize))</visible>
                <left>1614</left>
                <top>200</top>
                <control type="image">
                    <visible>!String.IsEqual(ListItem.Label,..)  + !String.IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(discartfanart)</visible>
                    <top>8</top>
                    <right>82</right>
                    <width>222</width>
                    <height>222</height>
                    <fadetime>1000</fadetime>
                    <texture>$INFO[ListItem.Art(discart)]</texture>
                    <animation type="Conditional" condition="!Container(504).OnNext + !Container(504).OnPrevious" reversible="false">
                        <effect type="fade" start="0" end="100" time="50" delay="500"/>
                    </animation>
                    <animation type="Conditional" condition="!Container(504).OnNext + !Container(504).OnPrevious" reversible="false">
                        <effect type="slide" start="0,0" end="-118,0" time="500" delay="1000" tween="cubic"/>
                    </animation>
                    <animation type="Visible" reversible="false">
                        <effect type="fade" start="0" end="100" time="1500" tween="cubic"/>
                    </animation>
                    <animation type="Hidden" reversible="false">
                        <effect type="fade" start="100" end="0" time="500" tween="cubic"/>
                    </animation>
                </control>
                <control type="image">
                    <left>-9</left>
                    <top>-9</top>
                    <right>73</right>
                    <bottom>540</bottom>
                    <texture border="10">common/$VAR[nofocus-shadow10]</texture>
                </control>
                <control type="image">
                    <width>222</width>
                    <height>330</height>
                    <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
                </control>
                <control type="image">
                    <width>222</width>
                    <height>330</height>
                    <fadetime>PosterFanartFadetime</fadetime>
                    <aspectratio aligny="center" align="center" scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/listposter.png" border="1" background="true">$VAR[PosterImage]</texture>
                </control>
                <control type="image">
                    <width>222</width>
                    <height>330</height>
                    <texture border="4" colordiffuse="Box2" background="true">common/box21.png</texture>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                </control>
            </control>
            <control type="panel" id="504">
                <top>620</top>
                <animation effect="slide" start="0,0" end="0,-55" time="200" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">Conditional</animation>
                <right>70</right>
                <left>70</left>
                <visible>Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(sets) | Container.Content(videos)</visible>
                <include content="forced_view" condition="Skin.HasSetting(enable.forcedviews)">
                    <param name="string" value="$LOCALIZE[31014]" />
                </include>
                <onup condition="!Skin.HasSetting(global.kioskmode)">9000</onup>
                <ondown>1615</ondown>
                <preloaditems>1</preloaditems>
                <pagecontrol>1615</pagecontrol>
                <height>345</height>
                <orientation>horizontal</orientation>
                <viewtype label="31014">list</viewtype>
                <include>ScrolltimeViewsList</include>
                <itemlayout height="345" width="444" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">
                    <control type="group">
                        <height>255</height>
                        <include content="include.widget.landscape">
                            <param name="id" value="504"/>
                            <param name="indicatorbackground" value="true"/>
                            <param name="height" value="255"/>
                            <param name="top" value="235"/>
                            <param name="reflections" value="Skin.HasSetting(show.reflections)"/>
                        </include>
                    </control>
                    <control type="label">
                        <top>245</top>
                        <right>20</right>
                        <height>50</height>
                        <left>20</left>
                        <font>Small333</font>
                        <textcolor>Dark1</textcolor>
                        <selectedcolor>Dark1</selectedcolor>
                        <visible>!String.IsEqual(ListItem.Label,..)</visible>
                        <label>$INFO[ListItem.Label] $INFO[ListItem.Year,(,)]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="345" width="444" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">
                    <control type="group">
                        <height>255</height>
                        <include content="include.widget.landscape.focus">
                            <param name="id" value="504"/>
                            <param name="indicatorbackground" value="true"/>
                            <param name="height" value="255"/>
                            <param name="top" value="235"/>
                            <param name="reflections" value="Skin.HasSetting(show.reflections)"/>
                            <param name="glow_height" value="254"/>
                            <param name="glow_top" value="0"/>
                            <param name="glow_left" value="5" />
                            <param name="glow_right" value="6" />
                        </include>
                    </control>
                    <control type="label">
                        <top>245</top>
                        <right>20</right>
                        <height>50</height>
                        <left>20</left>
                        <font>Small333</font>
                        <textcolor>Dark1</textcolor>
                        <selectedcolor>Dark1</selectedcolor>
                        <visible>!String.IsEqual(ListItem.Label,..)</visible>
                        <label>$INFO[ListItem.Label] ($INFO[ListItem.Year])</label>
                    </control>
                </focusedlayout>
                <itemlayout height="295" width="355.66" condition="String.IsEmpty(Skin.String(NetflixIconSize))">
                    <control type="group">
                        <height>205</height>
                        <include content="include.widget.landscape">
                            <param name="id" value="504"/>
                            <param name="indicatorbackground" value="true"/>
                            <param name="height" value="205"/>
                            <param name="top" value="185"/>
                            <param name="reflections" value="Skin.HasSetting(show.reflections)"/>
                        </include>
                    </control>
                    <control type="label">
                        <top>200</top>
                        <right>20</right>
                        <height>50</height>
                        <left>20</left>
                        <font>Small333</font>
                        <textcolor>Dark1</textcolor>
                        <selectedcolor>Dark1</selectedcolor>
                        <visible>!String.IsEqual(ListItem.Label,..)</visible>
                        <label>$INFO[ListItem.Label] $INFO[ListItem.Year,(,)]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="295" width="355.66" condition="String.IsEmpty(Skin.String(NetflixIconSize))">
                    <control type="group">
                        <height>205</height>
                        <include content="include.widget.landscape.focus">
                            <param name="id" value="504"/>
                            <param name="indicatorbackground" value="true"/>
                            <param name="height" value="205"/>
                            <param name="top" value="185"/>
                            <param name="reflections" value="Skin.HasSetting(show.reflections)"/>
                            <param name="glow_height" value="204"/>
                            <param name="glow_top" value="0"/>
                            <param name="glow_left" value="4" />
                            <param name="glow_right" value="5" />
                        </include>
                    </control>
                    <control type="label">
                        <top>200</top>
                        <right>20</right>
                        <height>50</height>
                        <left>20</left>
                        <font>Small333</font>
                        <textcolor>Dark1</textcolor>
                        <selectedcolor>Dark1</selectedcolor>
                        <visible>!String.IsEqual(ListItem.Label,..)</visible>
                        <label>$INFO[ListItem.Label] ($INFO[ListItem.Year])</label>
                    </control>
                </focusedlayout>
            </control>
            <control type="scrollbar" id="1615">
                <include content="scrollbar_hor">
                    <param name="scrollid" value="1615"/>
                </include>
            </control>
            <control type="image">
                <animation effect="slide" start="0,0" end="0,-25" time="200" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">Conditional</animation>
                <include>Animation.DelayFadeIn</include>
                <top>713</top>
                <left>56</left>
                <include>arrowdimensions</include>
                <texture colordiffuse="Dark1" flipx="true">common/arrow-small-right.png</texture>
                <animation effect="zoom" center="auto" pulse="true" start="100" end="170" time="200" delay="2000" condition="String.IsEqual(ListItem.Label,..)">Conditional</animation>
            </control>
            <control type="image">
                <animation effect="slide" start="0,0" end="0,-25" time="200" condition="String.IsEqual(Skin.String(NetflixIconSize),1)">Conditional</animation>
                <include>Animation.DelayFadeIn</include>
                <top>713</top>
                <left>1846</left>
                <include>arrowdimensions</include>
                <texture colordiffuse="Dark1">common/arrow-small-right.png</texture>
                <animation effect="zoom" center="auto" pulse="true" start="100" end="170" time="200" delay="2000" condition="String.IsEqual(ListItem.Label,..)">Conditional</animation>
            </control>
        </control>
    </include>
</includes>
