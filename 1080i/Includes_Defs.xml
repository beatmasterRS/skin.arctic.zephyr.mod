<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <variable name="ColorHighlight">
        <value condition="String.IsEqual(Skin.String(focuscolor.name),none)">Highlight</value>
        <value condition="!String.IsEmpty(Skin.String(focuscolor.name))">$INFO[Skin.String(focuscolor.name)]</value>
        <value>Highlight</value>
    </variable>

    <variable name="ColorHighlight2">
        <value condition="String.IsEqual(Skin.String(focuscolor2.name),none) | String.IsEmpty(Skin.String(focuscolor2.name))">00e8e8e8</value>
        <value condition="!String.IsEmpty(Skin.String(focuscolor2.name))">$INFO[Skin.String(focuscolor2.name)]</value>
        <value>$VAR[ColorSelectBar]</value>
    </variable>

    <variable name="ColorHighlightSelectbox2">
        <value condition="String.IsEqual(Skin.String(squarecolor2.name),none) | String.IsEmpty(Skin.String(squarecolor2.name))">00e8e8e8</value>
        <value condition="!String.IsEmpty(Skin.String(squarecolor2.name))">$INFO[Skin.String(squarecolor2.name)]</value>
        <value>$VAR[ColorSquares]</value>
    </variable>

    <variable name="ColorStars">
        <value condition="String.IsEqual(Skin.String(starscolor.name),none)">ColoredStars</value>
        <value condition="!String.IsEmpty(Skin.String(starscolor.name))">$INFO[Skin.String(starscolor.name)]</value>
        <value>ColoredStars</value>
    </variable>

    <variable name="ColorRating">
        <value condition="String.IsEqual(Skin.String(ratingcolor.name),none)">ColorRating</value>
        <value condition="!String.IsEmpty(Skin.String(ratingcolor.name))">$INFO[Skin.String(ratingcolor.name)]</value>
        <value>ColorRating</value>
    </variable>

    <variable name="ColorSquares">
        <value condition="String.IsEqual(Skin.String(squarecolor.name),none)">$VAR[ColorHighlight]</value>
        <value condition="!String.IsEmpty(Skin.String(squarecolor.name))">$INFO[Skin.String(squarecolor.name)]</value>
        <value>$VAR[ColorHighlight]</value>
    </variable>

    <variable name="ColorUserrating">
        <value condition="String.IsEqual(Skin.String(userratingcolor.name),none)">ColorUserrating</value>
        <value condition="!String.IsEmpty(Skin.String(userratingcolor.name))">$INFO[Skin.String(userratingcolor.name)]</value>
        <value>ColorUserrating</value>
    </variable>

    <variable name="ColorSelectBar">
        <value condition="String.IsEqual(Skin.String(selectbarcolor.name),none)">Dark1</value>
        <value condition="!String.IsEmpty(Skin.String(selectbarcolor.name))">$INFO[Skin.String(selectbarcolor.name)]</value>
        <value>Dark1</value>
    </variable>

    <variable name="ColorSelectOtherBar">
        <value condition="String.IsEqual(Skin.String(selectotherbarcolor.name),none)">$VAR[ColorHighlight]</value>
        <value condition="!String.IsEmpty(Skin.String(selectotherbarcolor.name))">$INFO[Skin.String(selectotherbarcolor.name)]</value>
        <value>$VAR[ColorHighlight]</value>
    </variable>

    <variable name="ColorHighlightOtherBar">
        <value condition="String.IsEqual(Skin.String(focuscolorotherbar.name),none) | String.IsEmpty(Skin.String(focuscolorotherbar.name))">00e8e8e8</value>
        <value condition="!String.IsEmpty(Skin.String(focuscolorotherbar.name))">$INFO[Skin.String(focuscolorotherbar.name)]</value>
        <value>$VAR[ColorSelectOtherBar]</value>
    </variable>

    <variable name="ColorIndicatorBackgroundWatched">
        <value condition="String.IsEqual(Skin.String(indicatorcolorbackgroundwatched.name),none)">FF294B89</value>
        <value condition="!String.IsEmpty(Skin.String(indicatorcolorbackgroundwatched.name))">$INFO[Skin.String(indicatorcolorbackgroundwatched.name)]</value>
        <value>FF294B89</value>
    </variable>

    <variable name="ColorIndicatorBackgroundInprogress">
        <value condition="String.IsEqual(Skin.String(indicatorcolorbackgroundinprogress.name),none)">Panel</value>
        <value condition="!String.IsEmpty(Skin.String(indicatorcolorbackgroundinprogress.name))">$INFO[Skin.String(indicatorcolorbackgroundinprogress.name)]</value>
        <value>Panel</value>
    </variable>
    
    <variable name="ColorIndicatorBackgroundIsPlaying">
        <value condition="String.IsEqual(Skin.String(indicatorcolorbackgroundisplaying.name),none)">Highlight2</value>
        <value condition="!String.IsEmpty(Skin.String(indicatorcolorbackgroundisplaying.name))">$INFO[Skin.String(indicatorcolorbackgroundisplaying.name)]</value>
        <value>Highlight2</value>
    </variable>
    
    <variable name="ColorIndicatorBackgroundIsPlayingIcon">
        <value condition="String.IsEqual(Skin.String(indicatorcolorbackgroundisplayingicon.name),none)">WatchedIcons</value>
        <value condition="!String.IsEmpty(Skin.String(indicatorcolorbackgroundisplayingicon.name))">$INFO[Skin.String(indicatorcolorbackgroundisplayingicon.name)]</value>
        <value>WatchedIcons</value>
    </variable>

    <variable name="ColorIndicatorBackgroundNew">
        <value condition="String.IsEqual(Skin.String(indicatorcolorbackgroundnew.name),none)">$VAR[ColorHighlight]</value>
        <value condition="!String.IsEmpty(Skin.String(indicatorcolorbackgroundnew.name))">$INFO[Skin.String(indicatorcolorbackgroundnew.name)]</value>
        <value>$VAR[ColorHighlight]</value>
    </variable>

    <variable name="ColorIndicatorBackgroundLabel">
        <value condition="String.IsEqual(Skin.String(indicatorcolorbackgroundlabel.name),none)">FFFFFFFF</value>
        <value condition="!String.IsEmpty(Skin.String(indicatorcolorbackgroundlabel.name))">$INFO[Skin.String(indicatorcolorbackgroundlabel.name)]</value>
        <value>FFFFFFFF</value>
    </variable>
    
    <variable name="userratingcolor.name.own">
        <value condition="!String.IsEmpty(Skin.String(userratingcolor.name.own))">$INFO[Skin.String(userratingcolor.name.own)]</value>
        <value>ColorUserrating</value>
    </variable>
    
    <variable name="ratingcolor.name.own">
        <value condition="!String.IsEmpty(Skin.String(ratingcolor.name.own))">$INFO[Skin.String(ratingcolor.name.own)]</value>
        <value>ColorRating</value>
    </variable>
    
    <variable name="starscolor.name.own">
        <value condition="!String.IsEmpty(Skin.String(starscolor.name.own))">$INFO[Skin.String(starscolor.name.own)]</value>
        <value>ffd402aa</value>
    </variable>
    
    <variable name="focuscolor2.name.own">
        <value condition="!String.IsEmpty(Skin.String(focuscolor2.name.own))">$INFO[Skin.String(focuscolor2.name.own)]</value>
        <value>00e8e8e8</value>
    </variable>
    
    <variable name="selectbarcolor.name.own">
        <value condition="!String.IsEmpty(Skin.String(selectbarcolor.name.own))">$INFO[Skin.String(selectbarcolor.name.own)]</value>
        <value>Dark1</value>
    </variable>

    <variable name="DefWidgetContent">
        <value condition="[String.IsEqual(Container(300).ListItem.Property(widget),weatherdaily) | String.IsEqual(Container(300).ListItem.Property(widget),weatherhourly)] + !String.IsEmpty(Skin.String(weather.fanart))">noop</value>
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(Background))">noop</value>
        <value condition="!String.IsEmpty(Skin.String(home.slideshowpath)) + String.IsEmpty(Container(300).ListItem.Property(widget))">noop</value>
        <value condition="!String.IsEmpty(Skin.String(home.fallbackwidget))">$INFO[Skin.String(home.fallbackwidget)]</value>
        <value condition="!String.IsEmpty(Skin.String(widgetSpotlightPath)) + String.IsEmpty(Skin.String(home.slideshowpath)) + !String.IsEqual(Skin.String(home.slideshowpath),pvr/background.jpg)">$INFO[Skin.String(widgetSpotlightPath)]</value>
        <value condition="!Library.HasContent(Movies) + !Library.HasContent(TVShows)">plugin://plugin.video.themoviedb.helper/?info=popular&amp;tmdb_type=movie&amp;widget=true&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</value>
        <value>$VAR[RandomMovies]</value>
    </variable>

    <variable name="DefWidgetTarget">
        <value condition="!String.IsEmpty(Skin.String(widgetTarget)) + String.IsEmpty(Skin.String(home.slideshowpath)) + !String.IsEqual(Skin.String(home.slideshowpath),pvr/background.jpg)">$INFO[Skin.String(widgetTarget)]</value>
        <value>videos</value>
    </variable>

    <variable name="DefWidgetLimit">
        <value condition="!String.IsEmpty(Skin.String(WidgetLimit))">$INFO[Skin.String(WidgetLimit)]</value>
        <value>$NUMBER[10]</value>
    </variable>

    <variable name="DefHubLimit">
        <value condition="!String.IsEmpty(Skin.String(HubLimit))">$INFO[Skin.String(HubLimit)]</value>
        <value>$NUMBER[10]</value>
    </variable>

    <include name="DefDialogButtons">
        <width>300</width>
        <font>Button</font>
        <textcolor>Black70</textcolor>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
    </include>

    <include name="DefDialogButtonsBlur">
        <align>left</align>
        <font>Small</font>
        <textcolor>PanelWhite100</textcolor>
        <disabledcolor>PanelWhite12</disabledcolor>
        <height>70</height>
        <width>450</width>
        <textureup flipy="true" colordiffuse="FF404040">buttons/spin-down.png</textureup>
        <texturedown colordiffuse="PanelWhite30">buttons/spin-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="PanelWhite100">buttons/spin-down.png</textureupfocus>
        <texturedownfocus colordiffuse="PanelWhite100">buttons/spin-down.png</texturedownfocus>
        <textureradiofocus colordiffuse="PanelWhite70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="PanelWhite70">buttons/radio-off.png</textureradionofocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</texturefocus>
        <radioposx>390</radioposx>
    </include>

    <include name="DefDialogButtonsDefault">
        <align>left</align>
        <font>Small</font>
        <textcolor>PanelWhite100</textcolor>
        <disabledcolor>PanelWhite12</disabledcolor>
        <height>70</height>
        <width>450</width>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/white.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/white.png</texturefocus>

    </include>

    <include name="DefInfoButtons">
        <font>Button</font>
        <textcolor>Dark2</textcolor>
        <width>247</width>
        <height>68</height>
        <onfocus>ClearProperty(content)</onfocus>
        <texturenofocus colordiffuse="Dark4" border="5">common/box.png</texturenofocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
        <alttexturenofocus colordiffuse="Dark4" border="5">common/box.png</alttexturenofocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</alttexturefocus>
    </include>

    <include name="DefDialogInfoPanel">
        <include>Animation.FadeIn.Slide</include>
        <include>Animation.FadeOut</include>
        <centerleft>50%</centerleft>
        <posy>120</posy>
        <width>1320</width>
        <height>840</height>
        <control type="image">
            <left>-9</left>
            <right>-9</right>
            <top>-24</top>
            <bottom>-24</bottom>
            <bordertexture border="32">common/shadow-24.png</bordertexture>
            <bordersize>24</bordersize>
            <texture colordiffuse="White100" border="16">common/box.png</texture>
        </control>
    </include>

    <include name="DefDialogInfoHeader">
        <left>30</left>
        <right>320</right>
        <posy>18</posy>
        <font>MediumBold</font>
        <align>left</align>
        <textcolor>Black70</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
    </include>

    <include name="DefDialogHeader">
        <param name="left" value="$PARAM[left]" default="LabelLeft"/>
        <param name="posy" value="$PARAM[posy]" default="25"/>
        <param name="width" value="$PARAM[width]" default="970"/>
        <definition>
        <description>header label</description>
        <left>$PARAM[left]</left>
        <posy>$PARAM[posy]</posy>
        <width>$PARAM[width]</width>
        <include>FontTop</include>
        <textcolor>Dark2</textcolor>
        </definition>
    </include>

    <include name="DefDialogHeaderUserRating">
        <description>header label</description>
        <left>LabelLeft</left>
        <posy>25</posy>
        <width>345</width>
        <left>25</left>
        <include>FontTop</include>
        <textcolor>Dark2</textcolor>
    </include>

    <include name="DefDialogBackground">
        <include>Animation.ZoomIn</include>
        <include>Animation.FadeOut</include>
        <centerleft>50%</centerleft>
        <centertop>50%</centertop>
        <height>900</height>
        <width>1080</width>
        <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
        </control>
    </include>

    <include name="DefDialogOK">
        <centerleft>50%</centerleft>
        <posy>360</posy>
        <width>900</width>
        <include>Animation.FadeIn.Slide</include>
        <include>Animation.FadeOut</include>
        <control type="image">
            <posx>-30</posx>
            <posy>-30</posy>
            <width>960</width>
            <height>444</height>
            <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
        </control>
        <control type="image">
            <left>-46</left>
            <right>-46</right>
            <top>-46</top>
            <height>476</height>
            <bordertexture border="32">common/shadow-24.png</bordertexture>
            <bordersize>24</bordersize>
            <texture colordiffuse="White100" border="16">common/box.png</texture>
        </control>
        <control type="label" id="1">
            <description>Heading</description>
            <left>75</left>
            <right>15</right>
            <include>FontTop</include>
            <align>left</align>
            <textcolor>Dark2</textcolor>
        </control>
        <include content="Kodi_Logo">
            <param name="dimensions" value="40"/>
            <param name="top" value="15"/>
            <param name="left" value="17"/>
        </include>

        <!-- Lines -->
        <control type="image">
            <top>70</top>
            <left>17</left>
            <width>860</width>
            <height>1</height>
            <bottom>10</bottom>
            <colordiffuse>Black12</colordiffuse>
            <texture>common/white.png</texture>
        </control>
        <control type="textbox" id="9">
            <description>Line 1</description>
            <left>15</left>
            <right>15</right>
            <posy>108</posy>
            <height>180</height>
            <font>Tiny</font>
        </control>
    </include>

    <include name="DefPVRDialogButton">
        <width>600</width>
        <height>66</height>
        <align>left</align>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
        <radioposx>540</radioposx>
        <textcolor>Black70</textcolor>
    </include>

    <include name="DefKeyboardKeys">
        <width>85</width>
        <height>75</height>
        <texturenofocus border="5" colordiffuse="Black12">common/box.png</texturenofocus>
        <texturefocus border="5" colordiffuse="$VAR[ColorHighlight]">common/box.png</texturefocus>
        <textoffsetx>0</textoffsetx>
        <textcolor>Black70</textcolor>
        <focusedcolor>Selected</focusedcolor>
        <radioposx>320</radioposx>
        <radioposy>22</radioposy>
    </include>

    <include name="DefContextButton">
        <radioposx>393</radioposx>
        <width>450</width>
        <height>70</height>
        <font>Tiny</font>
        <textcolor>Black70</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]" border="16">common/white.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="16">common/white.png</texturefocus>
    </include>

    <include name="DefContextButtonGTOGradient">
        <radioposx>393</radioposx>
        <textwidth>340</textwidth>
        <width>280</width>
        <height>50</height>
        <font>Tiny</font>
        <textcolor>Black70</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</texturefocus>
    </include>

    <include name="DefContextButtonGradient">
        <radioposx>393</radioposx>
        <textwidth>340</textwidth>
        <width>450</width>
        <height>70</height>
        <font>Tiny</font>
        <textcolor>Black70</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</texturefocus>
    </include>

    <include name="DefContextButtonGradientSelect">
        <radioposx>643</radioposx>
        <left>7</left>
        <align>left</align>
        <textwidth>600</textwidth>
        <width>700</width>
        <height>66</height>
        <font>Small</font>
        <disabledcolor>Black12</disabledcolor>
        <textcolor>Black70</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</texturefocus>
    </include>

    <include name="DefContextButtonGradientViewtype">
        <radioposx>403</radioposx>
        <left>7</left>
        <align>left</align>
        <textwidth>360</textwidth>
        <width>460</width>
        <height>66</height>
        <font>Small</font>
        <disabledcolor>Black12</disabledcolor>
        <textcolor>Black70</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</texturefocus>
    </include>

    <include name="DefDialogButtonsGradient">
        <width>300</width>
        <font>Small</font>
        <textcolor>Black70</textcolor>
        <height>70</height>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide.png</texturefocus>
    </include>

    <include name="DefWidgetSelectorInfo">
        <width>100%</width>
        <height>66</height>
        <align>left</align>
        <textoffsetx>20</textoffsetx>
        <disabledcolor>Black70</disabledcolor>
        <font>Button</font>
    </include>

    <include name="DefContextButtonBlur">
        <radioposx>392</radioposx>
        <width>450</width>
        <height>70</height>
        <font>Small</font>
        <align>left</align>
        <textcolor>PanelWhite100</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black70">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]" border="16">common/white.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="16">common/white.png</texturefocus>
    </include>

    <include name="DefContextButtonColorbox">
        <textoffsetx>80</textoffsetx>
        <radioposx>1245</radioposx>
        <width>1310</width>
        <height>70</height>
        <font>Small</font>
        <align>left</align>
        <textcolor>PanelWhite100</textcolor>
        <textureradiofocus colordiffuse="$PARAM[colorcode]">buttons/colorbox.png</textureradiofocus>
        <textureradionofocus colordiffuse="$PARAM[colorcode]">buttons/colorbox.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide.png</texturefocus>
    </include>
    
    <include name="DefContextButtonColorbox2">
        <textoffsetx>80</textoffsetx>
        <radioposx>0</radioposx>
        <width>30</width>
        <height>70</height>
        <font>Small</font>
        <align>left</align>
        <label/>
        <textcolor>PanelWhite100</textcolor>
        <textureradiofocus colordiffuse="$PARAM[colorcode]">buttons/colorbox.png</textureradiofocus>
        <textureradionofocus colordiffuse="$PARAM[colorcode]">buttons/colorbox.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide.png</texturefocus>
    </include>

    <include name="DefSettingsButton">
        <align>left</align>
        <font>Small</font>
        <textcolor>PanelWhite100</textcolor>
        <disabledcolor>PanelWhite12</disabledcolor>
        <height>70</height>
        <textureup flipy="true" colordiffuse="FF404040">buttons/spin-down.png</textureup>
        <texturedown colordiffuse="PanelWhite30">buttons/spin-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="PanelWhite100">buttons/spin-down.png</textureupfocus>
        <texturedownfocus colordiffuse="PanelWhite100">buttons/spin-down.png</texturedownfocus>
        <textureradiofocus colordiffuse="PanelWhite70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="PanelWhite70">buttons/radio-off.png</textureradionofocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</texturefocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</alttexturefocus>
    </include>

    <include name="DefSettingsButtonGradient">
        <align>left</align>
        <font>Small</font>
        <textcolor>PanelWhite100</textcolor>
        <disabledcolor>PanelWhite12</disabledcolor>
        <height>70</height>
        <textureup flipy="true" colordiffuse="FF404040">buttons/spin-down.png</textureup>
        <texturedown colordiffuse="PanelWhite30">buttons/spin-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="PanelWhite100">buttons/spin-down.png</textureupfocus>
        <texturedownfocus colordiffuse="PanelWhite100">buttons/spin-down.png</texturedownfocus>
        <textureradiofocus colordiffuse="PanelWhite70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="PanelWhite70">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</texturefocus>
    </include>

    <include name="DefSettingsButtonGradientSkinSettings">
        <align>left</align>
        <font>Small</font>
        <textoffsetx>80</textoffsetx>
        <textcolor>PanelWhite100</textcolor>
        <disabledcolor>PanelWhite12</disabledcolor>
        <height>70</height>
        <textureup flipy="true" colordiffuse="FF404040">buttons/spin-down.png</textureup>
        <texturedown colordiffuse="PanelWhite30">buttons/spin-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="PanelWhite100">buttons/spin-down.png</textureupfocus>
        <texturedownfocus colordiffuse="PanelWhite100">buttons/spin-down.png</texturedownfocus>
        <textureradiofocus colordiffuse="PanelWhite70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="PanelWhite70">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</texturefocus>
    </include>

    <include name="DefSettingsButtonGradientDisabled">
        <align>left</align>
        <font>Small</font>
        <height>70</height>
        <textureradioonfocus colordiffuse="PanelWhite70">buttons/radio-disabled.png</textureradioonfocus>
        <textureradioonnofocus colordiffuse="PanelWhite12">buttons/radio-disabled.png</textureradioonnofocus>
        <textureradioofffocus colordiffuse="PanelWhite70">buttons/radio-disabled.png</textureradioofffocus>
        <textureradiooffnofocus colordiffuse="PanelWhite70">buttons/radio-disabled.png</textureradiooffnofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightOtherBar]" border="5">common/gradient-box-wide-cut.png</texturefocus>
    </include>

    <include name="DefSettingsButtonNew">
        <align>left</align>
        <font>Small</font>
        <textcolor>PanelWhite100</textcolor>
        <disabledcolor>PanelWhite30</disabledcolor>
        <height>70</height>
        <textureup flipy="true" colordiffuse="FF404040">buttons/spin-down.png</textureup>
        <texturedown colordiffuse="PanelWhite30">buttons/spin-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="PanelWhite100">buttons/spin-down.png</textureupfocus>
        <texturedownfocus colordiffuse="PanelWhite100">buttons/spin-down.png</texturedownfocus>
        <textureradiofocus colordiffuse="PanelWhite70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="PanelWhite70">buttons/radio-off.png</textureradionofocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</texturefocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</alttexturefocus>
    </include>

    <include name="DefSettingsLabel">
        <enable>false</enable>
        <textoffsetx>30</textoffsetx>
        <font>Button</font>
        <textcolor>PanelWhite30</textcolor>
        <align>left</align>
        <width>1310</width>
        <disabledcolor>PanelWhite30</disabledcolor>
        <height>70</height>
        <texturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</texturefocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</alttexturefocus>
    </include>

    <include name="DefContextMenuLabel">
        <enable>false</enable>
        <textoffsetx>30</textoffsetx>
        <font>Button</font>
        <textcolor>Dark3</textcolor>
        <align>left</align>
        <width>1310</width>
        <disabledcolor>Dark3</disabledcolor>
        <height>70</height>
        <texturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</texturefocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</alttexturefocus>
    </include>

    <include name="DefSettingsButtonLabelInfo">
        <align>center</align>
        <font>Tiny</font>
        <textcolor>PanelWhite100</textcolor>
        <disabledcolor>PanelWhite100</disabledcolor>
        <height>250</height>
        <texturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</texturefocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</alttexturefocus>
    </include>

    <include name="DefSettingsButtonLabelContextName">
        <align>left</align>
        <textoffsetx>30</textoffsetx>
        <font>Button</font>
        <textcolor>Dark3</textcolor>
        <disabledcolor>Dark3</disabledcolor>
        <height>70</height>
        <right>$PARAM[fromright]</right>
        <textureup flipy="true" colordiffuse="PanelWhite30">buttons/spin-down.png</textureup>
        <texturedown colordiffuse="PanelWhite30">buttons/spin-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="PanelWhite100">buttons/spin-down.png</textureupfocus>
        <texturedownfocus colordiffuse="PanelWhite100">buttons/spin-down.png</texturedownfocus>
        <textureradiofocus colordiffuse="PanelWhite70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="PanelWhite70">buttons/radio-off.png</textureradionofocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</texturefocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</alttexturefocus>
    </include>

    <include name="Def9000GroupList">
        <param name="height" default="350"/>
        <definition>
        <visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
        <onleft>50</onleft>
        <onright>50</onright>
        <onback>50</onback>
        <posx>8</posx>
        <posy>16</posy>
        <width>510</width>
        <height>$PARAM[height]</height>
        <itemgap>0</itemgap>
        </definition>
    </include>

    <include name="Def9000GroupListHub">
        <visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
        <onleft>9500</onleft>
        <onright>9500</onright>
        <onback>9500</onback>
        <posx>8</posx>
        <posy>16</posy>
        <width>510</width>
        <height>350</height>
        <itemgap>0</itemgap>
    </include>

    <include name="Def9000Arrows">
        <param name="arrow_top" default="-16"/>
        <param name="arrow_bottom" default="690"/>
        <definition>
        <control type="group">
            <control type="image">
                <centerleft>50%</centerleft>
                <posy>$PARAM[arrow_top]</posy>
                <include>arrowdimensions</include>
                <texture colordiffuse="White70" flipy="true">common/arrow-small.png</texture>
            </control>
            <control type="image">
                <centerleft>50%</centerleft>
                <posy>$PARAM[arrow_bottom]</posy>
                <include>arrowdimensions</include>
                <texture colordiffuse="White70" flipy="false">common/arrow-small.png</texture>
            </control>
        </control>
        </definition>
    </include>

    <include name="Def9000Background">
        <visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
        <include>Animation.ZoomIn</include>
        <include>Animation.FadeOut</include>
        <top>184</top>
        <centerleft>50%</centerleft>
        <height>382</height>
        <width>466</width>
        <control type="image">
            <description>background image</description>
            <posx>0</posx>
            <posy>0</posy>
            <width>466</width>
            <height>100%</height>
            <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
        </control>
    </include>

    <include name="Def9000MusicSide">
        <control type="button" id="9001">
            <include>DefContextButtonGradient</include>
            <label>$LOCALIZE[582]: $INFO[Container.Viewmode]</label>
            <align>left</align>
            <onclick>ActivateWindow(1153)</onclick>
            <visible>!Skin.HasSetting(views.oldselector)</visible>
        </control>
        <control type="button" id="2">
            <description>View</description>
            <include condition="Skin.HasSetting(enable.forcedviews)">unlock_views</include>
            <include>DefContextButtonGradient</include>
            <align>left</align>
            <visible>Skin.HasSetting(views.oldselector)</visible>
        </control>
        <control type="radiobutton" id="1111">
            <selected>[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))] | [Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))] | [Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))] | [Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))] | [Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))] | [Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))] | [Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))] | [Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))] | [Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))] | [Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))] | [Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))] | [Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))] | [Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))] | [Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))] | [Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))] | [Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))] | [Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))] | [Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))] | [Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))] | [Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))] | [Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))] | [Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))] | [Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))] | [Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))] | [Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]</selected>
            <include>DefContextButtonGradient</include>
            <align>left</align>
            <label>$LOCALIZE[31420] $VAR[label_container]</label>
            <include>unlock_views</include>
            <include>lock_views</include>
            <visible>!String.IsEmpty(Container.Content) + Skin.HasSetting(enable.forcedviews)</visible>
        </control>
        <control type="button" id="3">
            <description>Sort</description>
            <include>DefContextButtonGradient</include>
            <align>left</align>
        </control>
        <control type="togglebutton" id="4">
            <description>Ascending</description>
            <include>DefContextButtonGradient</include>
            <align>left</align>
            <label>584</label>
            <altlabel>585</altlabel>
        </control>
    </include>

    <include name="DefHomeRight520">
        <right>508</right>
    </include>

    <include name="DefHomeRightSidePad">
        <right>64</right>
    </include>

    <variable name="ContentMusicYoutube">
        <value condition="Container.Content(artists) + String.IsEqual(Window.Property(musicyoutube),1)">plugin://plugin.video.youtube/search/?q=$INFO[ListItem.Artist]</value>
        <value condition="Container.Content(albums) + String.IsEqual(Window.Property(musicyoutube),1)">plugin://plugin.video.youtube/search/?q=$INFO[ListItem.Artist] $INFO[ListItem.Album] Album</value>
        <value condition="Container.Content(songs) + String.IsEqual(Window.Property(musicyoutube),1)">plugin://plugin.video.youtube/search/?q=$INFO[ListItem.Artist] $INFO[ListItem.Title]</value>
    </variable>

    <variable name="ContentVideoYoutube">
        <value condition="String.IsEqual(Window.Property(videoyoutube),1)">plugin://plugin.video.youtube/search/?q=$INFO[ListItem.Label]</value>
        <value condition="String.IsEqual(Window.Property(actinfo),5)">plugin://plugin.video.youtube/search/?q=$INFO[Container(10051).ListItem.Label]</value>
    </variable>

    <variable name="DefMovieDBMoviesContent">
        <value condition="String.IsEqual(Window(1104).Property(content),1)">plugin://plugin.video.themoviedb.helper?info=top_rated&amp;type=movie</value>
        <value condition="String.IsEqual(Window(1104).Property(content),2)">plugin://plugin.video.themoviedb.helper?info=popular&amp;type=movie</value>
        <value condition="String.IsEqual(Window(1104).Property(content),3)">plugin://plugin.video.themoviedb.helper?info=upcoming&amp;type=movie</value>
        <value>plugin://plugin.video.themoviedb.helper?info=now_playing&amp;type=movie</value>
    </variable>

    <variable name="DefMovieDBEpisodesContent">
        <value condition="String.IsEqual(Window(1105).Property(content),1)">plugin://plugin.video.themoviedb.helper?info=top_rated&amp;type=tv</value>
        <value condition="String.IsEqual(Window(1105).Property(content),2)">plugin://plugin.video.themoviedb.helper?info=popular&amp;type=tv</value>
        <value condition="String.IsEqual(Window(1105).Property(content),3)">plugin://plugin.video.themoviedb.helper?info=on_the_air&amp;type=tv</value>
        <value>plugin://plugin.video.themoviedb.helper?info=airing_today&amp;type=tv</value>
    </variable>

    <variable name="Def_Director_List">
        <value condition="!Skin.HasSetting(extended.info.only.local)">plugin://plugin.video.themoviedb.helper/?info=crew_in_movies&amp;type=person&amp;filter_key=job&amp;filter_value=Director&amp;query=$INFO[ListItem.Director]&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]&amp;nextpage=false</value>
        <value>videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22director%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Director]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
    </variable>

    <variable name="Def_Director_Item">
        <value condition="!Skin.HasSetting(extended.info.only.local)">RunScript(script.embuary.info,call=movie,query=$INFO[Container(9506).ListItem.Label])</value>
        <value>RunScript(script.embuary.info,call=movie,dbid=$INFO[ListItem.DBID])</value>
    </variable>

    <variable name="Def_Set_List">
        <value condition="!Skin.HasSetting(extended.info.only.local) + !String.IsEmpty(ListItem.Set)">plugin://plugin.video.themoviedb.helper/?info=collection&amp;type=movie&amp;query=$INFO[ListItem.Set]&amp;nextpage=false</value>
        <value condition="!String.IsEmpty(ListItem.Set)">videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22set%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Set]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
    </variable>

    <variable name="Def_Set_Item">
        <value condition="!Skin.HasSetting(extended.info.only.local)">RunScript(script.embuary.info,call=movie,query=$INFO[Container(9515).ListItem.Label])</value>
        <value>RunScript(script.embuary.info,call=movie,dbid=$INFO[ListItem.DBID])</value>
    </variable>

    <variable name="Def_Studio_List">
        <value condition="!Skin.HasSetting(extended.info.only.local) + String.IsEqual(ListItem.DBType,tvshow)">plugin://plugin.video.themoviedb.helper?info=discover&amp;type=tv&amp;with_companies=$INFO[Window(Home).Property(TMDBHelper.ListItem.Studio.1.TMDB_ID)]&amp;with_id=True&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]&amp;nextpage=false</value>
        <value condition="Skin.HasSetting(extended.info.only.local) + String.IsEqual(ListItem.DBType,tvshow)">videodb://tvshows/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22studio%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Studio]%22%5d%7d%5d%7d%2c%22type%22%3a%22tvshows%22%7d</value>
        <value condition="!Skin.HasSetting(extended.info.only.local) + String.IsEqual(ListItem.DBType,movie)">plugin://plugin.video.themoviedb.helper?info=discover&amp;type=movie&amp;with_companies=$INFO[Window(Home).Property(TMDBHelper.ListItem.Studio.1.TMDB_ID)]&amp;with_id=True&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]&amp;nextpage=false</value>
        <value condition="Skin.HasSetting(extended.info.only.local) + String.IsEqual(ListItem.DBType,movie)">videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22studio%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Studio]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
    </variable>

    <variable name="Def_Studio_Item">
        <value condition="!Skin.HasSetting(extended.info.only.local)">RunScript(script.embuary.info,call=movie,query=$INFO[Container(9503).ListItem.Label])</value>
        <value>RunScript(script.embuary.info,call=movie,dbid=$INFO[ListItem.DBID])</value>
    </variable>

    <variable name="Def_Studio_Item_TV">
        <value condition="!Skin.HasSetting(extended.info.only.local)">RunScript(script.embuary.info,call=tv,query=$INFO[Container(9503).ListItem.Label])</value>
        <value>RunScript(script.embuary.info,call=tv,dbid=$INFO[ListItem.DBID])</value>
    </variable>

    <variable name="Def_Similar_List">
        <value condition="!Skin.HasSetting(extended.info.only.local) + String.IsEqual(Window.Property(videosimilar),1) + String.IsEqual(ListItem.DBType,tvshow)">plugin://plugin.video.themoviedb.helper?info=similar&amp;type=tv&amp;query=$INFO[ListItem.Label]&amp;nextpage=false</value>
        <value condition="Skin.HasSetting(extended.info.only.local) + String.IsEqual(Window.Property(videosimilar),1) + String.IsEqual(ListItem.DBType,tvshow)">plugin://script.embuary.helper/?info=getsimilar&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow</value>
        <value condition="!Skin.HasSetting(extended.info.only.local) + String.IsEqual(Window.Property(videosimilar),1) + String.IsEqual(ListItem.DBType,movie)">plugin://plugin.video.themoviedb.helper?info=similar&amp;type=movie&amp;query=$INFO[ListItem.Label]&amp;nextpage=false</value>
        <value condition="Skin.HasSetting(extended.info.only.local) + String.IsEqual(Window.Property(videosimilar),1) + String.IsEqual(ListItem.DBType,movie)">plugin://script.embuary.helper/?info=getsimilar&amp;dbid=$INFO[ListItem.DBID]&amp;type=movie</value>
    </variable>

    <variable name="Def_Similar_Item">
        <value condition="!Skin.HasSetting(extended.info.only.local)">RunScript(script.embuary.info,call=movie,query=$INFO[Container(9502).ListItem.Label])</value>
        <value>RunScript(script.embuary.info,call=movie,dbid=$INFO[ListItem.DBID])</value>
    </variable>

    <variable name="Def_Similar_Item_TV">
        <value condition="!Skin.HasSetting(extended.info.only.local)">RunScript(script.embuary.info,call=tv,query=$INFO[Container(9502).ListItem.Label])</value>
        <value>RunScript(script.embuary.info,call=tv,dbid=$INFO[ListItem.DBID])</value>
    </variable>

    <include name="DefHubWindow">
        <include>GlobalBackground</include>
        <include>Furniture_Header</include>
        <include>Furniture_NowPlaying</include>
        <include>Furniture_Clock</include>
        <include>Furniture_Weather</include>
        <include>Furniture_Hub_Flags</include>
        <control type="group">
            <include>Animation.Common</include>
            <control type="group">
                <top>PosterPad</top>
                <left>SidePad</left>
                <right>SidePad</right>
                <height>640</height>
                <control type="group">
                    <control type="image">
                        <left>-8</left>
                        <width>1138</width>
                        <top>-8</top>
                        <bottom>-8</bottom>
                        <texture border="15" colordiffuse="Panel">common/rounded-shadow8.png</texture>
                    </control>
                    <control type="image">
                        <left>0</left>
                        <width>1122</width>
                        <top>0</top>
                        <bottom>0</bottom>
                        <texture background="true" diffuse="diffuse/home-fanart.png">pvr/background.jpg</texture>
                        <visible>!Integer.IsGreater(Container(9500).NumItems,0)</visible>
                    </control>
                    <control type="wraplist" id="9500">
                        <description>Widget</description>
                        <left>0</left>
                        <width>1122</width>
                        <top>0</top>
                        <bottom>0</bottom>
                        <onright>9501</onright>
                        <onleft>9000</onleft>
                        <onup>9500</onup>
                        <ondown>9500</ondown>
                        <preloaditems>1</preloaditems>
                        <orientation>vertical</orientation>
                        <autoscroll time="10000">!Control.HasFocus(9500)</autoscroll>
                        <include>ScrolltimeViewsList</include>
                        <include>Animation.FadeIn</include>
                        <include>Animation.FadeOut</include>
                        <itemlayout width="1122" height="640">
                            <control type="image">
                                <width>100%</width>
                                <height>100%</height>
                                <texture background="true" diffuse="diffuse/bigwiderolodex.png" border="5">$VAR[FanartImage]</texture>
                            </control>
                        </itemlayout>
                        <focusedlayout width="1122" height="640">
                            <control type="image">
                                <width>100%</width>
                                <height>100%</height>
                                <texture background="true" diffuse="diffuse/bigwiderolodex.png" border="5">$VAR[FanartImage]</texture>
                            </control>
                        </focusedlayout>
                        <content limit="$VAR[DefHubLimit]" target="$VAR[DefHubWidgetTarget]">$VAR[DefHubWidget]</content>
                    </control>
                    <control type="group">
                        <left>0</left>
                        <width>1122</width>
                        <bottom>0</bottom>
                        <height>70</height>
                        <visible>Integer.IsGreater(Container(9500).NumItems,0)</visible>
                        <animation effect="fade" start="0" end="100" time="500">Visible</animation>
                        <animation effect="fade" start="100" end="0" time="300">Hidden</animation>
                        <visible>Skin.HasSetting(hub.showplot)</visible>
                        <control type="image">
                            <left>0</left>
                            <right>0</right>
                            <bottom>0</bottom>
                            <height>210</height>
                            <texture border="15" colordiffuse="df000000">common/shadowbottom.png</texture>
                        </control>
                        <control type="label">
                            <posx>30</posx>
                            <top>-80</top>
                            <width>200</width>
                            <font>Small</font>
                            <aligny>center</aligny>
                            <height>64</height>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Year]</label>
                        </control>
                        <control type="label">
                            <posx>120</posx>
                            <top>-80</top>
                            <width max="730">auto</width>
                            <aligny>center</aligny>
                            <height>64</height>
                            <font>Small</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Label]</label>
                        </control>
                        <control type="label">
                            <top>-80</top>
                            <right>154</right>
                            <width>500</width>
                            <aligny>center</aligny>
                            <height>64</height>
                            <align>right</align>
                            <font>Small</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$VAR[LabelDurationTimeCheck9500]</label>
                        </control>
                        <control type="label">
                            <centerright>96</centerright>
                            <width>50</width>
                            <top>-72</top>
                            <height>50</height>
                            <textcolor>$VAR[WatchedLabelPosterColor]</textcolor>
                            <font>SymbolPoster</font>
                            <label>$VAR[LabelPercentWatched9500]</label>
                            <visible>!String.IsEqual(ListItem.Label,..)</visible>
                        </control>
                        <control type="label">
                            <right>30</right>
                            <width>500</width>
                            <top>-80</top>
                            <aligny>center</aligny>
                            <height>64</height>
                            <align>right</align>
                            <font>Small</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$VAR[RatingLabel9500]</label>
                        </control>
                        <control type="textbox">
                            <top>-20</top>
                            <left>30</left>
                            <right>30</right>
                            <height>67</height>
                            <align>justify</align>
                            <font>Tiny</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Plot]</label>
                        </control>
                    </control>
                    <control type="group">
                        <left>0</left>
                        <width>1122</width>
                        <bottom>0</bottom>
                        <height>70</height>
                        <animation effect="fade" start="0" end="100" time="500">Visible</animation>
                        <animation effect="fade" start="100" end="0" time="300">Hidden</animation>
                        <visible>!Skin.HasSetting(hub.showplot)</visible>
                        <visible>Integer.IsGreater(Container(9500).NumItems,0)</visible>
                        <control type="image">
                            <left>0</left>
                            <right>0</right>
                            <bottom>0</bottom>
                            <height>90</height>
                            <texture border="15" colordiffuse="df000000">common/shadowbottomsmall.png</texture>
                        </control>
                        <control type="label">
                            <posx>30</posx>
                            <width>200</width>
                            <font>Small</font>
                            <aligny>center</aligny>
                            <height>64</height>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Year]</label>
                        </control>
                        <control type="label">
                            <posx>120</posx>
                            <width max="730">auto</width>
                            <aligny>center</aligny>
                            <height>64</height>
                            <font>Small</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Label]</label>
                        </control>
                        <control type="label">
                            <right>154</right>
                            <width>500</width>
                            <aligny>center</aligny>
                            <height>64</height>
                            <align>right</align>
                            <font>Small</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$VAR[LabelDurationTimeCheck9500]</label>
                        </control>
                        <control type="label">
                            <centerright>96</centerright>
                            <width>50</width>
                            <top>7</top>
                            <height>50</height>
                            <textcolor>$VAR[WatchedLabelPosterColor]</textcolor>
                            <font>SymbolPoster</font>
                            <label>$VAR[LabelPercentWatched9500]</label>
                            <visible>!String.IsEqual(ListItem.Label,..)</visible>
                        </control>
                        <control type="label">
                            <right>30</right>
                            <width>500</width>
                            <aligny>center</aligny>
                            <height>64</height>
                            <align>right</align>
                            <font>Small</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$VAR[RatingLabel9500]</label>
                        </control>
                    </control>
                    <control type="image">
                        <left>0</left>
                        <top>0</top>
                        <right>637</right>
                        <bottom>0</bottom>
                        <texture colordiffuse="Box2" border="4" background="true">common/box21.png</texture>
                        <visible>!Skin.HasSetting(thumbnails.white)</visible>
                    </control>
                    <control type="image">
                        <left>-2</left>
                        <width>1126</width>
                        <top>-2</top>
                        <height>644</height>
                        <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
                        <visible>Control.HasFocus(9500)</visible>
                    </control>
                </control>
                <control type="group">
                    <control type="list" id="9501">
                        <description>Widget</description>
                        <left>1140</left>
                        <right>0</right>
                        <top>0</top>
                        <height>640</height>
                        <onleft>9500</onleft>
                        <onright>60</onright>
                        <onup>9501</onup>
                        <ondown>9501</ondown>
                        <pagecontrol>60</pagecontrol>
                        <preloaditems>2</preloaditems>
                        <orientation>vertical</orientation>
                        <include>ScrolltimeViewsList</include>
                        <include>Animation.FadeIn</include>
                        <include>Animation.FadeOut</include>
                        <itemlayout width="620" height="80">
                            <control type="image">
                                <right>0</right>
                                <top>5</top>
                                <bottom>0</bottom>
                                <width>70</width>
                                <height>70</height>
                                <texture colordiffuse="Dark2">$INFO[ListItem.Icon]</texture>
                            </control>
                            <control type="label">
                                <left>30</left>
                                <right>SidePad</right>
                                <height>100%</height>
                                <font>SmallNavi</font>
                                <textcolor>Dark2</textcolor>
                                <label>$INFO[ListItem.Label]</label>
                            </control>
                        </itemlayout>
                        <focusedlayout width="620" height="80">
                            <control type="group">
                                <visible>Control.HasFocus(9501)</visible>
                                <control type="image">
                                    <width>100%</width>
                                    <height>100%</height>
                                    <texture border="8" colordiffuse="$VAR[ColorSelectBar]">common/box.png</texture>
                                </control>
                                <control type="image">
                                    <width>100%</width>
                                    <height>100%</height>
                                    <texture border="8" colordiffuse="$VAR[ColorHighlight2]">common/gradient-box-wide.png</texture>
                                </control>
                                <control type="image">
                                    <right>0</right>
                                    <top>5</top>
                                    <bottom>0</bottom>
                                    <width>70</width>
                                    <height>70</height>
                                    <texture colordiffuse="Light1">$INFO[ListItem.Icon]</texture>
                                </control>
                                <control type="label">
                                    <left>30</left>
                                    <right>SidePad</right>
                                    <height>100%</height>
                                    <font>SmallNavi</font>
                                    <textcolor>Light1</textcolor>
                                    <label>$INFO[ListItem.Label]</label>
                                </control>
                            </control>
                            <control type="group">
                                <visible>!Control.HasFocus(9501)</visible>
                                <control type="image">
                                    <right>0</right>
                                    <top>0</top>
                                    <bottom>0</bottom>
                                    <width>80</width>
                                    <texture colordiffuse="Dark1">$INFO[ListItem.Icon]</texture>
                                </control>
                                <control type="label">
                                    <left>30</left>
                                    <right>SidePad</right>
                                    <height>100%</height>
                                    <font>SmallNavi</font>
                                    <textcolor>Dark2</textcolor>
                                    <label>$INFO[ListItem.Label]</label>
                                </control>
                            </control>
                        </focusedlayout>
                        <content>
                            <include>$PARAM[list]</include>
                        </content>
                    </control>
                </control>
            </control>
            <control type="scrollbar" id="60">
                <onback>9501</onback>
                <centerright>60</centerright>
                <posy>PosterPad</posy>
                <height>PosterH</height>
                <width>8</width>
                <onleft>9501</onleft>
                <onright>9501</onright>
                <texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
                <texturesliderbar border="4" colordiffuse="Dark3">scrollbar/scrollv.png</texturesliderbar>
                <texturesliderbarfocus border="4" colordiffuse="Dark2">scrollbar/scrollv.png</texturesliderbarfocus>
                <animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
            </control>
        </control>
        <control type="group">
            <include>Animation.FadeIn</include>
            <include>Animation.FadeOut</include>
            <visible>ControlGroup(9000).HasFocus()</visible>
            <include>GlobalOverlay</include>
        </control>
        <control type="group">
            <height>483</height>
            <include>Def9000Background</include>
            <control type="group">
                <control type="image">
                    <description>arrow image</description>
                    <centerleft>50%</centerleft>
                    <posy>-16</posy>
                    <include>arrowdimensions</include>
                    <texture colordiffuse="White70" flipy="true">common/arrow-small.png</texture>
                </control>
                <control type="image">
                    <description>arrow image</description>
                    <centerleft>50%</centerleft>
                    <posy>482</posy>
                    <include>arrowdimensions</include>
                    <texture colordiffuse="White70" flipy="false">common/arrow-small.png</texture>
                </control>
            </control>
            <control type="group">
                <left>22</left>
                <top>22</top>
                <control type="label">
                    <description>Header Label</description>
                    <left>70</left>
                    <width>1000</width>
                    <posy>0</posy>
                    <include>FontTop</include>
                    <textcolor>Dark2</textcolor>
                    <label>14018</label>
                </control>
                <include>Kodi_Logo</include>

                <!-- Lines -->
                <control type="image">
                    <top>70</top>
                    <left>17</left>
                    <width>385</width>
                    <height>1</height>
                    <bottom>10</bottom>
                    <colordiffuse>Black12</colordiffuse>
                    <texture>common/white.png</texture>
                </control>
            </control>
            <control type="image">
                <top>110</top>
                <left>8</left>
                <height>70</height>
                <width>450</width>
                <texture colordiffuse="$VAR[ColorSelectOtherBar]">common/white.png</texture>
                <visible>ControlGroup(9000).HasFocus() + !ControlGroup(6150).HasFocus()</visible>
                <animation effect="fade" start="100" end="100" delay="20" time="1">Visible</animation>
                <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9000).Position,0)">Conditional</animation>
                <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9000).Position,1)">Conditional</animation>
                <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9000).Position,2)">Conditional</animation>
                <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9000).Position,3)">Conditional</animation>
                <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9000).Position,4)">Conditional</animation>
                <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9000).Position,5)">Conditional</animation>
            </control>
            <control type="grouplist" id="9000">
                <height>350</height>
                <top>110</top>
                <usecontrolcoords>true</usecontrolcoords>
                <include>Def9000GroupListHub</include>
                <scrolltime>0</scrolltime>
                <control type="radiobutton" id="9296">
                    <include>DefContextButtonGradient</include>
                    <align>left</align>
                    <label>31299</label>
                    <selected>Skin.HasSetting(hub.showplot)</selected>
                    <onclick>Skin.ToggleSetting(hub.showplot)</onclick>
                </control>
                <control type="radiobutton" id="9081" description="moreshadows">
                    <include>DefContextButtonGradient</include>
                    <align>left</align>
                    <label>31328</label>
                    <selected>Skin.HasSetting(global.moreshadows)</selected>
                    <onclick>Skin.ToggleSetting(global.moreshadows)</onclick>
                </control>
                <control type="radiobutton" id="9584">
                    <include>DefContextButtonGradient</include>
                    <label>31017</label>
                    <align>left</align>
                    <selected>Skin.HasSetting(furniture.coloredicons)</selected>
                    <onclick>Skin.ToggleSetting(furniture.coloredicons)</onclick>
                    <visible>!Skin.HasSetting(furniture.flags) + Skin.HasSetting(furniture.flagicons)</visible>
                </control>
                <control type="radiobutton" id="9087">
                    <include>DefContextButtonGradient</include>
                    <align>left</align>
                    <label>31563</label>
                    <selected>!Skin.HasSetting(thumbnails.white)</selected>
                    <onclick>Skin.ToggleSetting(thumbnails.white)</onclick>
                </control>
                <control type="togglebutton" id="20">
                    <description>Update</description>
                    <align>left</align>
                    <label>653</label>
                    <altlabel>13353</altlabel>
                    <include>DefContextButtonGradient</include>
                    <usealttexture>Library.IsScanningVideo</usealttexture>
                </control>
                <include>ButtonPlaylist</include>
                <control type="button" id="5555">
                    <include>DefContextButtonGradient</include>
                    <align>left</align>
                    <label>31195</label>
                    <onclick>ReloadSkin()</onclick>
                    <visible>Skin.HasSetting(DebugInfo)</visible>
                </control>
            </control>
        </control>
    </include>

    <variable name="DefHubWidget">
        <value condition="Window.IsVisible(1111) + !String.IsEmpty(Skin.String(Widget.1111))">$INFO[Skin.String(Widget.1111)]</value>
        <value condition="Window.IsVisible(1112) + !String.IsEmpty(Skin.String(Widget.1112))">$INFO[Skin.String(Widget.1112)]</value>
        <value condition="Window.IsVisible(1113) + !String.IsEmpty(Skin.String(Widget.1113))">$INFO[Skin.String(Widget.1113)]</value>
        <value condition="Window.IsVisible(1114) + !String.IsEmpty(Skin.String(Widget.1114))">$INFO[Skin.String(Widget.1114)]</value>
        <value condition="Window.IsVisible(1115) + !String.IsEmpty(Skin.String(Widget.1115))">$INFO[Skin.String(Widget.1115)]</value>
        <value condition="Window.IsVisible(1116) + !String.IsEmpty(Skin.String(Widget.1116))">$INFO[Skin.String(Widget.1116)]</value>
        <value condition="Window.IsVisible(1117) + !String.IsEmpty(Skin.String(Widget.1117))">$INFO[Skin.String(Widget.1117)]</value>
        <value condition="Window.IsVisible(1118) + !String.IsEmpty(Skin.String(Widget.1118))">$INFO[Skin.String(Widget.1118)]</value>
        <value condition="Window.IsVisible(1119) + !String.IsEmpty(Skin.String(Widget.1119))">$INFO[Skin.String(Widget.1119)]</value>
        <value condition="Window.IsVisible(1112)">special://skin/extras/playlists/RandomEpisodes.xsp</value>
        <value>special://skin/extras/playlists/RandomMovies.xsp</value>
    </variable>

    <variable name="DefHubWidgetTarget">
        <value condition="Window.IsVisible(1111) + !String.IsEmpty(Skin.String(Widget.1111)) + !String.IsEmpty(Skin.String(Widget.1111.Content))">$INFO[Skin.String(Widget.1111.Content)]</value>
        <value condition="Window.IsVisible(1112) + !String.IsEmpty(Skin.String(Widget.1112)) + !String.IsEmpty(Skin.String(Widget.1112.Content))">$INFO[Skin.String(Widget.1112.Content)]</value>
        <value condition="Window.IsVisible(1113) + !String.IsEmpty(Skin.String(Widget.1113)) + !String.IsEmpty(Skin.String(Widget.1113.Content))">$INFO[Skin.String(Widget.1113.Content)]</value>
        <value condition="Window.IsVisible(1114) + !String.IsEmpty(Skin.String(Widget.1114)) + !String.IsEmpty(Skin.String(Widget.1114.Content))">$INFO[Skin.String(Widget.1114.Content)]</value>
        <value condition="Window.IsVisible(1115) + !String.IsEmpty(Skin.String(Widget.1115)) + !String.IsEmpty(Skin.String(Widget.1115.Content))">$INFO[Skin.String(Widget.1115.Content)]</value>
        <value condition="Window.IsVisible(1116) + !String.IsEmpty(Skin.String(Widget.1116)) + !String.IsEmpty(Skin.String(Widget.1116.Content))">$INFO[Skin.String(Widget.1116.Content)]</value>
        <value condition="Window.IsVisible(1117) + !String.IsEmpty(Skin.String(Widget.1117)) + !String.IsEmpty(Skin.String(Widget.1117.Content))">$INFO[Skin.String(Widget.1117.Content)]</value>
        <value condition="Window.IsVisible(1118) + !String.IsEmpty(Skin.String(Widget.1118)) + !String.IsEmpty(Skin.String(Widget.1118.Content))">$INFO[Skin.String(Widget.1118.Content)]</value>
        <value condition="Window.IsVisible(1119) + !String.IsEmpty(Skin.String(Widget.1119)) + !String.IsEmpty(Skin.String(Widget.1119.Content))">$INFO[Skin.String(Widget.1119.Content)]</value>
        <value>videos</value>
    </variable>

    <include name="Defs_Shortcuts_SetHub">
        <control type="button" id="$PARAM[buttonid2]" description="Set HUB WIDGET">
            <width>100%</width>
            <label>31273</label>
            <height>66</height>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtons</include>
            <label2>$INFO[Skin.String(Widget.$PARAM[hubid].Label)]</label2>
            <visible>String.IsEqual(Container(211).ListItem.Label2,Hub $PARAM[hubid]) | String.IsEqual(Container(211).ListItem.Property(Path),ActivateWindow($PARAM[hubid]))</visible>
            <visible>String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))</visible>
            <onclick>RunScript(script.skinshortcuts,type=shortcuts&amp;grouping=widget&amp;skinList=Widget.$PARAM[hubid]&amp;skinLabel=Widget.$PARAM[hubid].Label&amp;skinType=Widget.$PARAM[hubid].Type)</onclick>
            <onunfocus condition="[String.Contains(Skin.String(Widget.$PARAM[hubid]),musicdb://) | String.Contains(Skin.String(Widget.$PARAM[hubid]),library://music) | String.Contains(Skin.String(Widget.$PARAM[hubid]),sources://music) | String.Contains(Skin.String(Widget.$PARAM[hubid]),plugin://plugin.audio)]">Skin.SetString(Widget.$PARAM[hubid].Content,music)</onunfocus>
            <onunfocus condition="String.Contains(Skin.String(Widget.$PARAM[hubid]),Pictures)">Skin.SetString(Widget.$PARAM[hubid].Content,pictures)</onunfocus>
            <onunfocus condition="!String.IsEmpty(Skin.String(Widget.$PARAM[hubid])) + ![String.Contains(Skin.String(Widget.$PARAM[hubid]),Pictures) | String.Contains(Skin.String(Widget.$PARAM[hubid]),musicdb://) | String.Contains(Skin.String(Widget.$PARAM[hubid]),library://music) | String.Contains(Skin.String(Widget.$PARAM[hubid]),sources://music) | String.Contains(Skin.String(Widget.$PARAM[hubid]),plugin://plugin.audio)]">Skin.SetString(Widget.$PARAM[hubid].Content,videos)</onunfocus>
            <onback condition="[String.Contains(Skin.String(Widget.$PARAM[hubid]),musicdb://) | String.Contains(Skin.String(Widget.$PARAM[hubid]),library://music) | String.Contains(Skin.String(Widget.$PARAM[hubid]),sources://music) | String.Contains(Skin.String(Widget.$PARAM[hubid]),plugin://plugin.audio)]">Skin.SetString(Widget.$PARAM[hubid].Content,music)</onback>
            <onback condition="String.Contains(Skin.String(Widget.$PARAM[hubid]),Pictures)">Skin.SetString(Widget.$PARAM[hubid].Content,pictures)</onback>
            <onback condition="!String.IsEmpty(Skin.String(Widget.$PARAM[hubid])) + ![String.Contains(Skin.String(Widget.$PARAM[hubid]),Pictures) | String.Contains(Skin.String(Widget.$PARAM[hubid]),musicdb://) | String.Contains(Skin.String(Widget.$PARAM[hubid]),library://music) | String.Contains(Skin.String(Widget.$PARAM[hubid]),sources://music) | String.Contains(Skin.String(Widget.$PARAM[hubid]),plugin://plugin.audio)]">Skin.SetString(Widget.$PARAM[hubid].Content,videos)</onback>
        </control>
        <control type="button" id="$PARAM[buttonid2]99" description="Set HUB WIDGET">
            <width>100%</width>
            <label>$LOCALIZE[31630]</label>
            <height>66</height>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtons</include>
            <label2>$INFO[Skin.String(Widget.$PARAM[hubid].Content)]</label2>
            <visible>String.IsEqual(Container(211).ListItem.Label2,Hub $PARAM[hubid]) | String.IsEqual(Container(211).ListItem.Property(Path),ActivateWindow($PARAM[hubid]))</visible>
            <visible>String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))</visible>            
            <onclick>SetProperty(Dialog.1.Label,$LOCALIZE[2])</onclick>
            <onclick>SetProperty(Dialog.1.BuiltIn,Skin.SetString(Widget.$PARAM[hubid].Content,music))</onclick>
            <onclick>SetProperty(Dialog.2.Label,$LOCALIZE[1])</onclick>
            <onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(Widget.$PARAM[hubid].Content,pictures))</onclick>
            <onclick>SetProperty(Dialog.3.Label,$LOCALIZE[3])</onclick>
            <onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(Widget.$PARAM[hubid].Content,videos))</onclick>
            <onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[31630])</onclick>
        </control>
        <control type="button" id="$PARAM[buttonid1]" description="Set HUB">
            <width>100%</width>
            <label>31178</label>
            <height>66</height>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtons</include>
            <visible>String.IsEqual(Container(211).ListItem.Label2,Hub $PARAM[hubid]) | String.IsEqual(Container(211).ListItem.Property(Path),ActivateWindow($PARAM[hubid]))</visible>
            <visible>String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))</visible>
            <onclick>RunScript(script.skinshortcuts,type=manage&amp;group=x$PARAM[hubid])</onclick>
        </control>
    </include>

    <include name="DefExtendedInfoItemContentWIP">
        <param name="aspect" value="$PARAM[aspect]" default="scale"/>
        <param name="fallbackpicture" value="$PARAM[fallbackpicture]" default="DefaultPicture.png"/>
        <param name="storageicon" value="$PARAM[storageicon]" default="!String.IsEmpty(Container(10051).ListItem.DBID)"/>
        <param name="poster" value="$PARAM[poster]" default="false"/>
        <param name="thumb" value="$PARAM[thumb]" default="true"/>
        <definition>
            <control type="image">
                <left>0</left>
                <top>0</top>
                <right>20</right>
                <bottom>0</bottom>
                <texture border="10" background="true">common/$VAR[nofocus-shadow10]</texture>
            </control>
            <control type="image">
                <left>10</left>
                <top>10</top>
                <right>30</right>
                <bottom>10</bottom>
                <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
            </control>
            <control type="image">
                <left>10</left>
                <top>10</top>
                <right>30</right>
                <bottom>10</bottom>
                <aspectratio scalediffuse="false">$PARAM[aspect]</aspectratio>
                <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$VAR[CastImage]</texture>
                <visible>$PARAM[thumb]</visible>
            </control>
            <control type="image">
                <left>10</left>
                <top>10</top>
                <right>30</right>
                <bottom>10</bottom>
                <aspectratio scalediffuse="false">scale</aspectratio>
                <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$VAR[PosterImage]</texture>
                <visible>$PARAM[poster]</visible>
            </control>
            <control type="image">
                <left>10</left>
                <right>30</right>
                <bottom>10</bottom>
                <top>10</top>
                <visible>!Skin.HasSetting(thumbnails.white)</visible>
                <texture colordiffuse="Box2" border="4">common/box21.png</texture>
            </control>
            <control type="group">
                <visible>$PARAM[storageicon]</visible>
                <right>5</right>
                <top>1</top>
                <control type="label">
                    <align>right</align>
                    <aligny>center</aligny>
                    <width>50</width>
                    <right>30</right>
                    <top>6</top>
                    <height>50</height>
                    <font>SymbolPosterBackground</font>
                    <label>[COLOR=FF333333]&#61833;[/COLOR]</label>
                </control>
                <control type="label">
                    <align>right</align>
                    <aligny>center</aligny>
                    <width>50</width>
                    <right>37</right>
                    <top>6</top>
                    <height>50</height>
                    <textcolor>$VAR[WatchedLabelPosterColor]</textcolor>
                    <selectedcolor>$VAR[WatchedLabelPosterColor]</selectedcolor>
                    <font>SymbolPoster</font>
                    <label>$VAR[StorageIconLabel]</label>
                </control>
            </control>
        </definition>
    </include>

    <include name="DefExtendedInfoSetsContentWIP">
        <param name="aspect" value="$PARAM[aspect]" default="scale"/>
        <param name="fallbackpicture" value="$PARAM[fallbackpicture]" default="DefaultPicture.png"/>
        <param name="storageicon" value="$PARAM[storageicon]" default="!String.IsEmpty(Container(10051).ListItem.DBID)"/>
        <definition>
            <control type="image">
                <left>0</left>
                <top>0</top>
                <right>20</right>
                <bottom>0</bottom>
                <texture border="10" background="true">common/$VAR[nofocus-shadow10]</texture>
            </control>
            <control type="image">
                <left>10</left>
                <top>10</top>
                <right>30</right>
                <bottom>10</bottom>
                <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
            </control>
            <control type="image">
                <left>10</left>
                <top>10</top>
                <right>30</right>
                <bottom>10</bottom>
                <aspectratio scalediffuse="false">$PARAM[aspect]</aspectratio>
                <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$VAR[PosterImage]</texture>
            </control>
            <control type="image">
                <left>10</left>
                <right>30</right>
                <bottom>10</bottom>
                <top>10</top>
                <visible>!Skin.HasSetting(thumbnails.white)</visible>
                <texture colordiffuse="Box2" border="4">common/box21.png</texture>
            </control>
            <control type="group">
                <visible>$PARAM[storageicon]</visible>
                <right>5</right>
                <top>1</top>
                <control type="label">
                    <align>right</align>
                    <aligny>center</aligny>
                    <width>50</width>
                    <right>30</right>
                    <top>6</top>
                    <height>50</height>
                    <font>SymbolPosterBackground</font>
                    <label>[COLOR=FF333333]&#61833;[/COLOR]</label>
                </control>
                <control type="label">
                    <align>right</align>
                    <aligny>center</aligny>
                    <width>50</width>
                    <right>37</right>
                    <top>6</top>
                    <height>50</height>
                    <textcolor>$VAR[WatchedLabelPosterColor]</textcolor>
                    <selectedcolor>$VAR[WatchedLabelPosterColor]</selectedcolor>
                    <font>SymbolPoster</font>
                    <label>$VAR[StorageIconLabel]</label>
                </control>
            </control>
        </definition>
    </include>

    <include name="DefCastIconsBackgroundList">
        <param name="fallbackpicture" value="$PARAM[fallbackpicture]" default="DefaultPicture.png"/>
        <param name="poster" value="$PARAM[poster]" default="false"/>
        <param name="thumb" value="$PARAM[thumb]" default="true"/>
        <definition>
        <include content="DefCastIcons">
            <param name="id" value="0"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
            <param name="poster" value="$PARAM[poster]" default="false"/>
            <param name="thumb" value="$PARAM[thumb]" default="true"/>
        </include>
        <include content="DefCastIcons">
            <param name="id" value="1"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
            <param name="poster" value="$PARAM[poster]" default="false"/>
            <param name="thumb" value="$PARAM[thumb]" default="true"/>
        </include>
        <include content="DefCastIcons">
            <param name="id" value="2"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
            <param name="poster" value="$PARAM[poster]" default="false"/>
            <param name="thumb" value="$PARAM[thumb]" default="true"/>
        </include>
        <include content="DefCastIcons">
            <param name="id" value="3"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
            <param name="poster" value="$PARAM[poster]" default="false"/>
            <param name="thumb" value="$PARAM[thumb]" default="true"/>
        </include>
        <include content="DefCastIcons">
            <param name="id" value="4"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
            <param name="poster" value="$PARAM[poster]" default="false"/>
            <param name="thumb" value="$PARAM[thumb]" default="true"/>
        </include>
        <include content="DefCastIcons">
            <param name="id" value="5"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
            <param name="poster" value="$PARAM[poster]" default="false"/>
            <param name="thumb" value="$PARAM[thumb]" default="true"/>
        </include>
        <include content="DefCastIcons">
            <param name="id" value="6"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
            <param name="poster" value="$PARAM[poster]" default="false"/>
            <param name="thumb" value="$PARAM[thumb]" default="true"/>
        </include>
        <include content="DefCastIcons">
            <param name="id" value="7"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
            <param name="poster" value="$PARAM[poster]" default="false"/>
            <param name="thumb" value="$PARAM[thumb]" default="true"/>
        </include>
        </definition>
    </include>

    <include name="DefSetsIconsBackgroundList">
        <param name="fallbackpicture" value="$PARAM[fallbackpicture]" default="DefaultPicture.png"/>
        <definition>
        <include content="DefSetsIcons">
            <param name="id" value="0"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
        </include>
        <include content="DefSetsIcons">
            <param name="id" value="1"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
        </include>
        <include content="DefSetsIcons">
            <param name="id" value="2"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
        </include>
        <include content="DefSetsIcons">
            <param name="id" value="3"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
        </include>
        <include content="DefSetsIcons">
            <param name="id" value="4"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
        </include>
        <include content="DefSetsIcons">
            <param name="id" value="5"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
        </include>
        <include content="DefSetsIcons">
            <param name="id" value="6"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
        </include>
        <include content="DefSetsIcons">
            <param name="id" value="7"/>
            <param name="fallbackpicture" value="$PARAM[fallbackpicture]"/>
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="visibleshadow" value="!Control.HasFocus($PARAM[controlid])"/>
            <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]"/>
            <param name="aspectbox" value="$PARAM[aspectbox]"/>
            <param name="aspectposter" value="$PARAM[aspectposter]"/>
        </include>
        </definition>
    </include>

    <include name="DefSetsIcons">
        <param name="fallbackpicture" value="$PARAM[fallbackpicture]" default="pbtmdb.png"/>
        <param name="visibleshadow" value="$PARAM[visibleshadow]" default="true"/>
        <param name="aspectposter" value="$PARAM[aspectposter]" default="true"/>
        <param name="aspectbox" value="$PARAM[aspectbox]" default="false"/>
        <param name="controlid" value="$PARAM[controlid]"/>
        <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]" default="false"/>
        <definition>
            <control type="group">
                <visible>$PARAM[aspectposter]</visible>
                <visible>!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious + !String.IsEqual(ListItem.Label,..)</visible>
                <animation condition="!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious" effect="fade" start="0" end="0" time="0">Hidden</animation>
                <animation condition="!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious" effect="fade" delay="250" start="100" reversible="false" end="100" time="0">Visible</animation>
                <visible>!String.IsEmpty(Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Label)</visible>
                <height>273</height>
                <width>209</width>
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <right>20</right>
                    <bottom>0</bottom>
                    <visible>$PARAM[visibleshadow]</visible>
                    <animation effect="fade" end="0" start="70" time="350" delay="300">Hidden</animation>
                    <texture border="10" background="true">common/$VAR[nofocus-shadow10]</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$INFO[Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Art(poster)]</texture>
                    <include condition="!Skin.HasSetting(thumbnails.white)" content="border_texture"><param name="colordiffuse" value="Box2" /></include>
                </control>
                <control type="group">
                    <visible>!String.IsEmpty(Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).DBID) + $PARAM[storageicon.backgroundlist]</visible>
                    <animation effect="zoom" start="100" end="82" center="auto" time="0" condition="true">Conditional</animation>
                    <right>4</right>
                    <top>3</top>
                    <height>50</height>
                    <width>50</width>
                    <control type="label">
                        <align>right</align>
                        <aligny>center</aligny>
                        <width>50</width>
                        <right>30</right>
                        <top>0</top>
                        <height>50</height>
                        <font>SymbolPosterBackground</font>
                        <label>[COLOR=FF333333]&#61833;[/COLOR]</label>
                    </control>
                    <control type="label">
                        <align>right</align>
                        <aligny>center</aligny>
                        <width>50</width>
                        <right>37</right>
                        <top>0</top>
                        <height>50</height>
                        <textcolor>$VAR[WatchedLabelPosterColor]</textcolor>
                        <selectedcolor>$VAR[WatchedLabelPosterColor]</selectedcolor>
                        <font>SymbolPoster</font>
                        <label>$VAR[StorageIconLabel]</label>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="DefCastIcons">
        <param name="fallbackpicture" value="$PARAM[fallbackpicture]" default="pbtmdb.png"/>
        <param name="visibleshadow" value="$PARAM[visibleshadow]" default="true"/>
        <param name="aspectposter" value="$PARAM[aspectposter]" default="true"/>
        <param name="aspectbox" value="$PARAM[aspectbox]" default="false"/>
        <param name="controlid" value="$PARAM[controlid]"/>
        <param name="storageicon.backgroundlist" value="$PARAM[storageicon.backgroundlist]" default="false"/>
        <param name="poster" value="$PARAM[poster]" default="false"/>
        <param name="thumb" value="$PARAM[thumb]" default="true"/>
        <definition>
            <control type="group">
                <visible>$PARAM[aspectposter]</visible>
                <visible>!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious + !String.IsEqual(ListItem.Label,..)</visible>
                <animation condition="!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious" effect="fade" start="0" end="0" time="0">Hidden</animation>
                <animation condition="!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious" effect="fade" delay="250" start="100" reversible="false" end="100" time="0">Visible</animation>
                <visible>!String.IsEmpty(Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Label)</visible>
                <height>273</height>
                <width>209</width>
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <right>20</right>
                    <bottom>0</bottom>
                    <visible>$PARAM[visibleshadow]</visible>
                    <animation effect="fade" end="0" start="70" time="350" delay="300">Hidden</animation>
                    <texture border="10" background="true">common/$VAR[nofocus-shadow10]</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$INFO[Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Thumb]</texture>
                    <include condition="!Skin.HasSetting(thumbnails.white)" content="border_texture"><param name="colordiffuse" value="Box2" /></include>
                    <visible>$PARAM[thumb]</visible>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$INFO[Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Art(poster)]</texture>
                    <include condition="!Skin.HasSetting(thumbnails.white)" content="border_texture"><param name="colordiffuse" value="Box2" /></include>
                    <visible>$PARAM[poster] + !String.IsEmpty(Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Art(poster))</visible>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$INFO[Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Icon]</texture>
                    <include condition="!Skin.HasSetting(thumbnails.white)" content="border_texture"><param name="colordiffuse" value="Box2" /></include>
                    <visible>$PARAM[poster] + String.IsEmpty(Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Art(poster))</visible>
                </control>
            </control>
            <control type="group">
                <visible>$PARAM[aspectbox]</visible>
                <visible>!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious + !String.IsEqual(ListItem.Label,..)</visible>
                <animation condition="!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious" effect="fade" start="100" end="0" time="400">Hidden</animation>
                <animation condition="!Container($PARAM[controlid]).OnNext + !Container($PARAM[controlid]).OnPrevious" effect="fade" delay="200" start="0" reversible="false" end="100" time="500">Visible</animation>
                <visible>!String.IsEmpty(Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Label)</visible>
                <height>273</height>
                <width>290</width>
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <right>20</right>
                    <bottom>0</bottom>
                    <visible>$PARAM[visibleshadow]</visible>
                    <animation effect="fade" end="0" start="70" time="350" delay="300">Hidden</animation>
                    <texture border="10" background="true">common/$VAR[nofocus-shadow10]</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$INFO[Container($PARAM[controlid]).ListItemNoWrap($PARAM[id]).Thumb]</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                    <texture colordiffuse="Box2" border="4">common/box21.png</texture>
                </control>
            </control>
        </definition>
    </include>

    <include name="DefExtendedInfoFocusSetsContentWIP">
        <param name="aspect" value="$PARAM[aspect]" default="scale"/>
        <param name="fallbackpicture" default="pbtmdb.png" />
        <param name="storageicon" value="$PARAM[storageicon]" default="!String.IsEmpty(Container(10051).ListItem.DBID)"/>
        <definition>
            <control type="group">
                <animation center="auto" easing="inout" effect="zoom" end="$PARAM[zoom]" start="100" time="200" tween="sine">Focus</animation>
                <animation center="auto" easing="inout" effect="zoom" end="100" start="$PARAM[zoom]" time="200" tween="sine">UnFocus</animation>
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <right>20</right>
                    <bottom>0</bottom>
                    <texture border="10" background="true">common/$VAR[nofocus-shadow10]</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">$PARAM[aspect]</aspectratio>
                    <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$VAR[PosterImage]</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                    <texture colordiffuse="BoxNotification" border="4">common/box21.png</texture>
                </control>
                <control type="group">
                    <visible>$PARAM[storageicon]</visible>
                    <right>5</right>
                    <top>1</top>
                    <control type="label">
                        <align>right</align>
                        <aligny>center</aligny>
                        <width>50</width>
                        <right>30</right>
                        <top>6</top>
                        <height>50</height>
                        <font>SymbolPosterBackground</font>
                        <label>[COLOR=FF333333]&#61833;[/COLOR]</label>
                    </control>
                    <control type="label">
                        <align>right</align>
                        <aligny>center</aligny>
                        <width>50</width>
                        <right>37</right>
                        <top>6</top>
                        <height>50</height>
                        <textcolor>$VAR[WatchedLabelPosterColor]</textcolor>
                        <selectedcolor>$VAR[WatchedLabelPosterColor]</selectedcolor>
                        <font>SymbolPoster</font>
                        <label>$VAR[StorageIconLabel]</label>
                    </control>
                </control>
            </control>
            <control type="label">
                <left>$PARAM[labelleft]</left>
                <bottom>$PARAM[labelbottom]</bottom>
                <width>1300</width>
                <height>42</height>
                <font>LabelInfo</font>
                <visible>Control.HasFocus($PARAM[controlid])</visible>
                <textcolor>Dark1</textcolor>
                <selectedcolor>Dark1</selectedcolor>
                <label>$INFO[ListItem.Label] $INFO[ListItem.Year,(,)]</label>
                <animation effect="fade" start="0" end="100" time="350" tween="sine" delay="200" reversible="false">Focus</animation>
                <animation effect="fade" start="100" end="0" time="0" delay="0">UnFocus</animation>
            </control>
            <control type="label">
                <left>$PARAM[labeltwoleft]</left>
                <bottom>$PARAM[labeltwobottom]</bottom>
                <width>1300</width>
                <height>42</height>
                <font>LabelInfoSub</font>
                <visible>Control.HasFocus($PARAM[controlid]) + !Control.HasFocus(10054)</visible>
                <textcolor>Dark1</textcolor>
                <selectedcolor>Dark1</selectedcolor>
                <label>$VAR[LabelExtendedVideoInfoLabel2]</label>
                <animation effect="fade" start="0" end="100" time="350" tween="sine" delay="200" reversible="false">Focus</animation>
                <animation effect="fade" start="100" end="0" time="0" delay="0">UnFocus</animation>
            </control>
        </definition>
    </include>

    <include name="DefExtendedInfoFocusContentWIP">
        <param name="aspect" value="$PARAM[aspect]" default="scale"/>
        <param name="fallbackpicture" default="pbtmdb.png" />
        <param name="storageicon" value="$PARAM[storageicon]" default="!String.IsEmpty(Container(10051).ListItem.DBID)"/>
        <param name="poster" value="$PARAM[poster]" default="false"/>
        <param name="thumb" value="$PARAM[thumb]" default="true"/>
        <definition>
            <control type="group">
                <animation center="auto" easing="inout" effect="zoom" end="$PARAM[zoom]" start="100" time="200" tween="sine">Focus</animation>
                <animation center="auto" easing="inout" effect="zoom" end="100" start="$PARAM[zoom]" time="200" tween="sine">UnFocus</animation>
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <right>20</right>
                    <bottom>0</bottom>
                    <texture border="10" background="true">common/$VAR[nofocus-shadow10]</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <texture colordiffuse="Fallback" border="4" background="true">common/box.png</texture>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">$PARAM[aspect]</aspectratio>
                    <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$VAR[CastImage]</texture>
                    <visible>$PARAM[thumb]</visible>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <aspectratio scalediffuse="false">scale</aspectratio>
                    <texture diffuse="diffuse/wall.png" background="true" fallback="$PARAM[fallbackpicture]">$VAR[PosterImage]</texture>
                    <visible>$PARAM[poster]</visible>
                </control>
                <control type="image">
                    <left>10</left>
                    <top>10</top>
                    <right>30</right>
                    <bottom>10</bottom>
                    <visible>!Skin.HasSetting(thumbnails.white)</visible>
                    <texture colordiffuse="BoxNotification" border="4">common/box21.png</texture>
                </control>
                <control type="group">
                    <visible>$PARAM[storageicon]</visible>
                    <right>5</right>
                    <top>1</top>
                    <control type="label">
                        <align>right</align>
                        <aligny>center</aligny>
                        <width>50</width>
                        <right>30</right>
                        <top>6</top>
                        <height>50</height>
                        <font>SymbolPosterBackground</font>
                        <label>[COLOR=FF333333]&#61833;[/COLOR]</label>
                    </control>
                    <control type="label">
                        <align>right</align>
                        <aligny>center</aligny>
                        <width>50</width>
                        <right>37</right>
                        <top>6</top>
                        <height>50</height>
                        <textcolor>$VAR[WatchedLabelPosterColor]</textcolor>
                        <selectedcolor>$VAR[WatchedLabelPosterColor]</selectedcolor>
                        <font>SymbolPoster</font>
                        <label>$VAR[StorageIconLabel]</label>
                    </control>
                </control>
            </control>
            <control type="label">
                <left>$PARAM[labelleft]</left>
                <bottom>$PARAM[labelbottom]</bottom>
                <width>1300</width>
                <height>42</height>
                <font>LabelInfo</font>
                <visible>Control.HasFocus($PARAM[controlid])</visible>
                <textcolor>Dark1</textcolor>
                <selectedcolor>Dark1</selectedcolor>
                <label>$INFO[ListItem.Label] $INFO[ListItem.Year,(,)]</label>
                <animation effect="fade" start="0" end="100" time="350" tween="sine" delay="200" reversible="false">Focus</animation>
                <animation effect="fade" start="100" end="0" time="0" delay="0">UnFocus</animation>
            </control>
            <control type="label">
                <left>$PARAM[labeltwoleft]</left>
                <bottom>$PARAM[labeltwobottom]</bottom>
                <width>1300</width>
                <height>42</height>
                <font>LabelInfoSub</font>
                <visible>Control.HasFocus($PARAM[controlid]) + !Control.HasFocus(10054)</visible>
                <textcolor>Dark1</textcolor>
                <selectedcolor>Dark1</selectedcolor>
                <label>$VAR[LabelExtendedVideoInfoLabel2]</label>
                <animation effect="fade" start="0" end="100" time="350" tween="sine" delay="200" reversible="false">Focus</animation>
                <animation effect="fade" start="100" end="0" time="0" delay="0">UnFocus</animation>
            </control>
        </definition>
    </include>

    <include name="DefMultiWidgetContainer">
        <param name="height" value="$PARAM[height]" default="325"/>
        <param name="orientation" value="$PARAM[orientation]" default="horizontal"/>
        <definition>
            <include content="def_top" condition="Skin.HasSetting(homemenu.clean.flix)">
                <param name="top" value="200" />
            </include>
            <include content="def_top" condition="Skin.HasSetting(homemenu.netflix) + !Skin.HasSetting(home.widgets.show.reflections)">
                <param name="top" value="440" />
            </include>
            <include content="def_top" condition="!Skin.HasSetting(homemenu.netflix) + !Skin.HasSetting(home.widgets.show.reflections)">
                <param name="top" value="60" />
            </include>
            <include content="def_top" condition="Skin.HasSetting(homemenu.netflix) + Skin.HasSetting(home.widgets.show.reflections)">
                <param name="top" value="465" />
            </include>
            <include content="def_top" condition="!Skin.HasSetting(homemenu.netflix) + Skin.HasSetting(home.widgets.show.reflections)">
                <param name="top" value="50" />
            </include>         
            <include content="def_width" condition="Skin.HasSetting(homemenu.clean.flix)">
                <param name="width" value="225" />
            </include>
            <animation effect="fade" start="0" end="0" time="0" condition="Skin.HasSetting(homemenu.clean.flix)">Conditional</animation>
            <include content="def_height" condition="Skin.HasSetting(homemenu.clean.flix)">
                <param name="height" value="565" />
            </include>
            <include content="def_height" condition="Skin.HasSetting(homemenu.netflix) + !Skin.HasSetting(home.widgets.show.reflections)">
                <param name="height" value="325" />
            </include>
            <include content="def_height" condition="!Skin.HasSetting(homemenu.netflix) + !Skin.HasSetting(home.widgets.show.reflections)">
                <param name="height" value="$PARAM[height]" />
            </include>
            <include content="def_height" condition="Skin.HasSetting(homemenu.netflix) + Skin.HasSetting(home.widgets.show.reflections)">
                <param name="height" value="365" />
            </include>
            <include content="def_height" condition="!Skin.HasSetting(homemenu.netflix) + Skin.HasSetting(home.widgets.show.reflections)">
                <param name="height" value="$PARAM[height2]" />
            </include>
            <height>$PARAM[height]</height>
            <include content="def_left" condition="![$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix)] | Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
            <left>0</left>
            <include content="def_right" condition="$EXP[HomeIsVerticalMultiWidgets] + Skin.HasSetting(homemenu.vertical.noslide) + ![Skin.HasSetting(home.showicons) + Skin.HasSetting(homemenu.only.icons)]"><param name="right" value="310" /></include>
            <right>0</right>
            <include content="Animation.FadeOutHomeFullscreenWidget" condition="$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix]">
                <param name="condition" value="$PARAM[animation_condition]"/>
            </include>
            <include condition="!Skin.HasSetting(widgets.fade)">Animation.Vertical.Widgets.Container</include>
            <autoscroll time="$PARAM[AutoTime]" delay="1000">$PARAM[AutoScrollCondition]</autoscroll>
            <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[id],Home)</onfocus>
            <onfocus>SetProperty(BackToId,$PARAM[backid],Home)</onfocus>
            <onfocus condition="$EXP[HasHomemenuAutoSlideOutAnimation]">CancelAlarm(slide_out,true)</onfocus>
            <onfocus condition="Integer.IsGreater(Container(301$PARAM[idshort]1).NumItems,0) + Control.IsVisible(301$PARAM[idshort]1)">SetProperty(LastId,301$PARAM[idshort]1,Home)</onfocus>
            <onfocus condition="Integer.IsGreater(Container(301$PARAM[idshort]2).NumItems,0) + Control.IsVisible(301$PARAM[idshort]2)">SetProperty(LastId,301$PARAM[idshort]2,Home)</onfocus>
            <onfocus condition="Integer.IsGreater(Container(301$PARAM[idshort]3).NumItems,0) + Control.IsVisible(301$PARAM[idshort]3)">SetProperty(LastId,301$PARAM[idshort]3,Home)</onfocus>
            <onfocus condition="Integer.IsGreater(Container(301$PARAM[idshort]4).NumItems,0) + Control.IsVisible(301$PARAM[idshort]4)">SetProperty(LastId,301$PARAM[idshort]4,Home)</onfocus>
            <onfocus condition="Integer.IsGreater(Container(301$PARAM[idshort]5).NumItems,0) + Control.IsVisible(301$PARAM[idshort]5)">SetProperty(LastId,301$PARAM[idshort]5,Home)</onfocus>
            <onfocus condition="Integer.IsGreater(Container(301$PARAM[idshort]6).NumItems,0) + Control.IsVisible(301$PARAM[idshort]6)">SetProperty(LastId,301$PARAM[idshort]6,Home)</onfocus>
            <onback condition="[!Integer.IsEqual(Container($PARAM[id]).Position,0) | Container($PARAM[id]).HasPrevious] + !Skin.HasSetting(widget.items.onback.go.back.to.position.0)">PageUp</onback>
            <onback condition="[!Integer.IsEqual(Container($PARAM[id]).Position,0) | Container($PARAM[id]).HasPrevious] + !Skin.HasSetting(widget.items.onback.go.back.to.position.0)">PageUp</onback>
            <onback condition="[!Integer.IsEqual(Container($PARAM[id]).Position,0) | Container($PARAM[id]).HasPrevious] + !Skin.HasSetting(widget.items.onback.go.back.to.position.0)">PageUp</onback>            
            <onback condition="[!Integer.IsEqual(Container($PARAM[id]).Position,0) | Container($PARAM[id]).HasPrevious] + Skin.HasSetting(widget.items.onback.go.back.to.position.0)">SetFocus($PARAM[id],0,absolute)</onback>
            <onback condition="[!Integer.IsEqual(Container($PARAM[id]).Position,0) | Container($PARAM[id]).HasPrevious] + Skin.HasSetting(widget.items.onback.go.back.to.position.0) + Skin.HasSetting(widget.items.onback.go.back.to.position.0.setfocus.home)">SetFocus(300)</onback>            
            <onback condition="Integer.IsEqual(Container($PARAM[id]).Position,0) + !Container($PARAM[id]).HasPrevious + !Skin.HasSetting(disable.widgets.onback.go.back.to.position.0)">SetFocus($PARAM[backid])</onback>
            <onback condition="Integer.IsEqual(Container($PARAM[id]).Position,0) + !Container($PARAM[id]).HasPrevious + !Skin.HasSetting(disable.widgets.onback.go.back.to.position.0)">SetFocus(4567)</onback>
            <onback condition="Integer.IsEqual(Container($PARAM[id]).Position,0) + !Container($PARAM[id]).HasPrevious + Skin.HasSetting(disable.widgets.onback.go.back.to.position.0)">SetFocus(300)</onback>
            <onleft condition="$EXP[HomeIsVerticalMultiWidgets]">300</onleft>
            <preloaditems>4</preloaditems>
            <focusposition>0</focusposition>
            <orientation>$PARAM[orientation]</orientation>
            <include>ScrolltimeWidgetsList</include>
        </definition>
    </include>

    <include name="MultiWidgetsPlotLabelDefinition">
        <font>Tiny</font>
        <width>100%</width>
        <include content="def_textheight" condition="Skin.HasSetting(homemenu.clean.flix)">
            <param name="height_min" value="36" />
            <param name="height_max" value="72" />
        </include>
        <include content="def_textheight" condition="!Skin.HasSetting(homemenu.clean.flix)">
            <param name="height_min" value="36" />
            <param name="height_max" value="212" />
        </include>
        <align>left</align>
        <textcolor>Dark2</textcolor>
    </include>

    <include name="MultiWidgetsPlotLabelDefinitionNetflix">
        <font>Tiny</font>
        <width>100%</width>
        <height min="36" max="176">auto</height>
        <align>left</align>
        <textcolor>Dark2</textcolor>
    </include>

    <include name="MultiWidgetsSubLabelDefinition">
        <font>Tiny</font>
        <width>auto</width>
        <height>36</height>
        <align>left</align>
        <textcolor>Dark2</textcolor>
    </include>

    <include name="DefSkinAddons">
        <control type="radiobutton" id="$PARAM[id]1">
            <width>1360</width>
            <textoffsetx>80</textoffsetx>
            <visible>$PARAM[visible]</visible>
            <visible>System.HasAddon($PARAM[addonname]) + System.AddonIsEnabled($PARAM[addonname])</visible>
            <include>DefSettingsButtonGradient</include>
            <label>$PARAM[addonname]</label>
            <label2>$INFO[System.AddonVersion($PARAM[addonname]),(,)]        </label2>
            <selected>true</selected>
            <onclick>Addon.OpenSettings($PARAM[addonname])</onclick>
        </control>
        <control type="radiobutton" id="$PARAM[id]2">
            <width>1360</width>
            <textoffsetx>80</textoffsetx>
            <visible>$PARAM[visible]</visible>
            <textcolor>Dark3</textcolor>
            <visible>System.HasAddon($PARAM[addonname]) + !System.AddonIsEnabled($PARAM[addonname])</visible>
            <include>DefSettingsButtonGradientDisabled</include>
            <label>$PARAM[addonname]</label>
            <label2>($LOCALIZE[31467])    $INFO[System.AddonVersion($PARAM[addonname]),(,)]        </label2>
            <selected>true</selected>
            <onclick>RunScript(script.embuary.helper,action=toggleaddons,addonid=$PARAM[addonname],enable=true)</onclick>
            <onclick>Setproperty(DialogBusy,1,Home)</onclick>
            <onclick>AlarmClock(Busy1,SetFocus(9608),00:01,silent)</onclick>
            <onclick>AlarmClock(Busy2,ClearProperty(DialogBusy,Home),00:02,silent)</onclick>
        </control>
        <control type="radiobutton" id="$PARAM[id]3">
            <width>1360</width>
            <visible>$PARAM[visible]</visible>
            <visible>!System.HasAddon($PARAM[addonname])</visible>
            <include>DefSettingsButtonGradientSkinSettings</include>
            <label>$PARAM[addonname]</label>
            <label2>$INFO[System.AddonVersion($PARAM[addonname]),(,)]        </label2>
            <selected>false</selected>
            <onclick>InstallAddon($PARAM[addonname])</onclick>
        </control>
    </include>

    <include name="CenterInfo">
        <width>1550</width>
        <align>center</align>
        <left>180</left>
    </include>

    <include name="ClearLogoImage">
        <control type="image">
            <width>$PARAM[width]</width>
            <right>$PARAM[right]</right>
            <bottom>$PARAM[bottom]</bottom>
            <aspectratio align="right" aligny="bottom">keep</aspectratio>
            <texture background="true">$VAR[FanartImageClearArt]</texture>
        </control>
    </include>

    <include name="DefOSDPlayerTitle">
        <control type="label" description="Show">
            <width>$PARAM[width]</width>
            <top>40</top>
            <height>40</height>
            <font>MediumBold</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$VAR[PlayerBigTitle]</label>
            <visible>$PARAM[visible]</visible>
            <include condition="Skin.HasSetting(labels.autoscroll)">LabelScroll</include>
        </control>
    </include>

    <include name="DefOSDPlayerTVShowTitle">
        <control type="label" description="Show">
            <width>$PARAM[width]</width>
            <top>40</top>
            <height>40</height>
            <font>MediumBold</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$INFO[VideoPlayer.TVShowTitle] - $INFO[VideoPlayer.Title]</label>
            <visible>$PARAM[visible]</visible>
            <include condition="Skin.HasSetting(labels.autoscroll)">LabelScroll</include>
        </control>
    </include>

    <include name="def_height">
        <height>$PARAM[height]</height>
    </include>

    <include name="def_top">
        <top>$PARAM[top]</top>
    </include>

    <include name="def_width">
        <width>$PARAM[width]</width>
    </include>

    <include name="def_progresstexture">
        <progresstexture border="5" colordiffuse="bf777777">$PARAM[progresstexture]</progresstexture>
    </include>

    <include name="def_left">
        <left>$PARAM[left]</left>
    </include>

    <include name="def_right">
        <right>$PARAM[right]</right>
    </include>

    <include name="def_focusposition">
        <focusposition>$PARAM[focusposition]</focusposition>
    </include>

    <include name="def_bottom">
        <bottom>$PARAM[bottom]</bottom>
    </include>

    <include name="def_font">
        <font>$PARAM[font]</font>
    </include>
    
    <include name="def_textheight">
        <height min="$PARAM[height_min]" max="$PARAM[height_max]">auto</height>
    </include>

    <include name="Def_Label_Headers">
        <control type="label">
            <height>36</height>
            <font>TinyBold2</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$LOCALIZE[2050]:</label>
        </control>
        <control type="label">
            <height>36</height>
            <font>TinyBold2</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$LOCALIZE[21446]:</label>
        </control>
        <control type="label">
            <height>36</height>
            <font>TinyBold2</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$LOCALIZE[623]:</label>
        </control>
        <control type="label">
            <height>36</height>
            <font>TinyBold2</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$LOCALIZE[613]:</label>
        </control>
    </include>

    <include name="Def_Label_Info">
        <control type="label">
            <align>right</align>
            <height>36</height>
            <font>Tiny</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$INFO[MusicPlayer.Duration]</label>
        </control>
        <control type="label">
            <align>right</align>
            <height>36</height>
            <font>Tiny</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$VAR[Label_MusicPlayerCodec]</label>
        </control>
        <control type="label">
            <align>right</align>
            <height>36</height>
            <font>Tiny</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$INFO[MusicPlayer.BitsPerSample] bit</label>
        </control>
        <control type="label">
            <align>right</align>
            <height>36</height>
            <font>Tiny</font>
            <textcolor>$VAR[OSDPanelWhite70]</textcolor>
            <label>$INFO[MusicPlayer.BitRate,, kbps]</label>
        </control>
    </include>

    <include name="DefDiscArt">
        <control type="image">
            <visible>!Window.IsVisible(DialogBusy.xml)</visible>
            <visible>!Skin.HasSetting(osd.music.disc.fake.cd)</visible>
            <width>254</width>
            <height>254</height>
            <top>641</top>
            <left>100</left>
            <texture>$VAR[MusicDiscart]</texture>
            <animation effect="rotate" center="auto" time="6000" end="-360" condition="true" loop="true">Conditional</animation>
        </control>
        <control type="image">
            <visible>!Window.IsVisible(DialogBusy.xml)</visible>
            <visible>Skin.HasSetting(osd.music.disc.fake.cd)</visible>
            <width>254</width>
            <height>254</height>
            <top>641</top>
            <left>100</left>
            <texture diffuse="diffuse/diffuse_cd.png">$VAR[MusicDiscart]</texture>
            <animation effect="rotate" center="auto" time="6000" end="-360" condition="true" loop="true">Conditional</animation>
        </control>
    </include>

    <include name="Def_Selectbox">
        <control type="image">
            <visible>Control.HasFocus($PARAM[FocusId])</visible>
            <left>3</left>
            <top>3</top>
            <right>3</right>
            <bottom>3</bottom>
            <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
            <include>Animation.SelectBoxHome</include>
        </control>
        <control type="image">
            <visible>Control.HasFocus($PARAM[FocusId])</visible>
            <left>3</left>
            <top>3</top>
            <right>3</right>
            <bottom>3</bottom>
            <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox.png</texture>
            <include>Animation.SelectBoxHome</include>
        </control>
    </include>

    <include name="Def_Gradient">
        <control type="group">
            <visible>$PARAM[visible]</visible>
            <left>318</left>
            <control type="image">
                <width>100%</width>
                <height>100%</height>
                <texture border="5" colordiffuse="$PARAM[color]">common/box.png</texture>
            </control>
            <control type="image">
                <width>100%</width>
                <height>100%</height>
                <texture border="5" diffuse="common/gradient-box-wide.png">$INFO[Container(3110).ListItem.Icon]</texture>
                <aspectratio>stretch</aspectratio>
                <visible>Control.HasFocus(3110)</visible>
            </control>
            <control type="image">
                <width>100%</width>
                <height>100%</height>
                <texture border="5" diffuse="common/gradient-box-wide.png">$INFO[Container(3110).ListItem.Icon]</texture>
                <aspectratio>stretch</aspectratio>
                <visible>Control.HasFocus(3110)</visible>
                <animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
            </control>
            <control type="image">
                <width>100%</width>
                <height>100%</height>
                <texture border="5" colordiffuse="$INFO[Window.Property(colorstring)]">common/gradient-box-wide.png</texture>
                <aspectratio>stretch</aspectratio>
                <visible>!Control.HasFocus(3110)</visible>
            </control>
        </control>
    </include>

    <include name="Def_Gradient_Settings_Image_Animation_Container">
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,0)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,1)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,2)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,3)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,4)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,5)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,6)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,7)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[slide]" time="0" condition="Integer.IsGreater(Container($PARAM[controlid]).Position,8)">Conditional</animation>
    </include>

    <include name="Def_Gradient_Settings_Image">
        <param name="top" value="$PARAM[top]" default="140"/>
        <param name="left" value="$PARAM[left]" default="450"/>
        <param name="width" value="$PARAM[width]" default="1310"/>
        <param name="height" value="$PARAM[height]" default="70"/>
        <param name="slide" value="$PARAM[slide]" default="70"/>
        <param name="border" value="$PARAM[border]" default="5"/>
        <param name="visible" value="$PARAM[visible]" default="true"/>
        <param name="image" value="$PARAM[image]" default="common/white.png"/>
        <param name="overlayfix" value="$PARAM[overlayfix]" default="false"/>
        <param name="colordiffuse" value="$PARAM[colordiffuse]" default="$VAR[ColorSelectOtherBar]"/>
        <definition>
            <control type="image">
                <top>$PARAM[top]</top>
                <left>$PARAM[left]</left>
                <height>$PARAM[height]</height>
                <width>$PARAM[width]</width>
                <texture colordiffuse="$PARAM[colordiffuse]" border="$PARAM[border]">$PARAM[image]</texture>
                <visible>ControlGroup($PARAM[controlid]).HasFocus() + $PARAM[visible]</visible>
                <include condition="$PARAM[overlayfix]" content="Animation.FadeIn.Gradient"><param name="delay" value="$PARAM[delay]" /></include>
                <include content="Def_Gradient_Settings_Image_Animation_Container">
                    <param name="controlid" value="$PARAM[controlid]" />
                    <param name="slide" value="$PARAM[slide]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="Def_Gradient_Settings_Image_Shortcuts">
        <param name="top" value="$PARAM[top]" default="116"/>
        <param name="left" value="$PARAM[left]" default="630"/>
        <param name="width" value="$PARAM[width]" default="905"/>
        <param name="height" value="$PARAM[height]" default="66"/>
        <param name="slide" value="$PARAM[slide]" default="69"/>
        <param name="border" value="$PARAM[border]" default="5"/>
        <param name="image" value="$PARAM[image]" default="common/box.png"/>
        <definition>
            <control type="image">
                <top>$PARAM[top]</top>
                <left>$PARAM[left]</left>
                <height>$PARAM[height]</height>
                <width>$PARAM[width]</width>
                <texture colordiffuse="$VAR[ColorSelectOtherBar]" border="$PARAM[border]">$PARAM[image]</texture>
                <visible>ControlGroup($PARAM[controlid]).HasFocus()</visible>
                <include>Animation.FadeIn.Gradient</include>
                <include content="Def_Gradient_Settings_Image_Animation_Container">
                    <param name="controlid" value="$PARAM[controlid]" />
                    <param name="slide" value="$PARAM[slide]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="Def_Context_Subtitles_Gradient">
        <include content="Def_Gradient_Settings_Image">
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="left" value="8"/>
            <param name="top" value="16"/>
            <param name="width" value="300"/>
            <param name="height" value="60"/>
            <param name="slide" value="60"/>
            <param name="overlayfix" value="true"/>
        </include>
        <control type="grouplist" id="$PARAM[controlid]">
            <include>Animation.FadeIn.Delay</include>
            <include>Animation.FadeOut</include>
            <top>16</top>
            <bottom>16</bottom>
            <left>8</left>
            <right>8</right>
            <onup>3</onup>
            <ondown>3</ondown>
            <onleft>3</onleft>
            <onright>3</onright>
            <itemgap>0</itemgap>
            <orientation>vertical</orientation>
            <scrolltime>200</scrolltime>
            <control type="button" id="9301" description="Download">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>33003</label>
                <onclick>ActivateWindow(SubtitleSearch)</onclick>
                <onfocus>SetProperty(dontautoclose,1,home)</onfocus>
                <onunfocus>ClearProperty(dontautoclose,home)</onunfocus>
            </control>
            <control type="button" id="9302">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>$LOCALIZE[10004]</label>
                <onclick>ActivateWindow(osdsubtitlesettings)</onclick>
                <onfocus>SetProperty(dontautoclose,1,home)</onfocus>
                <onunfocus>ClearProperty(dontautoclose,home)</onunfocus>
            </control>
            <control type="button" id="9304">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>$LOCALIZE[22006]</label>
                <onclick>SubtitleDelay</onclick>
                <enable>VideoPlayer.HasSubtitles + VideoPlayer.SubtitlesEnabled</enable>
                <onfocus>SetProperty(dontautoclose,1,home)</onfocus>
                <onunfocus>ClearProperty(dontautoclose,home)</onunfocus>
            </control>
            <control type="togglebutton" id="9303" description="Enable Subs">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>$LOCALIZE[305] $INFO[VideoPlayer.SubtitlesLanguage,[UPPERCASE],[/UPPERCASE]]</label>
                <altlabel>13106</altlabel>
                <onclick>NextSubtitle</onclick>
                <usealttexture>!VideoPlayer.SubtitlesEnabled</usealttexture>
                <onfocus>SetProperty(dontautoclose,1,home)</onfocus>
                <onunfocus>ClearProperty(dontautoclose,home)</onunfocus>
            </control>
        </control>
    </include>

    <include name="Def_Context_Tempo_Gradient">
        <include content="Def_Gradient_Settings_Image">
            <param name="controlid" value="$PARAM[controlid]"/>
            <param name="left" value="8"/>
            <param name="top" value="16"/>
            <param name="width" value="300"/>
            <param name="height" value="60"/>
            <param name="slide" value="60"/>
        </include>
        <control type="grouplist" id="$PARAM[controlid]">
            <include>Animation.FadeIn.Delay</include>
            <include>Animation.FadeOut</include>
            <top>16</top>
            <bottom>16</bottom>
            <left>8</left>
            <right>8</right>
            <onup>20</onup>
            <ondown>20</ondown>
            <onleft>20</onleft>
            <onright>20</onright>
            <itemgap>0</itemgap>
            <orientation>vertical</orientation>
            <scrolltime>200</scrolltime>
            <control type="button" id="9901">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>1.50</label>
                <onclick>PlayerControl(Tempo(1.5))</onclick>
            </control>
            <control type="button" id="9902">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>1.40</label>
                <onclick>PlayerControl(Tempo(1.4))</onclick>
            </control>
            <control type="button" id="9903">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>1.30</label>
                <onclick>PlayerControl(Tempo(1.3))</onclick>
            </control>
            <control type="button" id="9904">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>1.20</label>
                <onclick>PlayerControl(Tempo(1.2))</onclick>
            </control>
            <control type="button" id="9905">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>1.10</label>
                <onclick>PlayerControl(Tempo(1.1))</onclick>
            </control>
            <control type="button" id="9906">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>630</label>
                <onclick>PlayerControl(Tempo(1.0))</onclick>
            </control>
            <control type="button" id="9907">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>0.90</label>
                <onclick>PlayerControl(Tempo(0.9))</onclick>
            </control>
            <control type="button" id="9908">
                <width>100%</width>
                <height>60</height>
                <include>DefContextButtonGradient</include>
                <label>0.80</label>
                <onclick>PlayerControl(Tempo(0.8))</onclick>
            </control>
        </control>
        <control type="image">
            <top>38</top>
            <right>30</right>
            <width>20</width>
            <height>20</height>
            <texture colordiffuse="Dark1">osd/minicheck_big.png</texture>
            <animation effect="slide" end="0,60" time="0" condition="Player.IsTempo + String.IsEqual(Player.PlaySpeed,1.40)">Conditional</animation>
            <animation effect="slide" end="0,120" time="0" condition="Player.IsTempo + String.IsEqual(Player.PlaySpeed,1.30)">Conditional</animation>
            <animation effect="slide" end="0,180" time="0" condition="Player.IsTempo + String.IsEqual(Player.PlaySpeed,1.20)">Conditional</animation>
            <animation effect="slide" end="0,240" time="0" condition="Player.IsTempo + String.IsEqual(Player.PlaySpeed,1.10)">Conditional</animation>
            <animation effect="slide" end="0,300" time="0" condition="!Player.IsTempo + String.IsEqual(Player.PlaySpeed,1.00)">Conditional</animation>
            <animation effect="slide" end="0,360" time="0" condition="Player.IsTempo + String.IsEqual(Player.PlaySpeed,0.90)">Conditional</animation>
            <animation effect="slide" end="0,420" time="0" condition="Player.IsTempo + String.IsEqual(Player.PlaySpeed,0.80)">Conditional</animation>
        </control>
    </include>

    <include name="Kodi_Logo">
        <param name="top" value="$PARAM[top]" default="15"/>
        <param name="left" value="$PARAM[left]" default="15"/>
        <param name="left-gradient" value="$PARAM[left-gradient]" default="0"/>
        <param name="dimensions" value="$PARAM[dimensions]" default="40"/>
        <definition>
            <control type="image">
                <top>$PARAM[top]</top>
                <left>$PARAM[left]</left>
                <width>$PARAM[dimensions]</width>
                <height>$PARAM[dimensions]</height>
                <colordiffuse>$VAR[ColorKodiLogo]</colordiffuse>
                <texture>buttons/kodi-logo.png</texture>
            </control>
            <control type="image">
                <top>$PARAM[top]</top>
                <left>$PARAM[left]</left>
                <width>$PARAM[dimensions]</width>
                <height>$PARAM[dimensions]</height>
                <colordiffuse>$VAR[ColorKodiLogoGradient]</colordiffuse>
                <texture>buttons/kodi-logo-gradient.png</texture>
            </control>
        </definition>
    </include>

    <include name="Kodi_Logo_Home">
        <param name="top" value="$PARAM[top]" default="15"/>
        <param name="left" value="$PARAM[left]" default="15"/>
        <param name="left-gradient" value="$PARAM[left-gradient]" default="0"/>
        <param name="dimensions" value="$PARAM[dimensions]" default="40"/>
        <definition>
            <control type="image">
                <top>$PARAM[top]</top>
                <left>$PARAM[left]</left>
                <width>$PARAM[dimensions]</width>
                <height>$PARAM[dimensions]</height>
                <colordiffuse>$VAR[ColorKodiLogo]</colordiffuse>
                <texture>buttons/kodi-logo.png</texture>
            </control>
            <control type="image">
                <top>$PARAM[top]</top>
                <left>$PARAM[left-gradient]</left>
                <width>$PARAM[dimensions]</width>
                <height>$PARAM[dimensions]</height>
                <colordiffuse>$VAR[ColorKodiLogoGradient]</colordiffuse>
                <texture>buttons/kodi-logo-gradient.png</texture>
            </control>
        </definition>
    </include>

    <!-- Systeminfo Layout -->
    <include name="TemplateSystemItemLayout">
        <itemlayout height="325" width="325">
            <control type="group">
                <width>325</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include>include.widget.square.system</include>
            </control>
        </itemlayout>
    </include>

    <include name="TemplateSubmenuItemLayout">
        <param name="SquareMedium" default="false"/>
        <param name="SquareSmall" default="false"/>
        <param name="Square" default="false"/>
        <definition>
        <itemlayout height="125" width="125" condition="$PARAM[SquareSmall]">
            <control type="group">
                <width>125</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="height" value="125"/>
                    <param name="distance" value="$PARAM[distance]"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="175" width="222" condition="$PARAM[SquareMedium]">
            <control type="group">
                <width>222</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="aspectratio" value="$PARAM[aspectratio]"/>
                    <param name="height" value="175"/>
                    <param name="distance" value="$PARAM[distance]"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="325" condition="![$PARAM[SquareSmall] | $PARAM[SquareMedium]]">
            <control type="group">
                <width>325</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="aspectratio" value="$PARAM[aspectratio]"/>
                    <param name="distance" value="$PARAM[distance]"/>
                </include>
            </control>
        </itemlayout>
        </definition>
    </include>

    <include name="TemplatePvrItemLayout">
        <itemlayout height="61.9" width="1756">
            <control type="group">
                <width>1756</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include>include.widget.pvr</include>
            </control>
        </itemlayout>
    </include>

    <include name="TemplatePvrFocusLayout">
        <focusedlayout height="61.9" width="1756">
            <control type="group">
                <width>1756</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.pvr.focus">
                    <param name="shortcutsid" value="$PARAM[shortcutsid]"/>
                    <param name="glow_top" value="-4"/>
                    <param name="glow_left" value="53"/>
                    <param name="glow_right" value="36"/>
                    <param name="glow_height" value="85"/>
                </include>
            </control>
        </focusedlayout>
    </include>

    <!-- Normal Layout -->
    <include name="TemplateNormalItemLayout">
        <param name="Banner" default="false"/>
        <param name="Thumbnail" default="false"/>
        <param name="Fanart" default="false"/>
        <param name="FanartSmall" default="false"/>
        <param name="ThumbnailSmall" default="false"/>
        <param name="ThumbnailPosterSmall" default="false"/>
        <param name="Square" default="false"/>
        <param name="SquareSmall" default="false"/>
        <param name="SquareMedium" default="false"/>
        <definition>
        <itemlayout height="325" width="222" condition="![$PARAM[Banner] | $PARAM[Thumbnail] | $PARAM[Fanart] | $PARAM[FanartSmall] | $PARAM[ThumbnailSmall] | $PARAM[ThumbnailPosterSmall] | $PARAM[Square]]">
            <control type="group">
                <width>222</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.poster">
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="325" condition="$PARAM[Square]">
            <control type="group">
                <width>325</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square">
                    <param name="aspectratio" value="$PARAM[aspectratio]"/>
                    <param name="distance" value="$PARAM[distance]"/>
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="562" condition="$PARAM[Fanart]">
            <control type="group">
                <width>562</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.fanart">
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="400" condition="$PARAM[FanartSmall]">
            <control type="group">
                <width>400</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.fanart">
                    <param name="reflections" value="false"/>
                    <param name="small" value="true"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="1690" condition="$PARAM[Banner]">
            <control type="group">
                <width>1690</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.banner">
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="562" condition="$PARAM[Thumbnail]">
            <control type="group">
                <width>562</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.thumb">
                    <param name="clearlogo" value="$PARAM[shortcutsclearlogo]"/>
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="400" condition="$PARAM[ThumbnailSmall]">
            <control type="group">
                <width>400</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.thumb">
                    <param name="clearlogo" value="$PARAM[shortcutsclearlogo]"/>
                    <param name="small" value="true"/>
                    <param name="reflections" value="false"/>
                </include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="542" condition="$PARAM[ThumbnailPosterSmall]">
            <control type="group">
                <width>542</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.thumb">
                    <param name="clearlogo" value="false"/>
                    <param name="small" value="true"/>
                    <param name="poster" value="true"/>
                    <param name="reflections" value="false"/>
                </include>
            </control>
        </itemlayout>
        </definition>
    </include>

    <!-- Weather Layout -->
    <include name="TemplateWeatherItemLayout">
        <param name="Fanart" default="false"/>
        <param name="Square" default="false"/>
        <definition>
        <itemlayout height="325" width="222" condition="![$PARAM[Fanart] | $PARAM[Square]]">
            <control type="group">
                <width>222</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include>weatherlayoutwidgetsvertical.poster</include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="325" condition="$PARAM[Square]">
            <control type="group">
                <width>325</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include>weatherlayoutwidgetsvertical.square</include>
            </control>
        </itemlayout>
        <itemlayout height="325" width="562" condition="$PARAM[Fanart]">
            <control type="group">
                <width>562</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include>weatherlayoutwidgetsvertical.fanart</include>
            </control>
        </itemlayout>
        </definition>
    </include>

    <!-- Systeminfo Focus Layout -->
    <include name="TemplateSystemFocusLayout">
        <focusedlayout height="325" width="325">
            <control type="group">
                <width>325</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square.system.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="glow_left" value="2"/>
                    <param name="glow_right" value="3"/>
                </include>
            </control>
            <include content="SetWidgetContainerPosition" condition="$EXP[HomeIsCleanMinimal]">
                <param name="id" value="$PARAM[shortcutsid]" />
            </include>
        </focusedlayout>
    </include>

    <include name="TemplateSubmenuFocusLayout">
        <param name="SquareMedium" default="false"/>
        <param name="SquareSmall" default="false"/>
        <param name="Square" default="false"/>
        <definition>
        <focusedlayout height="125" width="125" condition="$PARAM[SquareSmall]">
            <control type="group">
                <width>125</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="height" value="125"/>
                    <param name="distance" value="$PARAM[distance]"/>
                    <param name="glow_left" value="-4"/>
                    <param name="glow_right" value="-2"/>
                    <param name="glow_top" value="-4"/>
                    <param name="glow_height" value="130"/>
                </include>
            </control>
        </focusedlayout>
        <focusedlayout height="175" width="222" condition="$PARAM[SquareMedium]">
            <control type="group">
                <width>222</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="aspectratio" value="$PARAM[aspectratio]"/>
                    <param name="height" value="175"/>
                    <param name="distance" value="$PARAM[distance]"/>
                    <param name="glow_left" value="-2"/>
                    <param name="glow_right" value="-1"/>
                    <param name="glow_top" value="-4"/>
                    <param name="glow_height" value="181"/>
                </include>
            </control>
        </focusedlayout>
        <focusedlayout height="325" width="325" condition="![$PARAM[SquareSmall] | $PARAM[SquareMedium]]">
            <control type="group">
                <width>325</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="aspectratio" value="$PARAM[aspectratio]"/>
                    <param name="distance" value="$PARAM[distance]"/>
                </include>
            </control>
        </focusedlayout>
        </definition>
    </include>

    <!-- Normal Focus Layout -->
    <include name="TemplateNormalFocusLayout">
        <param name="Banner" default="false"/>
        <param name="Thumbnail" default="false"/>
        <param name="Fanart" default="false"/>
        <param name="FanartSmall" default="false"/>
        <param name="ThumbnailSmall" default="false"/>
        <param name="ThumbnailPosterSmall" default="false"/>
        <param name="Square" default="false"/>
        <param name="SquareSmall" default="false"/>
        <param name="SquareMedium" default="false"/>
        <definition>
        <focusedlayout height="325" width="222" condition="![$PARAM[Banner] | $PARAM[Thumbnail] | $PARAM[Fanart] | $PARAM[FanartSmall] | $PARAM[ThumbnailSmall] | $PARAM[ThumbnailPosterSmall] | $PARAM[Square]] | $EXP[HomeIsCleanMinimal]">
            <control type="group">
                <width>222</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.poster.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                </include>
                <include content="SetWidgetContainerPosition" condition="$EXP[HomeIsCleanMinimal]">
                    <param name="id" value="$PARAM[shortcutsid]" />
                </include>
            </control>
            <include condition="Skin.HasSetting(home.netflix.autoplay.trailer) + [$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix] | $EXP[HomeIsCleanMinimal]]">SetAutoTrailerControl</include>
        </focusedlayout>
        <focusedlayout height="325" width="325" condition="$PARAM[Square] + !$EXP[HomeIsCleanMinimal]">
            <control type="group">
                <width>325</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.square.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="aspectratio" value="$PARAM[aspectratio]"/>
                    <param name="distance" value="$PARAM[distance]"/>
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                    <param name="glow_left" value="1"/>
                    <param name="glow_right" value="2"/>
                </include>
            </control>
            <include condition="Skin.HasSetting(home.netflix.autoplay.trailer) + [$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix] | $EXP[HomeIsCleanMinimal]]">SetAutoTrailerControl</include>
        </focusedlayout>
        <focusedlayout height="325" width="562" condition="$PARAM[Fanart] + !$EXP[HomeIsCleanMinimal]">
            <control type="group">
                <width>562</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.fanart.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                    <param name="glow_left" value="10"/>
                    <param name="glow_right" value="11"/>
                </include>
            </control>
            <include condition="Skin.HasSetting(home.netflix.autoplay.trailer) + [$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix] | $EXP[HomeIsCleanMinimal]]">SetAutoTrailerControl</include>
        </focusedlayout>
        <focusedlayout height="325" width="400" condition="$PARAM[FanartSmall] + !$EXP[HomeIsCleanMinimal]">
            <control type="group">
                <width>400</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.fanart.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="reflections" value="false"/>
                    <param name="small" value="true"/>
                    <param name="glow_left" value="4"/>
                    <param name="glow_right" value="5"/>
                </include>
            </control>
            <include condition="Skin.HasSetting(home.netflix.autoplay.trailer) + [$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix] | $EXP[HomeIsCleanMinimal]]">SetAutoTrailerControl</include>
        </focusedlayout>
        <focusedlayout height="325" width="1690" condition="$PARAM[Banner] + !$EXP[HomeIsCleanMinimal]">
            <control type="group">
                <width>1690</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.banner.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                    <param name="glow_left" value="52"/>
                    <param name="glow_right" value="52"/>
                </include>
            </control>
            <include condition="Skin.HasSetting(home.netflix.autoplay.trailer) + [$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix] | $EXP[HomeIsCleanMinimal]]">SetAutoTrailerControl</include>
        </focusedlayout>
        <focusedlayout height="325" width="562" condition="$PARAM[Thumbnail] + !$EXP[HomeIsCleanMinimal]">
            <control type="group">
                <width>562</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.thumb.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="clearlogo" value="$PARAM[shortcutsclearlogo]"/>
                    <param name="reflections" value="Skin.HasSetting(home.widgets.show.reflections)"/>
                    <param name="glow_left" value="10"/>
                    <param name="glow_right" value="11"/>
                </include>
            </control>
            <include condition="Skin.HasSetting(home.netflix.autoplay.trailer) + [$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix] | $EXP[HomeIsCleanMinimal]]">SetAutoTrailerControl</include>
        </focusedlayout>
        <focusedlayout height="325" width="400" condition="$PARAM[ThumbnailSmall] + !$EXP[HomeIsCleanMinimal]">
            <control type="group">
                <width>400</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.thumb.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="clearlogo" value="$PARAM[shortcutsclearlogo]"/>
                    <param name="reflections" value="false"/>
                    <param name="small" value="true"/>
                    <param name="glow_left" value="4"/>
                    <param name="glow_right" value="5"/>
                </include>
            </control>
            <include condition="Skin.HasSetting(home.netflix.autoplay.trailer) + [$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix] | $EXP[HomeIsCleanMinimal]]">SetAutoTrailerControl</include>
        </focusedlayout>
        <focusedlayout height="325" width="542" condition="$PARAM[ThumbnailPosterSmall] + !$EXP[HomeIsCleanMinimal]">
            <control type="group">
                <width>542</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="include.widget.thumb.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="clearlogo" value="false"/>
                    <param name="reflections" value="false"/>
                    <param name="small" value="true"/>
                    <param name="poster" value="true"/>
                    <param name="glow_left" value="10"/>
                    <param name="glow_right" value="11"/>
                </include>
            </control>
            <include condition="Skin.HasSetting(home.netflix.autoplay.trailer) + [$EXP[HomeIsModernMultiWidgetsNetflix] | $EXP[HomeIsVerticalMultiWidgetsNetflix] | $EXP[HomeIsCleanMinimal]]">SetAutoTrailerControl</include>
        </focusedlayout>
        </definition>
    </include>

    <!-- Weather Focus Layout -->
    <include name="TemplateWeatherFocusLayout">
        <param name="Square" default="false"/>
        <param name="Fanart" default="false"/>
        <definition>
        <focusedlayout height="325" width="222" condition="![$PARAM[Square] | $PARAM[Fanart]]">
            <control type="group">
                <width>222</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="weatherlayoutwidgetsvertical.poster.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                </include>
            </control>
            <include content="SetWidgetContainerPosition" condition="$EXP[HomeIsCleanMinimal]">
                <param name="id" value="$PARAM[shortcutsid]" />
            </include>
        </focusedlayout>
        <focusedlayout height="325" width="325" condition="$PARAM[Square]">
            <control type="group">
                <width>325</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="weatherlayoutwidgetsvertical.square.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="glow_left" value="2"/>
                    <param name="glow_right" value="3"/>
                </include>
            </control>
        </focusedlayout>
        <focusedlayout height="325" width="562" condition="$PARAM[Fanart]">
            <control type="group">
                <width>562</width>
                <include content="def_left" condition="$EXP[HomeIsModernMultiWidgets] + !Skin.HasSetting(homemenu.clean.flix) + !Skin.HasSetting(old.widgets.movement)"><param name="left" value="70" /></include>
                <include content="weatherlayoutwidgetsvertical.fanart.focus">
                    <param name="id" value="$PARAM[shortcutsid]"/>
                    <param name="glow_left" value="11"/>
                    <param name="glow_right" value="11"/>
                </include>
            </control>
        </focusedlayout>
        </definition>
    </include>

    <include name="ClearLogoHomeImageContainer">
        <animation effect="slide" start="0" end="0,30" time="0" condition="!Skin.HasSetting(home.widgets.show.reflections)">Conditional</animation>
        <animation effect="slide" start="0" end="0,2" time="0" condition="Skin.HasSetting(home.widgets.show.reflections)">Conditional</animation>
        <animation effect="slide" start="0" end="6,0" time="0" condition="$EXP[HomeIsVerticalMultiWidgets]">Conditional</animation>
        <animation effect="slide" start="0" end="0,-50" time="0" condition="$EXP[HomeIsVerticalMultiWidgets] + !Skin.HasSetting(home.oldmenuheight) + !Skin.HasSetting(submenu.compatibility)">Conditional</animation>
        <animation effect="slide" start="0" end="-50,0" time="0" condition="$EXP[HomeIsVerticalMultiWidgets] + Skin.HasSetting(homemenu.only.icons) + Skin.HasSetting(home.showicons)">Conditional</animation>
        <animation effect="slide" start="0" end="0,385" time="0" condition="!Skin.HasSetting(home.widgets.show.reflections) + Integer.IsEqual(Container(301).NumItems,1) + !String.Contains(Container(300).ListItem.Property(widgetFullscreen),yes)">Conditional</animation>
        <animation effect="slide" start="0" end="0,415" time="0" condition="Skin.HasSetting(home.widgets.show.reflections) + Integer.IsEqual(Container(301).NumItems,1) + !String.Contains(Container(300).ListItem.Property(widgetFullscreen),yes)">Conditional</animation>
        <animation effect="slide" start="0" end="0,-28" time="0" condition="Skin.HasSetting(home.oldmenuheight) | Skin.HasSetting(submenu.compatibility)">Conditional</animation>
        <animation type="WindowClose" condition="!$EXP[HomeIsVerticalMultiWidgets]">
            <effect type="slide" start="0" end="0,250" time="150"/>
            <effect type="fade" start="100" end="20" time="150"/>
        </animation>
        <animation effect="slide" start="0,150" end="0" time="130" reversible="false" condition="String.IsEqual(Container(300).ListItem.Label,Window(home).Property(ClearArtAnimation))">Conditional</animation>
        <animation effect="fade" start="20" end="100" time="150" reversible="false" condition="String.IsEqual(Container(300).ListItem.Label,Window(home).Property(ClearArtAnimation))">Conditional</animation>
        <animation effect="fade" start="100" end="0" time="400" condition="!ControlGroup(301).HasFocus() + $EXP[HomeIsVerticalMultiWidgets] + ![Skin.HasSetting(homemenu.only.icons) + Skin.HasSetting(home.showicons)]">Conditional</animation>
        <include condition="!Skin.HasSetting(widgets.fade)">Animation.Vertical.Widgets.Label</include>
        <fadetime>ClearArtFadetime</fadetime>
        <right>SidePad</right>
        <width>400</width>
        <aspectratio scalediffuse="true" align="right" aligny="top">keep</aspectratio>
    </include>

    <include name="NowPlaying_Progress">
        <visible>$PARAM[visible]</visible>
        <control type="image" description="Back">
            <left>0</left>
            <centertop>50%</centertop>
            <width>100</width>
            <height>100</height>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture>progress/back.png</texture>
            <animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
        </control>
        <control type="image" description="Play">
            <left>0</left>
            <centertop>50%</centertop>
            <width>100</width>
            <height>100</height>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture colordiffuse="Dark1">progress/play.png</texture>
            <animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
            <visible>!Player.Paused + !Player.Forwarding + !Player.Forwarding</visible>
            <include>$PARAM[animation]</include>
        </control>
        <control type="image" description="Pause">
            <left>0</left>
            <centertop>50%</centertop>
            <width>100</width>
            <height>100</height>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture colordiffuse="Dark1">progress/pause.png</texture>
            <animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
            <visible>Player.Paused</visible>
        </control>
        <control type="image" description="Forwarding">
            <left>-3</left>
            <centertop>50%</centertop>
            <width>100</width>
            <height>100</height>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture colordiffuse="Dark1">progress/ff.png</texture>
            <animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
            <visible>Player.Forwarding</visible>
        </control>
        <control type="image" description="Rewinding">
            <left>-3</left>
            <centertop>50%</centertop>
            <width>100</width>
            <height>100</height>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture colordiffuse="Dark1">progress/rw.png</texture>
            <animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
            <visible>Player.Rewinding</visible>
        </control>
        <control type="progress" id="$PARAM[id]">
            <texturebg />
            <lefttexture />
            <midtexture />
            <righttexture />
            <info>$PARAM[info]</info>
            <visible>false</visible>
        </control>
        <control type="image">
            <left>0</left>
            <centertop>50%</centertop>
            <width>100</width>
            <height>100</height>
            <texture colordiffuse="$VAR[ColorHighlight]">$INFO[Control.GetLabel($PARAM[id]),progress/circle/p,.png]</texture>
            <aspectratio align="center">keep</aspectratio>
        </control>
    </include>

    <include name="NewJumpbar">
        <content>plugin://script.embuary.helper/?info=jumptoletter&amp;showall=true&amp;reload=$INFO[Container.NumItems]</content>
    </include>
    
    <include name="OldJumpbar">
        <content>
            <item id="0">
                <label>#</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS2</onclick>
                <onclick>JumpSMS2</onclick>
                <onclick>JumpSMS2</onclick>
                <onclick>JumpSMS2</onclick>
            </item>
            <item id="1">
                <label>A</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS2</onclick>
            </item>
            <item id="2">
                <label>B</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS2</onclick>
                <onclick>JumpSMS2</onclick>
            </item>
            <item id="4">
                <label>C</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS2</onclick>
                <onclick>JumpSMS2</onclick>
                <onclick>JumpSMS2</onclick>
            </item>
            <item id="5">
                <label>D</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS3</onclick>
            </item>
            <item id="6">
                <label>E</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS3</onclick>
                <onclick>JumpSMS3</onclick>
            </item>
            <item id="7">
                <label>F</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS3</onclick>
                <onclick>JumpSMS3</onclick>
                <onclick>JumpSMS3</onclick>
            </item>
            <item id="8">
                <label>G</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS4</onclick>
            </item>
            <item id="9">
                <label>H</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS4</onclick>
                <onclick>JumpSMS4</onclick>
            </item>
            <item id="10">
                <label>I</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS4</onclick>
                <onclick>JumpSMS4</onclick>
                <onclick>JumpSMS4</onclick>
            </item>
            <item id="11">
                <label>J</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS5</onclick>
            </item>
            <item id="12">
                <label>K</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS5</onclick>
                <onclick>JumpSMS5</onclick>
            </item>
            <item id="13">
                <label>L</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS5</onclick>
                <onclick>JumpSMS5</onclick>
                <onclick>JumpSMS5</onclick>
            </item>
            <item id="14">
                <label>M</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS6</onclick>
            </item>
            <item id="15">
                <label>N</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS6</onclick>
                <onclick>JumpSMS6</onclick>
            </item>
            <item id="16">
                <label>O</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS6</onclick>
                <onclick>JumpSMS6</onclick>
                <onclick>JumpSMS6</onclick>
            </item>
            <item id="17">
                <label>P</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS7</onclick>
            </item>
            <item id="18">
                <label>Q</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS7</onclick>
            </item>
            <item id="19">
                <label>R</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS7</onclick>
            </item>
            <item id="20">
                <label>S</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS7</onclick>
            </item>
            <item id="21">
                <label>T</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS8</onclick>
            </item>
            <item id="22">
                <label>U</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS8</onclick>
                <onclick>JumpSMS8</onclick>
            </item>
            <item id="23">
                <label>V</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS8</onclick>
                <onclick>JumpSMS8</onclick>
                <onclick>JumpSMS8</onclick>
            </item>
            <item id="24">
                <label>W</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS9</onclick>
            </item>
            <item id="25">
                <label>X</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS9</onclick>
            </item>
            <item id="26">
                <label>Y</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS9</onclick>
            </item>
            <item id="27">
                <label>Z</label>
                <onclick>$VAR[ClickToJump]</onclick>
                <onclick>JumpSMS7</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS9</onclick>
                <onclick>JumpSMS9</onclick>
            </item>
        </content>
    </include>

    <include name="Def_Flag">
        <param name="left" value="$PARAM[left]" default="0"/>
        <param name="visible" value="$PARAM[visible]" default="true"/>
        <param name="width" value="$PARAM[width]" default="37"/>
        <definition>
        <control type="image">
            <left>$PARAM[left]</left>
            <width>$PARAM[width]</width>
            <height>$PARAM[width]</height>
            <centertop>50%</centertop>
            <texture colordiffuse="$VAR[ColorHighlight]">misc/$VAR[$PARAM[Star]].png</texture>
            <visible>$PARAM[visible]</visible>
        </control>
        </definition>
    </include>

    <include name="Def_Flag_Small">
        <param name="left" value="$PARAM[left]" default="0"/>
        <param name="visible" value="$PARAM[visible]" default="true"/>
        <param name="color" value="$PARAM[color]" default="$VAR[ColorStars]"/>
        <definition>
        <control type="image">
            <posx>$PARAM[left]</posx>
            <width>64</width>
            <height>64</height>
            <centertop>50%</centertop>
            <texture colordiffuse="$PARAM[color]">flags/$VAR[$PARAM[Star]].png</texture>
            <visible>$PARAM[visible]</visible>
        </control>
        </definition>
    </include>

    <include name="Def_Flags_Furniture_Small">
        <param name="left" value="$PARAM[left]" default="0"/>
        <param name="visible" value="$PARAM[visible]" default="true"/>
        <definition>
        <include content="Def_Flag_Small">
            <param name="Star" value="$PARAM[Star]1" />
            <param name="color" value="$PARAM[color]" />
        </include>
        <include content="Def_Flag_Small">
            <param name="Star" value="$PARAM[Star]2" />
            <param name="left" value="-20" />
            <param name="visible" value="$PARAM[visible]" />
            <param name="color" value="$PARAM[color]" />
        </include>
        <include content="Def_Flag_Small">
            <param name="Star" value="$PARAM[Star]3" />
            <param name="left" value="-20" />
            <param name="visible" value="$PARAM[visible]" />
            <param name="color" value="$PARAM[color]" />
        </include>
        <include content="Def_Flag_Small">
            <param name="Star" value="$PARAM[Star]4" />
            <param name="left" value="-20" />
            <param name="visible" value="$PARAM[visible]" />
            <param name="color" value="$PARAM[color]" />
        </include>
        <include content="Def_Flag_Small">
            <param name="Star" value="$PARAM[Star]5" />
            <param name="left" value="-20" />
            <param name="visible" value="$PARAM[visible]" />
            <param name="color" value="$PARAM[color]" />
        </include>
        </definition>
    </include>

    <include name="DefDiscArtNowPlaying">
        <param name="width" value="$PARAM[width]" default="296"/>
        <param name="visible" value="$PARAM[visible]" default="true"/>
        <param name="discart" value="$PARAM[discart]" default="$VAR[MusicDiscart]"/>
        <param name="diffuse" value="$PARAM[diffuse]" default="diffuse/diffuse_cd_full.png"/>
        <definition>
        <control type="image">
            <aspectratio scalediffuse="false">scale</aspectratio>
            <visible>$PARAM[visible]</visible>
            <width>$PARAM[width]</width>
            <height>$PARAM[width]</height>
            <texture diffuse="$PARAM[diffuse]">$PARAM[discart]</texture>
            <animation effect="rotate" center="auto" time="6000" end="-360" condition="true" loop="true">Conditional</animation>
        </control>
        </definition>
    </include>

    <include name="ArrowsNavigation">
        <param name="centerbottom" value="$PARAM[centerbottom]" default="257"/>
        <param name="centerleft" value="$PARAM[centerleft]" default="550"/>
        <param name="visible" value="$PARAM[visible]" default="false"/>
        <definition>
        <control type="group">
            <include>Animation.DelayFadeIn</include>
            <visible>$PARAM[visible]</visible>
            <centerbottom>$PARAM[centerbottom]</centerbottom>
            <height>16</height>
            <control type="image">
                <centerleft>$PARAM[centerleft]</centerleft>
                <include>arrowdimensions</include>
                <texture colordiffuse="Dark1" flipx="true">common/arrow-small-right.png</texture>
            </control>
            <control type="image">
                <centerright>61</centerright>
                <include>arrowdimensions</include>
                <texture colordiffuse="Dark1" flipx="false">common/arrow-small-right.png</texture>
            </control>
        </control>
        </definition>
    </include>

    <include name="DialogInfoOverlay">
        <param name="ondirection" value="$PARAM[ondirection]" default="9000"/>
        <param name="visible" value="$PARAM[visible]" default="Control.HasFocus(9601)"/>
        <definition>
        <control type="scrollbar" id="9601">
            <width>1</width>
            <height>1</height>
            <visible allowhiddenfocus="true">false</visible>
            <onback>$PARAM[ondirection]</onback>
            <onup>$PARAM[ondirection]</onup>
            <ondown>$PARAM[ondirection]</ondown>
            <onleft>$PARAM[ondirection]</onleft>
            <onright>$PARAM[ondirection]</onright>
            <onback>ClearProperty(dontautoclose,home)</onback>
            <onup>ClearProperty(dontautoclose,home)</onup>
            <ondown>ClearProperty(dontautoclose,home)</ondown>
            <onleft>ClearProperty(dontautoclose,home)</onleft>
            <onright>ClearProperty(dontautoclose,home)</onright>
        </control>
        <control type="group">
            <visible>$PARAM[visible]</visible>
            <include>Animation.FadeIn</include>
            <include>Animation.FadeOut</include>
            <control type="image" description="Background">
                <include>Dimensions_Fullscreen</include>
                <texture colordiffuse="Background">common/bg.jpg</texture>
                <animation effect="fade" start="100" end="95" condition="true">Conditional</animation>
            </control>
            <control type="image" description="clearlogo">
                <visible>Skin.HasSetting(furniture.logo)</visible>
                <centertop>120</centertop>
                <centerleft>50%</centerleft>
                <height>102</height>
                <aspectratio align="center">keep</aspectratio>
                <texture background="true">$VAR[ClearLogoTopVar]</texture>
            </control>
        </control>
        <control type="group">
            <left>SidePad</left>
            <right>SidePad</right>
            <top>PosterPad</top>
            <height>630</height>
            <visible>$PARAM[visible]</visible>
            <include>Animation.FadeIn.Slide</include>
            <include>Animation.FadeOut</include>
            <control type="label">
                <description>header label</description>
                <left>60</left>
                <right>60</right>
                <posy>60</posy>
                <font>EpisodeNumberNew</font>
                <textcolor>Dark1</textcolor>
                <height>45</height>
                <label>$PARAM[headerinfo]</label>
            </control>
            <control type="textbox" id="9600">
                <description>textarea</description>
                <left>60</left>
                <right>60</right>
                <top>150</top>
                <bottom>0</bottom>
                <align>justify</align>
                <font>Medium</font>
                <textcolor>Dark1</textcolor>
                <pagecontrol>9601</pagecontrol>
                <autoscroll>false</autoscroll>
                <label>$PARAM[plotinfo]</label>
            </control>
        </control>
        <control type="group">
            <visible>$PARAM[visible] + Container(9600).HasNext</visible>
            <include>Animation.FadeIn</include>
            <include>Animation.FadeOut</include>
            <left>952</left>
            <top>970</top>
            <control type="image">
                <top>0</top>
                <include>arrowdimensions</include>
                <texture colordiffuse="Dark2" flipy="false">common/arrow-small.png</texture>
            </control>
            <control type="image">
                <top>12</top>
                <include>arrowdimensions</include>
                <texture colordiffuse="Dark2" flipy="false">common/arrow-small.png</texture>
            </control>
        </control>
        <control type="group">
            <visible>$PARAM[visible] + Container(9600).HasPrevious</visible>
            <include>Animation.FadeIn</include>
            <include>Animation.FadeOut</include>
            <left>952</left>
            <top>80</top>
            <control type="image">
                <top>0</top>
                <include>arrowdimensions</include>
                <texture colordiffuse="Dark2" flipy="true">common/arrow-small.png</texture>
            </control>
            <control type="image">
                <top>12</top>
                <include>arrowdimensions</include>
                <texture colordiffuse="Dark2" flipy="true">common/arrow-small.png</texture>
            </control>
        </control>
        </definition>
    </include>

    <include name="IndicatorPoster">
        <param name="right" value="$PARAM[right]" default="1"/>
        <param name="top" value="$PARAM[top]" default="1"/>
        <param name="indicatorbackground" value="$PARAM[indicatorbackground]" default="false"/>
        <definition>
        <control type="group">
            <visible>!Skin.HasSetting(furniture.markers.alternative)</visible>
            <right>$PARAM[right]</right>
            <top>$PARAM[top]</top>
            <control type="label">
                <align>center</align>
                <aligny>center</aligny>
                <width>50</width>
                <right>7</right>
                <top>6</top>
                <height>50</height>
                <textcolor>$VAR[WatchedBackingColor]</textcolor>
                <font>SymbolPosterBackground</font>
                <label>$VAR[WatchedBacking]</label>
                <visible>$PARAM[indicatorbackground]</visible>
            </control>
            <control type="label">
                <align>center</align>
                <aligny>center</aligny>
                <width>50</width>
                <right>7</right>
                <top>6</top>
                <height>50</height>
                <textcolor>WatchedIcons</textcolor>
                <selectedcolor>WatchedIcons</selectedcolor>
                <font>SymbolPoster</font>
                <label>$VAR[WatchedLabelPoster]</label>
            </control>
        </control>
        <control type="group">
            <visible>Skin.HasSetting(furniture.markers.alternative)</visible>
            <right>$PARAM[right]</right>
            <top>$PARAM[top]</top>
            <control type="image">
                 <right>8</right>
                 <top>8</top>
                 <width>100</width>
                 <height>100</height>
                 <texture colordiffuse="$VAR[ColorIndicatorBackgroundIsPlaying]" background="true">misc/overlaywatched.png</texture>
                 <visible>ListItem.IsPlaying + !Skin.HasSetting(hide.markers.isplaying)</visible>
            </control>
            <control type="image">
                 <right>8</right>
                 <top>8</top>
                 <width>100</width>
                 <height>100</height>
                 <texture colordiffuse="$VAR[ColorIndicatorBackgroundInprogress]" background="true">misc/overlaywatched.png</texture>
                 <visible>ListItem.IsResumable + !ListItem.IsPlaying + !Skin.HasSetting(hide.markers.inprogress)</visible>
            </control>
            <control type="image">
                 <right>8</right>
                 <top>8</top>
                 <width>100</width>
                 <height>100</height>
                 <texture colordiffuse="$VAR[ColorIndicatorBackgroundWatched]" background="true">misc/overlaywatched.png</texture>
                 <visible>!ListItem.IsResumable + !ListItem.IsPlaying + String.IsEqual(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(hide.markers.watched)</visible>
            </control>
            <control type="image">
                 <right>8</right>
                 <top>8</top>
                 <width>100</width>
                 <height>100</height>
                 <texture colordiffuse="$VAR[ColorIndicatorBackgroundNew]" background="true">misc/overlaywatched.png</texture>
                 <visible>!ListItem.IsResumable + !ListItem.IsPlaying + [[String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) + [$EXP[IsNewMovie] | $EXP[IsNewTVShow] | $EXP[IsNewEpisode]]]] + !Skin.HasSetting(hide.markers.newcontent)</visible>
            </control>
            <control type="label">
                 <right>-9</right>
                 <top>8</top>
                 <align>center</align>
                 <label>$VAR[IndicatorFlagLabel]</label>
                 <width>100</width>
                 <font>WatchedStates</font>
                 <textcolor>$VAR[ColorIndicatorBackgroundLabel]</textcolor>
                 <selectedcolor>$VAR[ColorIndicatorBackgroundLabel]</selectedcolor>
                 <animation effect="rotate" center="auto" time="0" end="-45" condition="true" loop="false">Conditional</animation>
                 <visible>!ListItem.IsPlaying</visible>
            </control>
            <control type="label">
                 <right>-8</right>
                 <top>8</top>
                 <align>center</align>
                 <label>&#62811;</label>
                 <width>100</width>
                 <font>SymbolPoster</font>
                 <textcolor>$VAR[ColorIndicatorBackgroundIsPlayingIcon]</textcolor>
                 <selectedcolor>$VAR[ColorIndicatorBackgroundIsPlayingIcon]</selectedcolor>
                 <visible>ListItem.IsPlaying + !Skin.HasSetting(hide.markers.isplaying)</visible>
            </control>
        </control>
        </definition>
    </include>
    
    <include name="IndicatorPoster301">
        <param name="right" value="$PARAM[right]" default="1"/>
        <param name="top" value="$PARAM[top]" default="1"/>
        <definition>
        <control type="group">
            <visible>!Skin.HasSetting(furniture.markers.alternative)</visible>
            <right>$PARAM[right]</right>
            <top>$PARAM[top]</top>
            <control type="label">
                <align>center</align>
                <aligny>center</aligny>
                <width>50</width>
                <right>7</right>
                <top>6</top>
                <height>50</height>
                <textcolor>WatchedIcons</textcolor>
                <selectedcolor>WatchedIcons</selectedcolor>
                <font>SymbolPoster</font>
                <label>$VAR[WatchedLabelPoster301]</label>
            </control>
        </control>
        <control type="group">
            <visible>Skin.HasSetting(furniture.markers.alternative)</visible>
            <right>$PARAM[right]</right>
            <top>$PARAM[top]</top>
            <control type="image">
                 <right>8</right>
                 <top>8</top>
                 <width>100</width>
                 <height>100</height>
                 <texture colordiffuse="$VAR[ColorIndicatorBackgroundIsPlaying]">misc/overlaywatched.png</texture>
                 <visible>Container(301).ListItem.IsPlaying + !Skin.HasSetting(hide.markers.isplaying)</visible>
            </control>
            <control type="image">
                 <right>8</right>
                 <top>8</top>
                 <width>100</width>
                 <height>100</height>
                 <texture colordiffuse="$VAR[ColorIndicatorBackgroundInprogress]">misc/overlaywatched.png</texture>
                 <visible>Container(301).ListItem.IsResumable + !Container(301).ListItem.IsPlaying + !Skin.HasSetting(hide.markers.inprogress)</visible>
            </control>
            <control type="image">
                 <right>8</right>
                 <top>8</top>
                 <width>100</width>
                 <height>100</height>
                 <texture colordiffuse="$VAR[ColorIndicatorBackgroundWatched]">misc/overlaywatched.png</texture>
                 <visible>!Container(301).ListItem.IsResumable + !Container(301).ListItem.IsPlaying + String.IsEqual(Container(301).ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(hide.markers.watched)</visible>
            </control>
            <control type="image">
                 <right>8</right>
                 <top>8</top>
                 <width>100</width>
                 <height>100</height>
                 <texture colordiffuse="$VAR[ColorIndicatorBackgroundNew]">misc/overlaywatched.png</texture>
                 <visible>!Container(301).ListItem.IsResumable + !Container(301).ListItem.IsPlaying + [[String.IsEqual(Container(301).ListItem.Overlay,OverlayUnwatched.png) + [$EXP[IsNewMovie301] | $EXP[IsNewTVShow301] | $EXP[IsNewEpisode301]]]] + !Skin.HasSetting(hide.markers.newcontent)</visible>
            </control>
            <control type="label">
                 <right>-9</right>
                 <top>8</top>
                 <align>center</align>
                 <label>$VAR[IndicatorFlagLabel301]</label>
                 <width>100</width>
                 <font>WatchedStates</font>
                 <textcolor>$VAR[ColorIndicatorBackgroundLabel]</textcolor>
                 <selectedcolor>$VAR[ColorIndicatorBackgroundLabel]</selectedcolor>
                 <animation effect="rotate" center="auto" time="0" end="-45" condition="true" loop="false">Conditional</animation>
                 <visible>!Container(301).ListItem.IsPlaying</visible>
            </control>
            <control type="label">
                 <right>-8</right>
                 <top>8</top>
                 <align>center</align>
                 <label>&#62811;</label>
                 <width>100</width>
                 <font>SymbolPoster</font>
                 <textcolor>$VAR[ColorIndicatorBackgroundIsPlayingIcon]</textcolor>
                 <selectedcolor>$VAR[ColorIndicatorBackgroundIsPlayingIcon]</selectedcolor>
                 <visible>Container(301).ListItem.IsPlaying + !Skin.HasSetting(hide.markers.isplaying)</visible>
            </control>            
        </control>
        </definition>
    </include>

    <include name="TvShowProviderIcon">
        <control type="image">
            <top>21</top>
            <width>28</width>
            <height>28</height>
            <texture diffuse="common/box.png">$INFO[Window(Home).Property(TMDbHelper.ListItem.Provider.$PARAM[icon].Icon)]</texture>
            <visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Provider.$PARAM[icon].Icon))</visible>
            <aspectratio align="center">keep</aspectratio>
        </control>
    </include>

    <include name="SkinShortcutsBackButton">
        <control type="button" id="$PARAM[controlid]">
            <width>1</width>
            <height>1</height>
            <visible allowhiddenfocus="true">false</visible>
            <onfocus>ClearProperty(skinshortcuts-Widget,Home)</onfocus>
            <onfocus>SetFocus($PARAM[setfocus])</onfocus>
        </control>
    </include>

    <include name="MusicVisualisation_RatingStar">
        <param name="height" value="$PARAM[height]" default="35"/>
        <param name="visible" value="$PARAM[visible]" default="!Skin.HasSetting(musicosd.numericrating)"/>
        <definition>
        <control type="image">
            <width>$PARAM[height]</width>
            <height>$PARAM[height]</height>
            <centertop>50%</centertop>
            <texture colordiffuse="$VAR[ColorHighlight]">misc/$VAR[FlagstarMusic$PARAM[Flagstar]].png</texture>
            <visible>Integer.IsGreater(MusicPlayer.Time,0)</visible>
            <visible>$PARAM[visible]</visible>
            <animation type="Visible" condition="Integer.IsGreater(MusicPlayer.UserRating,$PARAM[IsGreater]) | [Integer.IsGreater(MusicPlayer.Rating,$PARAM[IsGreater]) + !Integer.IsGreater(MusicPlayer.UserRating,0)]">
                <effect type="fade" start="0" end="100" time="200"/>
                <effect type="zoom" center="auto" tween="back" easing="out" delay="$PARAM[delayin]" start="90" end="130" time="200"/>
                <effect type="zoom" center="auto" delay="$PARAM[delay]" start="110" end="77" time="200"/>
            </animation>
            <animation type="WindowOpen" condition="Integer.IsGreater(MusicPlayer.UserRating,$PARAM[IsGreater]) | [Integer.IsGreater(MusicPlayer.Rating,$PARAM[IsGreater]) + !Integer.IsGreater(MusicPlayer.UserRating,0)]" reversible="false">
                <effect type="fade" start="0" end="100" time="200"/>
                <effect type="zoom" center="auto" tween="back" easing="out" delay="$PARAM[delayin]" start="90" end="130" time="200"/>
                <effect type="zoom" center="auto" delay="$PARAM[delay]" start="110" end="77" time="200"/>
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="400"/>
            </animation>
        </control>
        </definition>
    </include>

    <include name="MusicVisualisation_RatingStars">
        <param name="height" value="$PARAM[height]" default="35"/>
        <definition>
        <include content="MusicVisualisation_RatingStar">
            <param name="delay" value="2200" />
            <param name="delayin" value="2000" />
            <param name="height" value="$PARAM[height]" />
            <param name="IsGreater" value="0" />
            <param name="Flagstar" value="1" />
            <param name="visible" value="true"/>
        </include>
        <include content="MusicVisualisation_RatingStar">
            <param name="delay" value="2250" />
            <param name="delayin" value="2050" />
            <param name="height" value="$PARAM[height]" />
            <param name="IsGreater" value="2" />
            <param name="Flagstar" value="2" />
        </include>
        <include content="MusicVisualisation_RatingStar">
            <param name="delay" value="2300" />
            <param name="delayin" value="2100" />
            <param name="height" value="$PARAM[height]" />
            <param name="IsGreater" value="4" />
            <param name="Flagstar" value="3" />
        </include>
        <include content="MusicVisualisation_RatingStar">
            <param name="delay" value="2350" />
            <param name="delayin" value="2150" />
            <param name="height" value="$PARAM[height]" />
            <param name="IsGreater" value="6" />
            <param name="Flagstar" value="4" />
        </include>
        <include content="MusicVisualisation_RatingStar">
            <param name="delay" value="2400" />
            <param name="delayin" value="2200" />
            <param name="height" value="$PARAM[height]" />
            <param name="IsGreater" value="8" />
            <param name="Flagstar" value="5" />
        </include>
        </definition>
    </include>

    <include name="Alternative_Title_Overlay">
        <control type="group">
            <visible>!String.IsEqual(ListItem.Label,..)</visible>
            <top>8</top>
            <control type="image">
                <top>257</top>
                <right>10</right>
                <height>50</height>
                <left>10</left>
                <texture colordiffuse="D9333333">common/black-back.png</texture>
            </control>
            <control type="label">
                <top>255</top>
                <width>180</width>
                <height>50</height>
                <left>20</left>
                <font>Mini</font>
                <textcolor>PanelWhite100</textcolor>
                <label>$INFO[ListItem.Label]</label>
            </control>
        </control>
    </include>

    <include name="UpdateLitebox">
        <onclick>AlarmClock(nms1,SetProperty(NINE_manual_set,"var=main,set=$INFO[Skin.String(colorbox_main)]|var=comp,set=$INFO[Skin.String(colorbox_comp)]|var=quality,set=$INFO[Skin.String(colorbox_quality)]|var=blursize,set=$INFO[Skin.String(colorbox_blursize)]|var=bitsize,set=$INFO[Skin.String(colorbox_bitsize)]|var=pixelsize,set=$INFO[Skin.String(colorbox_pixelsize)]|var=black,set=$INFO[Skin.String(colorbox_black)]|var=white,set=$INFO[Skin.String(colorbox_white)]",home),00:00,silent)</onclick>
        <onclick>AlarmClock(nms2,SetProperty(FIVE_daemon_fire,True,home),00:01,silent)</onclick>
        <onclick>AlarmClock(busy_start,SetProperty(busyloader,1,home),00:00,silent)</onclick>
        <onclick>AlarmClock(busy_end,ClearProperty(busyloader,home),00:01,silent)</onclick>
    </include>

    <include name="Def_Watched_Indicators_Clean">
        <aligny>center</aligny>
        <width>38</width>
        <height>38</height>
        <textcolor>WatchedIcons</textcolor>
        <selectedcolor>WatchedIcons</selectedcolor>
        <font>SymbolPoster</font>
    </include>
    
    <include name="def_weatherfanart.widgets">
        <param name="bordertopbottom" value="$PARAM[bordertopbottom]" default="10"/>
        <param name="borderleftright" value="$PARAM[borderleftright]" default="10"/>
        <param name="FanartCode" value="$PARAM[FanartCode]" default=""/>
        <definition>
            <control type="image">
                <top>$PARAM[bordertopbottom]</top>
                <left>$PARAM[borderleftright]</left>
                <right>$PARAM[borderleftright]</right>
                <bottom>$PARAM[bordertopbottom]</bottom>
                <texture border="5" colordiffuse="Panel">common/box.png</texture>
                <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
            </control>
            <control type="multiimage" description="Fanart">
                <visible>!Skin.HasSetting(weather.hidefanart) + !Skin.HasSetting(weather.fanart.widgets) + String.Contains(Skin.String(weather.fanart.path),multi) + !String.IsEmpty(Skin.String(weather.fanart.path))</visible>
                <top>$PARAM[bordertopbottom]</top>
                <left>$PARAM[borderleftright]</left>
                <right>$PARAM[borderleftright]</right>
                <bottom>$PARAM[bordertopbottom]</bottom>
                <fadetime>600</fadetime>
                <timeperimage>12000</timeperimage>
                <randomize>true</randomize>
                <aspectratio>scale</aspectratio>
                <animation effect="fade" start="100" end="10" condition="true">Conditional</animation>
                <imagepath background="true">$INFO[Skin.String(weather.fanart.path)]$PARAM[FanartCode]$INFO[ListItem.Property(FanartCode)]/</imagepath>
            </control>
            <control type="image" description="Fanart">
                <visible>!Skin.HasSetting(weather.hidefanart) + !Skin.HasSetting(weather.fanart.widgets) + !String.Contains(Skin.String(weather.fanart.path),multi) + !String.IsEmpty(Skin.String(weather.fanart.path))</visible>
                <top>$PARAM[bordertopbottom]</top>
                <left>$PARAM[borderleftright]</left>
                <right>$PARAM[borderleftright]</right>
                <bottom>$PARAM[bordertopbottom]</bottom>
                <aspectratio>scale</aspectratio>
                <animation effect="fade" start="100" end="10" condition="true">Conditional</animation>
                <texture background="true">$INFO[Skin.String(weather.fanart.path)]$PARAM[FanartCode]$INFO[ListItem.Property(FanartCode)].jpg</texture>
            </control>
        </definition>
    </include>

    <include name="def_weatherposter">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <right>0</right>
            <bottom>0</bottom>
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <include>def_weatherfanart.widgets</include>
        <control type="image">
            <top>90</top>
            <centerleft>50%</centerleft>
            <height>160</height>
            <width>160</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture>$INFO[ListItem.Property(FanartTexture)]</texture>
            <visible>!String.IsEmpty(Skin.String(weather.icons.path)) + !String.Contains(Skin.String(weather.icons.path),animated)</visible>
        </control>
        <control type="multiimage">
            <top>90</top>
            <centerleft>50%</centerleft>
            <height>160</height>
            <width>160</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <imagepath>$INFO[ListItem.Property(AnimatedFanartImagepath)]</imagepath>
            <visible>!String.IsEmpty(Skin.String(weather.icons.path)) + String.Contains(Skin.String(weather.icons.path),animated)</visible>
        </control>
        <control type="image">
            <top>90</top>
            <centerleft>50%</centerleft>
            <height>160</height>
            <width>160</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture>$INFO[ListItem.Property(OutlookTexture)]</texture>
            <visible>String.IsEmpty(Skin.String(weather.icons.path))</visible>
        </control>
        <control type="label">
            <top>30</top>
            <height>50</height>
            <font>NotificationBold</font>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>PanelWhite100</textcolor>
            <label fallback="10006">$INFO[ListItem.Property(Title)]</label>
        </control>
        <control type="label">
            <bottom>30</bottom>
            <aligny>center</aligny>
            <scroll>false</scroll>
            <align>center</align>
            <font>Home</font>
            <textcolor>PanelWhite100</textcolor>
            <label>$VAR[WeatherPropertyLabel]</label>
            <visible>String.IsEmpty(ListItem.Property(Today))</visible>
        </control>
        <control type="label">
            <bottom>30</bottom>
            <aligny>center</aligny>
            <scroll>false</scroll>
            <align>center</align>
            <font>Large</font>
            <textcolor>PanelWhite100</textcolor>
            <label>$INFO[ListItem.Property(HighTemp)]</label>
            <visible>!String.IsEmpty(ListItem.Property(Today))</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
    </include>

    <include name="def_weathersquare">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <right>0</right>
            <bottom>0</bottom>
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <include>def_weatherfanart.widgets</include>
        <control type="image">
            <top>90</top>
            <left>15</left>
            <height>135</height>
            <width>135</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture>$INFO[ListItem.Property(FanartTexture)]</texture>
            <visible>!String.IsEmpty(Skin.String(weather.icons.path)) + !String.Contains(Skin.String(weather.icons.path),animated)</visible>
        </control>
        <control type="multiimage">
            <top>90</top>
            <left>15</left>
            <height>135</height>
            <width>135</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <imagepath>$INFO[ListItem.Property(AnimatedFanartImagepath)]</imagepath>
            <visible>!String.IsEmpty(Skin.String(weather.icons.path)) + String.Contains(Skin.String(weather.icons.path),animated)</visible>
        </control>
        <control type="image">
            <top>90</top>
            <left>15</left>
            <height>135</height>
            <width>135</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture>$INFO[ListItem.Property(OutlookTexture)]</texture>
            <visible>String.IsEmpty(Skin.String(weather.icons.path))</visible>
        </control>
        <control type="label">
            <left>45</left>
            <right>45</right>
            <top>60</top>
            <height>50</height>
            <font>NotificationBold</font>
            <align>right</align>
            <aligny>center</aligny>
            <textcolor>PanelWhite100</textcolor>
            <label fallback="10006">$INFO[ListItem.Property(Title)]</label>
        </control>
        <control type="label">
            <bottom>130</bottom>
            <right>45</right>
            <aligny>center</aligny>
            <scroll>false</scroll>
            <align>right</align>
            <font>Home</font>
            <textcolor>PanelWhite100</textcolor>
            <label>$VAR[WeatherPropertyLabel]</label>
            <visible>String.IsEmpty(ListItem.Property(Today))</visible>
        </control>
        <control type="label">
            <bottom>130</bottom>
            <right>45</right>
            <aligny>center</aligny>
            <scroll>false</scroll>
            <align>right</align>
            <font>Large</font>
            <textcolor>PanelWhite100</textcolor>
            <label>$INFO[ListItem.Property(HighTemp)]</label>
            <visible>!String.IsEmpty(ListItem.Property(Today))</visible>
        </control>
        <control type="label">
            <left>45</left>
            <right>45</right>
            <bottom>50</bottom>
            <height>50</height>
            <font>Tiny</font>
            <align>right</align>
            <aligny>center</aligny>
            <textcolor>PanelWhite100</textcolor>
            <label>$INFO[ListItem.Label]</label>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
    </include>

    <include name="def_weatherfanart">
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <include>def_weatherfanart.widgets</include>
        <control type="image">
            <top>65</top>
            <left>30</left>
            <height>192</height>
            <width>192</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture>$INFO[ListItem.Property(FanartTexture)]</texture>
            <visible>!String.IsEmpty(Skin.String(weather.icons.path)) + !String.Contains(Skin.String(weather.icons.path),animated)</visible>
        </control>
        <control type="multiimage">
            <top>65</top>
            <left>30</left>
            <height>192</height>
            <width>192</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <imagepath>$INFO[ListItem.Property(AnimatedFanartImagepath)]</imagepath>
            <visible>!String.IsEmpty(Skin.String(weather.icons.path)) + String.Contains(Skin.String(weather.icons.path),animated)</visible>
        </control>
        <control type="image">
            <top>65</top>
            <left>50</left>
            <height>192</height>
            <width>192</width>
            <aspectratio align="center" aligny="center">keep</aspectratio>
            <texture>$INFO[ListItem.Property(OutlookTexture)]</texture>
            <visible>String.IsEmpty(Skin.String(weather.icons.path))</visible>
        </control>
        <control type="label">
            <left>292</left>
            <right>57</right>
            <top>70</top>
            <height>50</height>
            <font>NotificationBold</font>
            <align>right</align>
            <aligny>center</aligny>
            <textcolor>PanelWhite100</textcolor>
            <label fallback="10006">$INFO[ListItem.Property(Title)]</label>
        </control>
        <control type="label">
            <left>292</left>
            <right>57</right>
            <height>100%</height>
            <aligny>center</aligny>
            <scroll>false</scroll>
            <align>right</align>
            <font>Large</font>
            <textcolor>PanelWhite100</textcolor>
            <label>$VAR[WeatherPropertyLabel]</label>
            <visible>String.IsEmpty(ListItem.Property(Today))</visible>
        </control>
        <control type="label">
            <left>292</left>
            <right>57</right>
            <height>100%</height>
            <aligny>center</aligny>
            <scroll>false</scroll>
            <align>right</align>
            <font>LargeX2</font>
            <textcolor>PanelWhite100</textcolor>
            <label>$INFO[ListItem.Property(HighTemp)]</label>
            <visible>!String.IsEmpty(ListItem.Property(Today))</visible>
        </control>
        <control type="label">
            <left>242</left>
            <right>57</right>
            <bottom>70</bottom>
            <height>50</height>
            <font>Tiny</font>
            <align>right</align>
            <aligny>center</aligny>
            <textcolor>PanelWhite100</textcolor>
            <label>$INFO[ListItem.Label]</label>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
    </include>
    
    <!-- Includes Widget layouts -->
    <include name="def_widgetposter">
        <param name="indicatorbackground" value="$PARAM[indicatorbackground]" default="false"/>
        <param name="visible_title_overlay" value="$PARAM[visible_title_overlay]" default="false"/>
        <definition>
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetposter_new.png" background="true" fallback="DefaultMovies.png">$VAR[PosterImage]</texture>
            <include condition="!Skin.HasSetting(thumbnails.white)">border_texture</include>
        </control>
        <include condition="$PARAM[visible_title_overlay]">Alternative_Title_Overlay</include>
        <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
            <param name="indicatorbackground" value="$PARAM[indicatorbackground]" />
        </include>
        <include condition="Skin.HasSetting(enable.morewidget)">more</include>
        </definition>
    </include>

    <include name="def_widgetseason">
        <param name="indicatorbackground" value="$PARAM[indicatorbackground]" default="false"/>
        <param name="visible_title_overlay" value="$PARAM[visible_title_overlay]" default="false"/>
        <definition>
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
        </control>
        <control type="image">
            <left>212</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetposter_new.png" background="true" fallback="DefaultMovies.png">$VAR[SeasonImage]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>212</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetposter_new.png" background="true" fallback="DefaultMovies.png">$VAR[PosterImageOnly]</texture>
        </control>
        <include condition="$PARAM[visible_title_overlay]">Alternative_Title_Overlay</include>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
        <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
            <param name="indicatorbackground" value="$PARAM[indicatorbackground]" />
        </include>
        </definition>
    </include>

    <include name="def_widgetsquare">
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
        </control>
        <control type="image">
            <left>$PARAM[distance]</left>
            <top>$PARAM[distance]</top>
            <right>$PARAM[distance]</right>
            <bottom>$PARAM[distance]</bottom>
            <aspectratio scalediffuse="false">$PARAM[aspectratio]</aspectratio>
            <texture diffuse="diffuse/widgetsquare_new.png" background="true" fallback="DefaultMovies.png">$VAR[PosterImage]</texture>
            <visible>!String.IsEqual(ListItem.DBType,genre) + !String.EndsWith(Container.FolderPath,Genres)</visible>
        </control>
        <control type="image">
            <left>$PARAM[distance]</left>
            <top>$PARAM[distance]</top>
            <right>$PARAM[distance]</right>
            <bottom>$PARAM[distance]</bottom>
            <aspectratio scalediffuse="false">$PARAM[aspectratio]</aspectratio>
            <texture diffuse="diffuse/widgetsquare_new.png" background="true" fallback="DefaultMovies.png">$VAR[ThumbImageGenres]</texture>
            <visible>String.IsEqual(ListItem.DBType,genre) | String.EndsWith(Container.FolderPath,Genres)</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
        <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
            <param name="indicatorbackground" value="$PARAM[indicatorbackground]" />
        </include>
        <include condition="Skin.HasSetting(enable.morewidget)">more</include>
    </include>

    <include name="def_widgetsquare_system">
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <top>10</top>
            <left>10</left>
            <right>10</right>
            <bottom>10</bottom>
            <texture border="5" colordiffuse="Fallback">common/diffuse_box.png</texture>
            <animation effect="fade" start="100" end="90" condition="true">Conditional</animation>
        </control>
        <control type="image">
            <top>10</top>
            <left>10</left>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio>scale</aspectratio>
            <texture border="5">special://skin/extras/backgrounds/systeminfo.jpg</texture>
            <animation effect="fade" start="100" end="20" condition="true">Conditional</animation>
        </control>
        <control type="image">
            <width>150</width>
            <height>150</height>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">keep</aspectratio>
            <texture diffuse="diffuse/widgetsquare_new.png" background="true" fallback="DefaultMovies.png">$INFO[ListItem.Icon]</texture>
        </control>
        <control type="group">
            <left>45</left>
            <right>45</right>
            <control type="label">
                <top>25</top>
                <bottom>10</bottom>
                <align>left</align>
                <textcolor>PanelWhite100</textcolor>
                <selectedcolor>PanelWhite100</selectedcolor>
                <label>$INFO[ListItem.Label]</label>
                <font>Medium</font>
            </control>
            <control type="label">
                <top>80</top>
                <bottom>10</bottom>
                <align>left</align>
                <textcolor>PanelWhite100</textcolor>
                <selectedcolor>PanelWhite100</selectedcolor>
                <label>$INFO[ListItem.Label2]</label>
                <font>Tiny</font>
            </control>
            <control type="label">
                <top>116</top>
                <bottom>10</bottom>
                <align>left</align>
                <textcolor>PanelWhite100</textcolor>
                <selectedcolor>PanelWhite100</selectedcolor>
                <label>$INFO[ListItem.Property(Label3)]</label>
                <animation effect="slide" end="0,-36" condition="String.IsEmpty(ListItem.Label2)" time="0">Conditional</animation>
                <font>Tiny</font>
            </control>
        </control>
        <control type="image">
            <width>10</width>
            <height>80</height>
            <left>45</left>
            <bottom>45</bottom>
            <texture colordiffuse="FF0A0A0A" border="4" background="true">common/white.png</texture>
            <visible>String.IsEqual(ListItem.Property(Label4),cpu) | String.IsEqual(ListItem.Property(Label4),ram) | String.IsEqual(ListItem.Property(Label4),storage)</visible>
        </control>
        <control type="progress">
            <height>10</height>
            <width>80</width>
            <bottom>80</bottom>
            <left>10</left>
            <info>System.CPUUsage</info>
            <include>DefSettingsButton</include>
            <animation effect="rotate" condition="true" start="360" end="90" loop="false" time="0" center="auto">Conditional</animation>
            <visible>String.IsEqual(ListItem.Property(Label4),cpu)</visible>
        </control>
        <control type="progress">
            <height>10</height>
            <width>80</width>
            <bottom>80</bottom>
            <left>10</left>
            <info>system.memory(used)</info>
            <include>DefSettingsButton</include>
            <animation effect="rotate" condition="true" start="360" end="90" loop="false" time="0" center="auto">Conditional</animation>
            <visible>String.IsEqual(ListItem.Property(Label4),ram)</visible>
        </control>
        <control type="progress">
            <height>10</height>
            <width>80</width>
            <bottom>80</bottom>
            <left>10</left>
            <info>System.UsedSpace</info>
            <include>DefSettingsButton</include>
            <animation effect="rotate" condition="true" start="360" end="90" loop="false" time="0" center="auto">Conditional</animation>
            <visible>String.IsEqual(ListItem.Property(Label4),storage)</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
    </include>

    <include name="def_widgetfanart">
        <param name="indicatorbackground" value="$PARAM[indicatorbackground]" default="false"/>
        <param name="small" value="$PARAM[smallfanart]" default="false"/>
        <definition>
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetfanart_new.png" background="true" fallback="DefaultMovies.png">$VAR[WidgetFanartImage]</texture>
            <visible>!String.IsEqual(ListItem.DBType,genre) + !String.EndsWith(Container.FolderPath,Genres) + !$PARAM[small]</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>101</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetfanart_top.png" background="true" fallback="DefaultMovies.png">$VAR[WidgetFanartImage]</texture>
            <visible>!String.IsEqual(ListItem.DBType,genre) + !String.EndsWith(Container.FolderPath,Genres) + $PARAM[small]</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <include content="def_bottom" condition="$PARAM[small]">
                <param name="bottom" value="101" />
            </include>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetfanart_new.png" background="true" fallback="DefaultMovies.png">$VAR[ThumbImageGenres]</texture>
            <visible>String.IsEqual(ListItem.DBType,genre) | String.EndsWith(Container.FolderPath,Genres)</visible>
        </control>
        <control type="label">
            <bottom>40</bottom>
            <left>35</left>
            <right>35</right>
            <align>center</align>
            <font>Tiny</font>
            <textcolor>PanelWhite70</textcolor>
            <selectedcolor>PanelWhite70</selectedcolor>
            <label>$INFO[ListItem.label]</label>
            <visible>$PARAM[small]</visible>
        </control>
        <control type="label">
            <bottom>10</bottom>
            <left>35</left>
            <right>35</right>
            <align>center</align>
            <font>Tiny</font>
            <textcolor>PanelWhite30</textcolor>
            <selectedcolor>PanelWhite30</selectedcolor>
            <label>$VAR[LabelGenreHomeSmallWidget]</label>
            <visible>$PARAM[small]</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
        <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
            <param name="indicatorbackground" value="$PARAM[indicatorbackground]" />
        </include>
        <include condition="Skin.HasSetting(enable.morewidget)">more</include>
        </definition>
    </include>

    <include name="def_widgetlandscape">
        <param name="indicatorbackground" value="$PARAM[indicatorbackground]" default="false"/>
        <param name="clearlogo" value="$PARAM[clearlogo]" default="false"/>
        <definition>
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetfanart_new.png" background="true" fallback="DefaultMovies.png">$VAR[FanartImage]</texture>
            <visible>!String.IsEqual(ListItem.DBType,genre) + !String.EndsWith(Container.FolderPath,Genres)</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetsquare_new.png" background="true" fallback="DefaultMovies.png">$VAR[ThumbImageGenres]</texture>
            <visible>String.IsEqual(ListItem.DBType,genre) | String.EndsWith(Container.FolderPath,Genres)</visible>
        </control>
        <include content="ClearLogoImage" condition="$PARAM[clearlogo]">
            <param name="width" value="250"/>
            <param name="right" value="30"/>
            <param name="bottom" value="20"/>
        </include>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
        <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
            <param name="indicatorbackground" value="$PARAM[indicatorbackground]" />
        </include>
        </definition>
    </include>

    <include name="def_widgetbanner">
        <param name="indicatorbackground" value="$PARAM[indicatorbackground]" default="false"/>
        <definition>
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetbanner_new.png" background="true" fallback="DefaultMovies.png">$VAR[BannerImage]</texture>
            <visible>Window.IsVisible(home)</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetbanner_small.png" background="true" fallback="DefaultMovies.png">$VAR[BannerImage]</texture>
            <visible>!Window.IsVisible(home)</visible>
        </control>
        <control type="image">
            <width>500</width>
            <right>30</right>
            <bottom>30</bottom>
            <top>30</top>
            <aspectratio align="right" aligny="bottom">keep</aspectratio>
            <texture background="true">$VAR[ClearLogoHome]</texture>
            <visible>String.IsEmpty(ListItem.Art(banner)) + String.IsEmpty(ListItem.Art(tvshow.banner))</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
        <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
            <param name="indicatorbackground" value="$PARAM[indicatorbackground]" />
        </include>
        <include condition="Skin.HasSetting(enable.morewidget)">more</include>
        </definition>
    </include>

    <include name="def_widgetthumb">
        <param name="indicatorbackground" value="$PARAM[indicatorbackground]" default="false"/>
        <param name="clearlogo" value="$PARAM[clearlogo]" default="false"/>
        <param name="small" value="$PARAM[smallthumb]" default="false"/>
        <param name="poster" value="$PARAM[poster]" default="false"/>
        <definition>
        <control type="image">
            <texture border="11" background="true">common/$VAR[nofocus-shadow10]</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="Fallback" border="4" background="true">common/diffuse_box.png</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>390</right>
            <include content="def_bottom" condition="$PARAM[small]">
                <param name="bottom" value="101" />
            </include>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetposter_left.png" background="true" fallback="DefaultMovies.png">$VAR[PosterImage]</texture>
            <visible>$PARAM[poster]</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetfanart_new.png" background="true" fallback="DefaultMovies.png">$VAR[WidgetThumbnailImage]</texture>
            <visible>!String.IsEqual(ListItem.DBType,genre) + !String.EndsWith(Container.FolderPath,Genres) + !$PARAM[small]</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>101</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetfanart_top.png" background="true" fallback="DefaultMovies.png">$VAR[WidgetThumbnailImage]</texture>
            <visible>!String.IsEqual(ListItem.DBType,genre) + !String.EndsWith(Container.FolderPath,Genres) + $PARAM[small] + !$PARAM[poster]</visible>
        </control>
        <control type="image">
            <left>154</left>
            <top>10</top>
            <right>10</right>
            <bottom>101</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetfanart_topright.png" border="1" background="true" fallback="DefaultMovies.png">$VAR[WidgetThumbnailImage]</texture>
            <visible>!String.IsEqual(ListItem.DBType,genre) + !String.EndsWith(Container.FolderPath,Genres) + $PARAM[small] + $PARAM[poster]</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <include content="def_bottom" condition="$PARAM[small]">
                <param name="bottom" value="101" />
            </include>
            <bottom>10</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/widgetfanart_new.png" border="1" background="true" fallback="DefaultMovies.png">$VAR[ThumbImageGenres]</texture>
            <visible>String.IsEqual(ListItem.DBType,genre) | String.EndsWith(Container.FolderPath,Genres)</visible>
        </control>
        <control type="image">
            <width>200</width>
            <right>30</right>
            <include content="def_bottom" condition="$PARAM[small]">
                <param name="bottom" value="101" />
            </include>
            <bottom>30</bottom>
            <aspectratio align="right" aligny="bottom">keep</aspectratio>
            <texture background="true">$VAR[ClearLogoHome]</texture>
            <visible>$PARAM[clearlogo]</visible>
            <visible>!String.IsEqual(ListItem.DBType,genre) + !String.EndsWith(Container.FolderPath,Genres)</visible>
        </control>
        <control type="label">
            <bottom>40</bottom>
            <left>35</left>
            <right>35</right>
            <align>center</align>
            <font>Tiny</font>
            <textcolor>PanelWhite70</textcolor>
            <selectedcolor>PanelWhite70</selectedcolor>
            <label>$INFO[ListItem.label]</label>
            <visible>$PARAM[small]</visible>
        </control>
        <control type="label">
            <bottom>10</bottom>
            <left>35</left>
            <right>35</right>
            <align>center</align>
            <font>Tiny</font>
            <textcolor>PanelWhite30</textcolor>
            <selectedcolor>PanelWhite30</selectedcolor>
            <label>$VAR[LabelGenreHomeSmallWidget]</label>
            <visible>$PARAM[small]</visible>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>10</bottom>
            <texture colordiffuse="BoxWidget" border="4" background="true">common/box21.png</texture>
            <visible>!Skin.HasSetting(thumbnails.white)</visible>
        </control>
        <include content="IndicatorPoster" condition="!Skin.HasSetting(hide.markers)">
            <param name="indicatorbackground" value="$PARAM[indicatorbackground]" />
        </include>
        <include condition="Skin.HasSetting(enable.morewidget)">more</include>
        </definition>
    </include>
    
    <include name="def_widgetpvrfocus">
        <control type="image">
            <left>3</left>
            <top>1</top>
            <right>-17</right>
            <bottom>-14</bottom>
            <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
            <visible>Control.HasFocus($PARAM[shortcutsid])</visible>
            <include>Animation.SelectBoxHome</include>
        </control>
        <control type="image">
            <left>3</left>
            <top>1</top>
            <right>-17</right>
            <bottom>-14</bottom>
            <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox.png</texture>
            <visible>Control.HasFocus($PARAM[shortcutsid])</visible>
            <include>Animation.SelectBoxHome</include>
        </control>
    </include>

    <include name="def_widgetpvr">
        <control type="group">
            <top>9</top>
            <control type="image">
                <left>1</left>
                <top>-8</top>
                <right>-18</right>
                <bottom>-14</bottom>
                <texture colordiffuse="Panel" border="16">common/rounded-shadow8.png</texture>
            </control>
            <control type="image">
                <width>100%</width>
                <left>10</left>
                <height>59</height>
                <texture border="5" colordiffuse="Fallback">common/box.png</texture>
            </control>
            <control type="image">
                <width>100%</width>
                <left>10</left>
                <height>59</height>
                <texture border="5" colordiffuse="Black12">common/box.png</texture>
            </control>
            <control type="image">
                <width>100%</width>
                <left>10</left>
                <height>59</height>
                <texture>common/selected.png</texture>
                <aspectratio aligny="top">scale</aspectratio>
                <animation effect="fade" start="100" end="5" condition="true">Conditional</animation>
                <visible>ListItem.IsPlaying</visible>
            </control>
            <control type="image">
                <left>70</left>
                <width>130</width>
                <bottom>0</bottom>
                <top>5</top>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <texture>$INFO[ListItem.Icon]</texture>
            </control>
            <control type="group">
                <top>-1</top>
                <control type="label">
                    <posx>223</posx>
                    <width>180</width>
                    <aligny>center</aligny>
                    <height>59</height>
                    <font>ChannelInfo</font>
                    <textcolor>Selected</textcolor>
                    <selectedcolor>Selected</selectedcolor>
                    <label>$INFO[ListItem.ChannelName]</label>
                </control>
                <control type="label">
                    <centerleft>45</centerleft>
                    <width>90</width>
                    <align>center</align>
                    <aligny>center</aligny>
                    <height>59</height>
                    <font>ChannelInfo</font>
                    <textcolor>Selected</textcolor>
                    <selectedcolor>Selected</selectedcolor>
                    <label>$INFO[ListItem.ChannelNumberLabel]</label>
                </control>
                <control type="label">
                    <posx>420</posx>
                    <width>640</width>
                    <aligny>center</aligny>
                    <height>59</height>
                    <font>ChannelInfo</font>
                    <textcolor>PanelWhite70</textcolor>
                    <selectedcolor>PanelWhite70</selectedcolor>
                    <label>$INFO[ListItem.StartTime] - $INFO[ListItem.EndTime]    $INFO[ListItem.Title]</label>
                </control>
                <control type="label">
                    <posx>1100</posx>
                    <width>640</width>
                    <aligny>center</aligny>
                    <height>59</height>
                    <font>ChannelInfo</font>
                    <textcolor>PanelWhite70</textcolor>
                    <selectedcolor>PanelWhite70</selectedcolor>
                    <label>$INFO[ListItem.NextStartTime] - $INFO[ListItem.NextEndTime]    $INFO[ListItem.NextTitle]</label>
                </control>
            </control>
        </control>
    </include>

    <include name="def_widget_glow">
        <param name="glow_height" value="$PARAM[glow_height]" default="320"/>
        <param name="glow_top" value="$PARAM[glow_top]" default="2"/>
        <param name="glow_left" value="$PARAM[glow_left]" default="0"/>
        <param name="glow_right" value="$PARAM[glow_right]" default="1"/>
        <param name="glow_zoom" value="$PARAM[glow_zoom]" default="108"/>
        <definition>
        <control type="group">
            <visible>Skin.HasSetting(items.focus.glow)</visible>
            <animation center="auto" effect="zoom" end="$PARAM[glow_zoom]" start="100" time="0" condition="true">Conditional</animation>
            <animation effect="fade" start="100" end="66" time="0" condition="Skin.HasSetting(items.focus.glow.low)">Conditional</animation>
            <control type="image">
                <left>$PARAM[glow_left]</left>
                <top>$PARAM[glow_top]</top>
                <right>$PARAM[glow_right]</right>
                <bottom>0</bottom>
                <height>$PARAM[glow_height]</height>
                <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox2.png</texture>
                <visible>Control.HasFocus($PARAM[id])</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
            <control type="image">
                <left>$PARAM[glow_left]</left>
                <top>$PARAM[glow_top]</top>
                <right>$PARAM[glow_right]</right>
                <bottom>0</bottom>
                <height>$PARAM[glow_height]</height>
                <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox2.png</texture>
                <visible>Control.HasFocus($PARAM[id])</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
            <control type="image">
                <left>$PARAM[glow_left]</left>
                <top>$PARAM[glow_top]</top>
                <right>$PARAM[glow_right]</right>
                <bottom>0</bottom>
                <height>$PARAM[glow_height]</height>
                <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox2.png</texture>
                <visible>Control.HasFocus($PARAM[id]) + Skin.HasSetting(items.focus.glow.full)</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
            <control type="image">
                <left>$PARAM[glow_left]</left>
                <top>$PARAM[glow_top]</top>
                <right>$PARAM[glow_right]</right>
                <bottom>0</bottom>
                <height>$PARAM[glow_height]</height>
                <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox2.png</texture>
                <visible>Control.HasFocus($PARAM[id]) + Skin.HasSetting(items.focus.glow.full)</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
        </control>
        </definition>
    </include>
    
    <include name="def_widgetfocus">       
        <include content="def_widget_glow">
            <param name="glow_height" value="$PARAM[glow_height]" />
            <param name="glow_top" value="$PARAM[glow_top]" />
            <param name="glow_left" value="$PARAM[glow_left]" />
            <param name="glow_right" value="$PARAM[glow_right]" />
            <param name="glow_zoom" value="$PARAM[glow_zoom]" />
            <param name="id" value="$PARAM[id]" />
        </include>        
        <control type="group">
            <visible>!Skin.HasSetting(items.focus.zoom)</visible>
            <control type="image">
                <left>3</left>
                <top>3</top>
                <right>3</right>
                <bottom>3</bottom>
                <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
                <visible>Control.HasFocus($PARAM[id])</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
            <control type="image">
                <left>3</left>
                <top>3</top>
                <right>3</right>
                <bottom>3</bottom>
                <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox.png</texture>
                <visible>Control.HasFocus($PARAM[id])</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
        </control>
        <control type="group">
            <visible>Skin.HasSetting(items.focus.zoom)</visible>
            <control type="image">
                <left>4</left>
                <top>4</top>
                <right>4</right>
                <bottom>4</bottom>
                <texture colordiffuse="$VAR[ColorSquares]" border="20">common/selectbox.png</texture>
                <visible>Control.HasFocus($PARAM[id])</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
            <control type="image">
                <left>4</left>
                <top>4</top>
                <right>4</right>
                <bottom>4</bottom>
                <texture colordiffuse="$VAR[ColorHighlightSelectbox2]" border="20">common/gradient-selectbox.png</texture>
                <visible>Control.HasFocus($PARAM[id])</visible>
                <include>Animation.SelectBoxHome</include>
            </control>
        </control>
    </include>
    
    <include name="DefUpdateBlur">
        <onclick>Skin.SetString(BlurRadius,$PARAM[number])</onclick>
        <onclick>RunScript(script.embuary.helper,action=blurimg,file='"$VAR[CustomBlurImage]"',prop=BlurImage)</onclick>
        <onclick>Close</onclick>
    </include>
    
    <include name="DefTrailerVideoWindowSmall">
        <width>1280</width>
        <height>720</height>
        <right>0</right>
        <top>0</top>
        <animation effect="slide" start="0,0" end="0,-90" time="0" condition="Skin.HasSetting(home.netflix.autoplay.trailer.custom.window.force)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,-50" time="0" condition="Skin.HasSetting(home.netflix.autoplay.trailer.custom.window) + String.IsEqual(VideoPlayer.VideoAspect,1.85) + !String.IsEmpty(VideoPlayer.VideoAspect)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,-90" time="0" condition="Skin.HasSetting(home.netflix.autoplay.trailer.custom.window) + !String.IsEqual(VideoPlayer.VideoAspect,1.85) + !String.IsEqual(VideoPlayer.VideoAspect,1.78) + !String.IsEqual(VideoPlayer.VideoAspect,1.66) + !String.IsEqual(VideoPlayer.VideoAspect,1.37) + !String.IsEqual(VideoPlayer.VideoAspect,1.33) + !String.IsEmpty(VideoPlayer.VideoAspect)">Conditional</animation>
        <animation type="WindowClose" reversible="false">
            <effect type="zoom" center="auto" start="100" end="0" time="0" />
        </animation>
    </include>
    
    <include name="DefTrailerVideoWindowFullscreen">
        <include>Dimensions_Fullscreen</include>
    </include>
</includes>
